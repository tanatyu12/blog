{"version":3,"sources":["../../src/promise.js"],"names":["filterPromises","arr","filter","Promise","all","map","entry","then","bits","shift","resolvePromiseProperties","obj","promiseKeys","Object","keys","key","promises","resolvedPromises","assign","fn","p","resolve"],"mappings":";;;;;;;AAAA;;;;AAEO,MAAMA,cAAc,GAAG,CAACC,GAAD,EAAMC,MAAN,KAC5BC,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,GAAJ,CAAQC,KAAK,IAAIJ,MAAM,CAACI,KAAD,CAAvB,CAAZ,EAA6CC,IAA7C,CAAkDC,IAAI,IAAIP,GAAG,CAACC,MAAJ,CAAW,MAAMM,IAAI,CAACC,KAAL,EAAjB,CAA1D,CADK;;;;AAGA,MAAMC,wBAAwB,GAAGC,GAAG,IAAI;AAC7C;AACA,QAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBT,MAAjB,CAAwBa,GAAG,IAAI,OAAOJ,GAAG,CAACI,GAAD,CAAH,CAASR,IAAhB,KAAyB,UAAxD,CAApB;AAEA,QAAMS,QAAQ,GAAGJ,WAAW,CAACP,GAAZ,CAAgBU,GAAG,IAAIJ,GAAG,CAACI,GAAD,CAA1B,CAAjB,CAJ6C,CAM7C;;AACA,SAAOZ,OAAO,CAACC,GAAR,CAAYY,QAAZ,EAAsBT,IAAtB,CAA2BU,gBAAgB,IAChD;AACA;AACAJ,EAAAA,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBP,GAAlB,EAAuB,wBAAUC,WAAV,EAAuBK,gBAAvB,CAAvB,CAHK,CAAP;AAKD,CAZM;;;;AAcA,MAAMV,IAAI,GAAGY,EAAE,IAAIC,CAAC,IAAIjB,OAAO,CAACkB,OAAR,CAAgBD,CAAhB,EAAmBb,IAAnB,CAAwBY,EAAxB,CAAxB","sourcesContent":["import zipObject from 'lodash/zipObject';\n\nexport const filterPromises = (arr, filter) =>\n  Promise.all(arr.map(entry => filter(entry))).then(bits => arr.filter(() => bits.shift()));\n\nexport const resolvePromiseProperties = obj => {\n  // Get the keys which represent promises\n  const promiseKeys = Object.keys(obj).filter(key => typeof obj[key].then === 'function');\n\n  const promises = promiseKeys.map(key => obj[key]);\n\n  // Resolve all promises\n  return Promise.all(promises).then(resolvedPromises =>\n    // Return a copy of obj with promises overwritten by their\n    // resolved values\n    Object.assign({}, obj, zipObject(promiseKeys, resolvedPromises)),\n  );\n};\n\nexport const then = fn => p => Promise.resolve(p).then(fn);\n"],"file":"promise.js"}