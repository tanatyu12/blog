{"version":3,"sources":["../../src/Cursor.js"],"names":["jsToMap","obj","undefined","immutableObj","Map","isMap","Error","knownMetaKeys","filterUnknownMetaKeys","meta","filter","v","k","has","createCursorMap","length","toObject","actions","data","update","hasAction","cursorMap","action","hasIn","getActionHandlers","handler","get","toMap","map","Cursor","create","args","constructor","store","updateStore","updateInStore","updateIn","addAction","add","removeAction","delete","setActions","set","mergeActions","oldActions","union","setData","mergeData","mergeIn","wrapData","oldData","unwrapData","clearData","setMeta","mergeMeta","oldMeta","merge","CURSOR_COMPATIBILITY_SYMBOL","Symbol"],"mappings":"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","sourcesContent":["import { fromJS, Map, Set } from 'immutable';\n\nconst jsToMap = obj => {\n  if (obj === undefined) {\n    return Map();\n  }\n  const immutableObj = fromJS(obj);\n  if (!Map.isMap(immutableObj)) {\n    throw new Error('Object must be equivalent to a Map.');\n  }\n  return immutableObj;\n};\n\nconst knownMetaKeys = Set(['index', 'count', 'pageSize', 'pageCount', 'usingOldPaginationAPI']);\nconst filterUnknownMetaKeys = meta => meta.filter((v, k) => knownMetaKeys.has(k));\n\n/*\n  createCursorMap takes one of three signatures:\n  - () -> cursor with empty actions, data, and meta\n  - (cursorMap: <object/Map with optional actions, data, and meta keys>) -> cursor\n  - (actions: <array/List>, data: <object/Map>, meta: <optional object/Map>) -> cursor\n*/\nconst createCursorMap = (...args) => {\n  const { actions, data, meta } =\n    args.length === 1\n      ? jsToMap(args[0]).toObject()\n      : { actions: args[0], data: args[1], meta: args[2] };\n  return Map({\n    // actions are a Set, rather than a List, to ensure an efficient .has\n    actions: Set(actions),\n\n    // data and meta are Maps\n    data: jsToMap(data),\n    meta: jsToMap(meta).update(filterUnknownMetaKeys),\n  });\n};\n\nconst hasAction = (cursorMap, action) => cursorMap.hasIn(['actions', action]);\n\nconst getActionHandlers = (cursorMap, handler) =>\n  cursorMap\n    .get('actions', Set())\n    .toMap()\n    .map(action => handler(action));\n\n// The cursor logic is entirely functional, so this class simply\n// provides a chainable interface\nexport default class Cursor {\n  static create(...args) {\n    return new Cursor(...args);\n  }\n\n  constructor(...args) {\n    if (args[0] instanceof Cursor) {\n      return args[0];\n    }\n\n    this.store = createCursorMap(...args);\n    this.actions = this.store.get('actions');\n    this.data = this.store.get('data');\n    this.meta = this.store.get('meta');\n  }\n\n  updateStore(...args) {\n    return new Cursor(this.store.update(...args));\n  }\n  updateInStore(...args) {\n    return new Cursor(this.store.updateIn(...args));\n  }\n\n  hasAction(action) {\n    return hasAction(this.store, action);\n  }\n  addAction(action) {\n    return this.updateStore('actions', actions => actions.add(action));\n  }\n  removeAction(action) {\n    return this.updateStore('actions', actions => actions.delete(action));\n  }\n  setActions(actions) {\n    return this.updateStore(store => store.set('actions', Set(actions)));\n  }\n  mergeActions(actions) {\n    return this.updateStore('actions', oldActions => oldActions.union(actions));\n  }\n  getActionHandlers(handler) {\n    return getActionHandlers(this.store, handler);\n  }\n\n  setData(data) {\n    return new Cursor(this.store.set('data', jsToMap(data)));\n  }\n  mergeData(data) {\n    return new Cursor(this.store.mergeIn(['data'], jsToMap(data)));\n  }\n  wrapData(data) {\n    return this.updateStore('data', oldData => jsToMap(data).set('wrapped_cursor_data', oldData));\n  }\n  unwrapData() {\n    return [\n      this.store.get('data').delete('wrapped_cursor_data'),\n      this.updateStore('data', data => data.get('wrapped_cursor_data')),\n    ];\n  }\n  clearData() {\n    return this.updateStore('data', () => Map());\n  }\n\n  setMeta(meta) {\n    return this.updateStore(store => store.set('meta', jsToMap(meta)));\n  }\n  mergeMeta(meta) {\n    return this.updateStore(store => store.update('meta', oldMeta => oldMeta.merge(jsToMap(meta))));\n  }\n}\n\n// This is a temporary hack to allow cursors to be added to the\n// interface between backend.js and backends without modifying old\n// backends at all. This should be removed in favor of wrapping old\n// backends with a compatibility layer, as part of the backend API\n// refactor.\nexport const CURSOR_COMPATIBILITY_SYMBOL = Symbol('cursor key for compatibility with old backends');\n"],"file":"Cursor.js"}