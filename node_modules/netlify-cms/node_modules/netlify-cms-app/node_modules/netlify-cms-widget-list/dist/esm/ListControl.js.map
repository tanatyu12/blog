{"version":3,"sources":["../../src/ListControl.js"],"names":["valueToString","value","join","replace","ObjectControl","NetlifyCmsWidgetObject","controlComponent","ListItem","SortableListItem","StyledListItemTopBar","ListItemTopBar","colors","textFieldBorder","NestedObjectLabel","props","collapsed","error","errorText","lengths","borderRadius","styleStrings","collapsedObjectControl","objectWidgetTopBarContainer","objectWidgetTopBarContainerPadding","styles","listControlItem","listControlItemCollapsed","SortableList","items","renderItem","map","valueTypes","SINGLE","MULTIPLE","MIXED","ListControl","React","Component","constructor","field","get","TYPES_KEY","e","onChange","oldValue","state","newValue","target","listValue","split","match","pop","parsedValue","setState","val","trim","setActiveStyle","el","filter","setInactiveStyle","preventDefault","getValueType","itemsCollapsed","push","type","typeKey","set","ref","validations","validate","forEach","validateListItem","idx","index","event","metadata","clearFieldErrors","collectionName","isSingleField","metadataRemovePath","valueSeq","parsedMetadata","removeIn","removedItemIndex","count","delete","remove","splice","allItemsCollapsed","every","Array","size","fill","oldIndex","newIndex","item","insert","updatedItemsCollapsed","classNameWrapper","editorControl","onValidateObject","fieldsErrors","controlRef","resolveWidget","renderErroneousTypedItem","handleItemCollapseToggle","handleRemove","SortableHandle","objectLabel","css","cx","handleChangeFor","processControlRef","shouldComponentUpdate","fieldName","newMetadata","newObjectValue","getObjectValue","Object","assign","toJS","multiFields","singleField","labelField","first","toString","errorMessage","renderListControl","forID","label","labelSingular","listLabel","toLowerCase","handleAdd","handleAddType","handleCollapseAllToggle","onSortEnd","renderInput","handleChange","handleFocus","handleBlur","render","ImmutablePropTypes","PropTypes","func","isRequired","onChangeObject","list","object","string","mediaPaths","getAsset","onOpenMediaLibrary","onAddAsset","onRemoveInsertedMedia"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport styled from '@emotion/styled';\nimport { jsx, css, ClassNames } from '@emotion/core';\nimport { List, Map } from 'immutable';\nimport { partial } from 'lodash';\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport NetlifyCmsWidgetObject from 'netlify-cms-widget-object';\nimport {\n  TYPES_KEY,\n  getTypedFieldForValue,\n  resolveFieldKeyType,\n  getErrorMessageForTypedFieldAndValue,\n} from './typedListHelpers';\nimport { ListItemTopBar, ObjectWidgetTopBar, colors, lengths } from 'netlify-cms-ui-default';\n\nfunction valueToString(value) {\n  return value ? value.join(',').replace(/,([^\\s]|$)/g, ', $1') : '';\n}\n\nconst ObjectControl = NetlifyCmsWidgetObject.controlComponent;\n\nconst ListItem = styled.div();\n\nconst SortableListItem = SortableElement(ListItem);\n\nconst StyledListItemTopBar = styled(ListItemTopBar)`\n  background-color: ${colors.textFieldBorder};\n`;\n\nconst NestedObjectLabel = styled.div`\n  display: ${props => (props.collapsed ? 'block' : 'none')};\n  border-top: 0;\n  color: ${props => (props.error ? colors.errorText : 'inherit')};\n  background-color: ${colors.textFieldBorder};\n  padding: 13px;\n  border-radius: 0 0 ${lengths.borderRadius} ${lengths.borderRadius};\n`;\n\nconst styleStrings = {\n  collapsedObjectControl: `\n    display: none;\n  `,\n  objectWidgetTopBarContainer: `\n    padding: ${lengths.objectWidgetTopBarContainerPadding};\n  `,\n};\n\nconst styles = {\n  listControlItem: css`\n    margin-top: 18px;\n\n    &:first-of-type {\n      margin-top: 26px;\n    }\n  `,\n  listControlItemCollapsed: css`\n    padding-bottom: 0;\n  `,\n};\n\nconst SortableList = SortableContainer(({ items, renderItem }) => {\n  return <div>{items.map(renderItem)}</div>;\n});\n\nconst valueTypes = {\n  SINGLE: 'SINGLE',\n  MULTIPLE: 'MULTIPLE',\n  MIXED: 'MIXED',\n};\n\nexport default class ListControl extends React.Component {\n  validations = [];\n\n  static propTypes = {\n    metadata: ImmutablePropTypes.map,\n    onChange: PropTypes.func.isRequired,\n    onChangeObject: PropTypes.func.isRequired,\n    onValidateObject: PropTypes.func.isRequired,\n    value: ImmutablePropTypes.list,\n    field: PropTypes.object,\n    forID: PropTypes.string,\n    controlRef: PropTypes.func,\n    mediaPaths: ImmutablePropTypes.map.isRequired,\n    getAsset: PropTypes.func.isRequired,\n    onOpenMediaLibrary: PropTypes.func.isRequired,\n    onAddAsset: PropTypes.func.isRequired,\n    onRemoveInsertedMedia: PropTypes.func.isRequired,\n    classNameWrapper: PropTypes.string.isRequired,\n    setActiveStyle: PropTypes.func.isRequired,\n    setInactiveStyle: PropTypes.func.isRequired,\n    editorControl: PropTypes.func.isRequired,\n    resolveWidget: PropTypes.func.isRequired,\n    clearFieldErrors: PropTypes.func.isRequired,\n    fieldsErrors: ImmutablePropTypes.map.isRequired,\n  };\n\n  static defaultProps = {\n    value: List(),\n  };\n\n  constructor(props) {\n    super(props);\n    const { field, value } = props;\n    const allItemsCollapsed = field.get('collapsed', true);\n    const itemsCollapsed = value && Array(value.size).fill(allItemsCollapsed);\n\n    this.state = {\n      itemsCollapsed: List(itemsCollapsed),\n      value: valueToString(value),\n    };\n  }\n\n  getValueType = () => {\n    const { field } = this.props;\n    if (field.get('fields')) {\n      return valueTypes.MULTIPLE;\n    } else if (field.get('field')) {\n      return valueTypes.SINGLE;\n    } else if (field.get(TYPES_KEY)) {\n      return valueTypes.MIXED;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Always update so that each nested widget has the option to update. This is\n   * required because ControlHOC provides a default `shouldComponentUpdate`\n   * which only updates if the value changes, but every widget must be allowed\n   * to override this.\n   */\n  shouldComponentUpdate() {\n    return true;\n  }\n\n  handleChange = e => {\n    const { onChange } = this.props;\n    const oldValue = this.state.value;\n    const newValue = e.target.value;\n    const listValue = e.target.value.split(',');\n    if (newValue.match(/,$/) && oldValue.match(/, $/)) {\n      listValue.pop();\n    }\n\n    const parsedValue = valueToString(listValue);\n    this.setState({ value: parsedValue });\n    onChange(listValue.map(val => val.trim()));\n  };\n\n  handleFocus = () => {\n    this.props.setActiveStyle();\n  };\n\n  handleBlur = e => {\n    const listValue = e.target.value\n      .split(',')\n      .map(el => el.trim())\n      .filter(el => el);\n    this.setState({ value: valueToString(listValue) });\n    this.props.setInactiveStyle();\n  };\n\n  handleAdd = e => {\n    e.preventDefault();\n    const { value, onChange } = this.props;\n    const parsedValue = this.getValueType() === valueTypes.SINGLE ? null : Map();\n    this.setState({ itemsCollapsed: this.state.itemsCollapsed.push(false) });\n    onChange((value || List()).push(parsedValue));\n  };\n\n  handleAddType = (type, typeKey) => {\n    const { value, onChange } = this.props;\n    let parsedValue = Map().set(typeKey, type);\n    this.setState({ itemsCollapsed: this.state.itemsCollapsed.push(false) });\n    onChange((value || List()).push(parsedValue));\n  };\n\n  processControlRef = ref => {\n    if (!ref) return;\n    this.validations.push(ref.validate);\n  };\n\n  validate = () => {\n    this.validations.forEach(validateListItem => {\n      validateListItem();\n    });\n  };\n\n  /**\n   * In case the `onChangeObject` function is frozen by a child widget implementation,\n   * e.g. when debounced, always get the latest object value instead of using\n   * `this.props.value` directly.\n   */\n  getObjectValue = idx => this.props.value.get(idx) || Map();\n\n  handleChangeFor(index) {\n    return (fieldName, newValue, newMetadata) => {\n      const { value, metadata, onChange, field } = this.props;\n      const collectionName = field.get('name');\n      const newObjectValue =\n        this.getValueType() !== valueTypes.SINGLE\n          ? this.getObjectValue(index).set(fieldName, newValue)\n          : newValue;\n      const parsedMetadata = {\n        [collectionName]: Object.assign(metadata ? metadata.toJS() : {}, newMetadata || {}),\n      };\n      onChange(value.set(index, newObjectValue), parsedMetadata);\n    };\n  }\n\n  handleRemove = (index, event) => {\n    event.preventDefault();\n    const { itemsCollapsed } = this.state;\n    const { value, metadata, onChange, field, clearFieldErrors } = this.props;\n    const collectionName = field.get('name');\n    const isSingleField = this.getValueType() === valueTypes.SINGLE;\n\n    const metadataRemovePath = isSingleField ? value.get(index) : value.get(index).valueSeq();\n    const parsedMetadata = metadata && { [collectionName]: metadata.removeIn(metadataRemovePath) };\n\n    // Removed item object index is the last item in the list\n    const removedItemIndex = value.count() - 1;\n\n    this.setState({ itemsCollapsed: itemsCollapsed.delete(index) });\n\n    onChange(value.remove(index), parsedMetadata);\n    clearFieldErrors();\n\n    // Remove deleted item object validation\n    if (this.validations) {\n      this.validations.splice(removedItemIndex, 1);\n    }\n  };\n\n  handleItemCollapseToggle = (index, event) => {\n    event.preventDefault();\n    const { itemsCollapsed } = this.state;\n    const collapsed = itemsCollapsed.get(index);\n    this.setState({ itemsCollapsed: itemsCollapsed.set(index, !collapsed) });\n  };\n\n  handleCollapseAllToggle = e => {\n    e.preventDefault();\n    const { value } = this.props;\n    const { itemsCollapsed } = this.state;\n    const allItemsCollapsed = itemsCollapsed.every(val => val === true);\n    this.setState({ itemsCollapsed: List(Array(value.size).fill(!allItemsCollapsed)) });\n  };\n\n  objectLabel(item) {\n    const { field } = this.props;\n    if (this.getValueType() === valueTypes.MIXED) {\n      return getTypedFieldForValue(field, item).get('label', field.get('name'));\n    }\n    const multiFields = field.get('fields');\n    const singleField = field.get('field');\n    const labelField = (multiFields && multiFields.first()) || singleField;\n    const value = multiFields\n      ? item.get(multiFields.first().get('name'))\n      : singleField.get('label');\n    return (value || `No ${labelField.get('name')}`).toString();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const { value } = this.props;\n    const { itemsCollapsed } = this.state;\n\n    // Update value\n    const item = value.get(oldIndex);\n    const newValue = value.delete(oldIndex).insert(newIndex, item);\n    this.props.onChange(newValue);\n\n    // Update collapsing\n    const collapsed = itemsCollapsed.get(oldIndex);\n    const updatedItemsCollapsed = itemsCollapsed.delete(oldIndex).insert(newIndex, collapsed);\n    this.setState({ itemsCollapsed: updatedItemsCollapsed });\n  };\n\n  // eslint-disable-next-line react/display-name\n  renderItem = (item, index) => {\n    const {\n      classNameWrapper,\n      editorControl,\n      onValidateObject,\n      metadata,\n      clearFieldErrors,\n      fieldsErrors,\n      controlRef,\n      resolveWidget,\n    } = this.props;\n\n    const { itemsCollapsed } = this.state;\n    const collapsed = itemsCollapsed.get(index);\n    let field = this.props.field;\n\n    if (this.getValueType() === valueTypes.MIXED) {\n      field = getTypedFieldForValue(field, item);\n      if (!field) {\n        return this.renderErroneousTypedItem(index, item);\n      }\n    }\n\n    return (\n      <SortableListItem\n        css={[styles.listControlItem, collapsed && styles.listControlItemCollapsed]}\n        index={index}\n        key={`item-${index}`}\n      >\n        <StyledListItemTopBar\n          collapsed={collapsed}\n          onCollapseToggle={partial(this.handleItemCollapseToggle, index)}\n          onRemove={partial(this.handleRemove, index)}\n          dragHandleHOC={SortableHandle}\n        />\n        <NestedObjectLabel collapsed={collapsed}>{this.objectLabel(item)}</NestedObjectLabel>\n        <ClassNames>\n          {({ css, cx }) => (\n            <ObjectControl\n              classNameWrapper={cx(classNameWrapper, {\n                [css`\n                  ${styleStrings.collapsedObjectControl};\n                `]: collapsed,\n              })}\n              value={item}\n              field={field}\n              onChangeObject={this.handleChangeFor(index)}\n              editorControl={editorControl}\n              resolveWidget={resolveWidget}\n              metadata={metadata}\n              forList\n              onValidateObject={onValidateObject}\n              clearFieldErrors={clearFieldErrors}\n              fieldsErrors={fieldsErrors}\n              ref={this.processControlRef}\n              controlRef={controlRef}\n            />\n          )}\n        </ClassNames>\n      </SortableListItem>\n    );\n  };\n\n  renderErroneousTypedItem(index, item) {\n    const field = this.props.field;\n    const errorMessage = getErrorMessageForTypedFieldAndValue(field, item);\n    return (\n      <SortableListItem\n        css={[styles.listControlItem, styles.listControlItemCollapsed]}\n        index={index}\n        key={`item-${index}`}\n      >\n        <StyledListItemTopBar\n          onCollapseToggle={null}\n          onRemove={partial(this.handleRemove, index)}\n          dragHandleHOC={SortableHandle}\n        />\n        <NestedObjectLabel collapsed={true} error={true}>\n          {errorMessage}\n        </NestedObjectLabel>\n      </SortableListItem>\n    );\n  }\n\n  renderListControl() {\n    const { value, forID, field, classNameWrapper } = this.props;\n    const { itemsCollapsed } = this.state;\n    const items = value || List();\n    const label = field.get('label', field.get('name'));\n    const labelSingular = field.get('label_singular') || field.get('label', field.get('name'));\n    const listLabel = items.size === 1 ? labelSingular.toLowerCase() : label.toLowerCase();\n\n    return (\n      <ClassNames>\n        {({ cx, css }) => (\n          <div\n            id={forID}\n            className={cx(\n              classNameWrapper,\n              css`\n                ${styleStrings.objectWidgetTopBarContainer}\n              `,\n            )}\n          >\n            <ObjectWidgetTopBar\n              allowAdd={field.get('allow_add', true)}\n              onAdd={this.handleAdd}\n              types={field.get(TYPES_KEY, null)}\n              onAddType={type => this.handleAddType(type, resolveFieldKeyType(field))}\n              heading={`${items.size} ${listLabel}`}\n              label={labelSingular.toLowerCase()}\n              onCollapseToggle={this.handleCollapseAllToggle}\n              collapsed={itemsCollapsed.every(val => val === true)}\n            />\n            <SortableList\n              items={items}\n              renderItem={this.renderItem}\n              onSortEnd={this.onSortEnd}\n              useDragHandle\n              lockAxis=\"y\"\n            />\n          </div>\n        )}\n      </ClassNames>\n    );\n  }\n\n  renderInput() {\n    const { forID, classNameWrapper } = this.props;\n    const { value } = this.state;\n\n    return (\n      <input\n        type=\"text\"\n        id={forID}\n        value={value}\n        onChange={this.handleChange}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        className={classNameWrapper}\n      />\n    );\n  }\n\n  render() {\n    if (this.getValueType() !== null) {\n      return this.renderListControl();\n    } else {\n      return this.renderInput();\n    }\n  }\n}\n"],"file":"ListControl.js"}