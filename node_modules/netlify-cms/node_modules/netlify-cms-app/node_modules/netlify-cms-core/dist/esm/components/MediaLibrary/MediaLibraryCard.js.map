{"version":3,"sources":["../../../../src/components/MediaLibrary/MediaLibraryCard.js"],"names":["IMAGE_HEIGHT","Card","props","width","margin","borders","textField","isSelected","colors","active","lengths","borderRadius","isPrivate","textFieldBorder","CardImageWrapper","effects","checkerboard","shadows","inset","borderWidth","CardImage","CardFileIcon","CardText","text","MediaLibraryCard","React","Component","render","displayURL","onClick","type","url","get","componentDidMount","loadDisplayURL","propTypes","PropTypes","bool","ImmutablePropTypes","map","isRequired","string","func"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;AAEA,MAAMA,YAAY,GAAG,GAArB;AAEA,MAAMC,IAAI;AAAA;AAAA;AAAA,aACCC,KAAK,IAAIA,KAAK,CAACC,KADhB,2BAGED,KAAK,IAAIA,KAAK,CAACE,MAHjB,cAIEC,6BAAQC,SAJV,oBAKQJ,KAAK,IAAIA,KAAK,CAACK,UAAN,IAAoBC,4BAAOC,MAL5C,qBAMSC,6BAAQC,YANjB,uDASYT,KAAK,IAAIA,KAAK,CAACU,SAAN,IAAmBJ,4BAAOK,eAT/C,uqHAAV;AAgBA,MAAMC,gBAAgB;AAAA;AAAA;AAAA,cACVd,YAAY,GAAG,CADL,SAElBe,6BAAQC,YAFU,OAGlBC,6BAAQC,KAHU,2BAIGR,6BAAQS,WAJX,OAI0BX,4BAAOK,eAJjC,ipHAAtB;AAOA,MAAMO,SAAS;AAAA;AAAA;AAAA,yBAEHpB,YAFG,gsHAAf;AAOA,MAAMqB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlB;AASA,MAAMC,QAAQ;AAAA;AAAA;AAAA,aACHd,4BAAOe,IADJ,iuHAAd;;AAQA,MAAMC,gBAAN,SAA+BC,eAAMC,SAArC,CAA+C;AAC7CC,EAAAA,MAAM,GAAG;AAAA,wBAC2E,KAAKzB,KADhF;AAAA,UACCK,UADD,eACCA,UADD;AAAA,UACaqB,UADb,eACaA,UADb;AAAA,UACyBL,IADzB,eACyBA,IADzB;AAAA,UAC+BM,OAD/B,eAC+BA,OAD/B;AAAA,UACwC1B,KADxC,eACwCA,KADxC;AAAA,UAC+CC,MAD/C,eAC+CA,MAD/C;AAAA,UACuDQ,SADvD,eACuDA,SADvD;AAAA,UACkEkB,IADlE,eACkEA,IADlE;AAEP,UAAMC,GAAG,GAAGH,UAAU,CAACI,GAAX,CAAe,KAAf,CAAZ;AACA,WACE,6BAAC,IAAD;AACE,MAAA,UAAU,EAAEzB,UADd;AAEE,MAAA,OAAO,EAAEsB,OAFX;AAGE,MAAA,KAAK,EAAE1B,KAHT;AAIE,MAAA,MAAM,EAAEC,MAJV;AAKE,MAAA,QAAQ,EAAC,IALX;AAME,MAAA,SAAS,EAAEQ;AANb,OAQE,6BAAC,gBAAD,QACGmB,GAAG,GAAG,6BAAC,SAAD;AAAW,MAAA,GAAG,EAAEA;AAAhB,MAAH,GAA6B,6BAAC,YAAD,QAAeD,IAAf,CADnC,CARF,EAWE,6BAAC,QAAD,QAAWP,IAAX,CAXF,CADF;AAeD;;AACDU,EAAAA,iBAAiB,GAAG;AAAA,yBACqB,KAAK/B,KAD1B;AAAA,UACV0B,UADU,gBACVA,UADU;AAAA,UACEM,cADF,gBACEA,cADF;;AAElB,QAAI,CAACN,UAAU,CAACI,GAAX,CAAe,KAAf,CAAL,EAA4B;AAC1BE,MAAAA,cAAc;AACf;AACF;;AAzB4C;;AA4B/CV,gBAAgB,CAACW,SAAjB,GAA6B;AAC3B5B,EAAAA,UAAU,EAAE6B,mBAAUC,IADK;AAE3BT,EAAAA,UAAU,EAAEU,iCAAmBC,GAAnB,CAAuBC,UAFR;AAG3BjB,EAAAA,IAAI,EAAEa,mBAAUK,MAAV,CAAiBD,UAHI;AAI3BX,EAAAA,OAAO,EAAEO,mBAAUM,IAAV,CAAeF,UAJG;AAK3BrC,EAAAA,KAAK,EAAEiC,mBAAUK,MAAV,CAAiBD,UALG;AAM3BpC,EAAAA,MAAM,EAAEgC,mBAAUK,MAAV,CAAiBD,UANE;AAO3B5B,EAAAA,SAAS,EAAEwB,mBAAUC,IAPM;AAQ3BP,EAAAA,IAAI,EAAEM,mBAAUK;AARW,CAA7B;eAWejB,gB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport styled from '@emotion/styled';\nimport { colors, borders, lengths, shadows, effects } from 'netlify-cms-ui-default';\n\nconst IMAGE_HEIGHT = 160;\n\nconst Card = styled.div`\n  width: ${props => props.width};\n  height: 240px;\n  margin: ${props => props.margin};\n  border: ${borders.textField};\n  border-color: ${props => props.isSelected && colors.active};\n  border-radius: ${lengths.borderRadius};\n  cursor: pointer;\n  overflow: hidden;\n  background-color: ${props => props.isPrivate && colors.textFieldBorder};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst CardImageWrapper = styled.div`\n  height: ${IMAGE_HEIGHT + 2}px;\n  ${effects.checkerboard};\n  ${shadows.inset};\n  border-bottom: solid ${lengths.borderWidth} ${colors.textFieldBorder};\n`;\n\nconst CardImage = styled.img`\n  width: 100%;\n  height: ${IMAGE_HEIGHT}px;\n  object-fit: contain;\n  border-radius: 2px 2px 0 0;\n`;\n\nconst CardFileIcon = styled.div`\n  width: 100%;\n  height: 160px;\n  object-fit: cover;\n  border-radius: 2px 2px 0 0;\n  padding: 1em;\n  font-size: 3em;\n`;\n\nconst CardText = styled.p`\n  color: ${colors.text};\n  padding: 8px;\n  margin-top: 20px;\n  overflow-wrap: break-word;\n  line-height: 1.3 !important;\n`;\n\nclass MediaLibraryCard extends React.Component {\n  render() {\n    const { isSelected, displayURL, text, onClick, width, margin, isPrivate, type } = this.props;\n    const url = displayURL.get('url');\n    return (\n      <Card\n        isSelected={isSelected}\n        onClick={onClick}\n        width={width}\n        margin={margin}\n        tabIndex=\"-1\"\n        isPrivate={isPrivate}\n      >\n        <CardImageWrapper>\n          {url ? <CardImage src={url} /> : <CardFileIcon>{type}</CardFileIcon>}\n        </CardImageWrapper>\n        <CardText>{text}</CardText>\n      </Card>\n    );\n  }\n  componentDidMount() {\n    const { displayURL, loadDisplayURL } = this.props;\n    if (!displayURL.get('url')) {\n      loadDisplayURL();\n    }\n  }\n}\n\nMediaLibraryCard.propTypes = {\n  isSelected: PropTypes.bool,\n  displayURL: ImmutablePropTypes.map.isRequired,\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  width: PropTypes.string.isRequired,\n  margin: PropTypes.string.isRequired,\n  isPrivate: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nexport default MediaLibraryCard;\n"],"file":"MediaLibraryCard.js"}