{"version":3,"sources":["../../../src/reducers/globalUI.js"],"names":["globalUI","state","isFetching","action","type","indexOf","set"],"mappings":";;;;;;;AAAA;;AACA;;;AAGA,MAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAgD;AAAA,MAA/CC,KAA+C,uEAAvC,oBAAI;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAJ,CAAuC;AAAA,MAAXC,MAAW;;AAC/D;AACA,MAAIA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoB,SAApB,IAAiC,CAAC,CAAtC,EAAyC;AACvC,WAAOJ,KAAK,CAACK,GAAN,CAAU,YAAV,EAAwB,IAAxB,CAAP;AACD,GAFD,MAEO,IAAIH,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoB,SAApB,IAAiC,CAAC,CAAlC,IAAuCF,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoB,SAApB,IAAiC,CAAC,CAA7E,EAAgF;AACrF,WAAOJ,KAAK,CAACK,GAAN,CAAU,YAAV,EAAwB,KAAxB,CAAP;AACD;;AACD,SAAOL,KAAP;AACD,CARD;;eAUeD,Q","sourcesContent":["import { Map } from 'immutable';\n/*\n * Reducer for some global UI state that we want to share between components\n * */\nconst globalUI = (state = Map({ isFetching: false }), action) => {\n  // Generic, global loading indicator\n  if (action.type.indexOf('REQUEST') > -1) {\n    return state.set('isFetching', true);\n  } else if (action.type.indexOf('SUCCESS') > -1 || action.type.indexOf('FAILURE') > -1) {\n    return state.set('isFetching', false);\n  }\n  return state;\n};\n\nexport default globalUI;\n"],"file":"globalUI.js"}