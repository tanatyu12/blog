{"version":3,"sources":["../../../src/reducers/config.js"],"names":["config","state","isFetching","action","type","CONFIG_MERGE","mergeDeep","payload","CONFIG_REQUEST","set","CONFIG_SUCCESS","delete","CONFIG_FAILURE","error","toString"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,MAAMA,MAAM,GAAG,SAATA,MAAS,GAA+C;AAAA,MAA9CC,KAA8C,uEAAtC,oBAAI;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAJ,CAAsC;AAAA,MAAXC,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,oBAAL;AACE,aAAOJ,KAAK,CAACK,SAAN,CAAgBH,MAAM,CAACI,OAAvB,CAAP;;AACF,SAAKC,sBAAL;AACE,aAAOP,KAAK,CAACQ,GAAN,CAAU,YAAV,EAAwB,IAAxB,CAAP;;AACF,SAAKC,sBAAL;AACE;;;;;AAKA,aAAOP,MAAM,CAACI,OAAP,CAAeI,MAAf,CAAsB,YAAtB,CAAP;;AACF,SAAKC,sBAAL;AACE,aAAO,oBAAI;AAAEC,QAAAA,KAAK,EAAEV,MAAM,CAACI,OAAP,CAAeO,QAAf;AAAT,OAAJ,CAAP;;AACF;AACE,aAAOb,KAAP;AAfJ;AAiBD,CAlBD;;eAoBeD,M","sourcesContent":["import { Map } from 'immutable';\nimport { CONFIG_REQUEST, CONFIG_SUCCESS, CONFIG_FAILURE, CONFIG_MERGE } from 'Actions/config';\n\nconst config = (state = Map({ isFetching: true }), action) => {\n  switch (action.type) {\n    case CONFIG_MERGE:\n      return state.mergeDeep(action.payload);\n    case CONFIG_REQUEST:\n      return state.set('isFetching', true);\n    case CONFIG_SUCCESS:\n      /**\n       * The loadConfig action merges any existing config into the loaded config\n       * before firing this action (so the resulting config can be validated),\n       * so we don't have to merge it here.\n       */\n      return action.payload.delete('isFetching');\n    case CONFIG_FAILURE:\n      return Map({ error: action.payload.toString() });\n    default:\n      return state;\n  }\n};\n\nexport default config;\n"],"file":"config.js"}