{"version":3,"sources":["../../../../src/components/App/Header.js"],"names":["styles","buttonActive","css","colors","active","AppHeader","props","shadows","dropMain","foreground","lengths","topBarHeight","AppHeaderContent","AppHeaderButton","buttons","button","Icon","activeClassName","AppHeaderNavLink","withComponent","NavLink","AppHeaderActions","AppHeaderQuickNewButton","StyledDropdownButton","medium","gray","AppHeaderNavList","Header","React","Component","collectionName","onCreateEntryClick","render","user","collections","onLogoutClick","openMediaLibrary","hasWorkflow","displayUrl","t","showMediaButton","createableCollections","filter","collection","get","toList","match","location","pathname","startsWith","size","map","handleCreatePostClick","ImmutablePropTypes","isRequired","orderedMap","PropTypes","func","bool","string"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport styled from '@emotion/styled';\nimport { jsx, css } from '@emotion/core';\nimport { translate } from 'react-polyglot';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Icon,\n  Dropdown,\n  DropdownItem,\n  StyledDropdownButton,\n  colors,\n  lengths,\n  shadows,\n  buttons,\n} from 'netlify-cms-ui-default';\nimport SettingsDropdown from 'UI/SettingsDropdown';\n\nconst styles = {\n  buttonActive: css`\n    color: ${colors.active};\n  `,\n};\n\nconst AppHeader = props => (\n  <header\n    css={css`\n      ${shadows.dropMain};\n      position: sticky;\n      width: 100%;\n      top: 0;\n      background-color: ${colors.foreground};\n      z-index: 300;\n      height: ${lengths.topBarHeight};\n    `}\n    {...props}\n  />\n);\n\nconst AppHeaderContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  min-width: 800px;\n  max-width: 1440px;\n  padding: 0 12px;\n  margin: 0 auto;\n`;\n\nconst AppHeaderButton = styled.button`\n  ${buttons.button};\n  background: none;\n  color: #7b8290;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 500;\n  display: inline-flex;\n  padding: 16px 20px;\n  align-items: center;\n\n  ${Icon} {\n    margin-right: 4px;\n    color: #b3b9c4;\n  }\n\n  &:hover,\n  &:active,\n  &:focus {\n    ${styles.buttonActive};\n\n    ${Icon} {\n      ${styles.buttonActive};\n    }\n  }\n\n  ${props => css`\n    &.${props.activeClassName} {\n      ${styles.buttonActive};\n\n      ${Icon} {\n        ${styles.buttonActive};\n      }\n    }\n  `};\n`;\n\nconst AppHeaderNavLink = AppHeaderButton.withComponent(NavLink);\n\nconst AppHeaderActions = styled.div`\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst AppHeaderQuickNewButton = styled(StyledDropdownButton)`\n  ${buttons.button};\n  ${buttons.medium};\n  ${buttons.gray};\n  margin-right: 8px;\n\n  &:after {\n    top: 11px;\n  }\n`;\n\nconst AppHeaderNavList = styled.ul`\n  display: flex;\n  margin: 0;\n  list-style: none;\n`;\n\nclass Header extends React.Component {\n  static propTypes = {\n    user: ImmutablePropTypes.map.isRequired,\n    collections: ImmutablePropTypes.orderedMap.isRequired,\n    onCreateEntryClick: PropTypes.func.isRequired,\n    onLogoutClick: PropTypes.func.isRequired,\n    openMediaLibrary: PropTypes.func.isRequired,\n    hasWorkflow: PropTypes.bool.isRequired,\n    displayUrl: PropTypes.string,\n    t: PropTypes.func.isRequired,\n  };\n\n  handleCreatePostClick = collectionName => {\n    const { onCreateEntryClick } = this.props;\n    if (onCreateEntryClick) {\n      onCreateEntryClick(collectionName);\n    }\n  };\n\n  render() {\n    const {\n      user,\n      collections,\n      onLogoutClick,\n      openMediaLibrary,\n      hasWorkflow,\n      displayUrl,\n      t,\n      showMediaButton,\n    } = this.props;\n\n    const createableCollections = collections\n      .filter(collection => collection.get('create'))\n      .toList();\n\n    return (\n      <AppHeader>\n        <AppHeaderContent>\n          <nav>\n            <AppHeaderNavList>\n              <li>\n                <AppHeaderNavLink\n                  to=\"/\"\n                  activeClassName=\"header-link-active\"\n                  isActive={(match, location) => location.pathname.startsWith('/collections/')}\n                >\n                  <Icon type=\"page\" />\n                  {t('app.header.content')}\n                </AppHeaderNavLink>\n              </li>\n              {hasWorkflow && (\n                <li>\n                  <AppHeaderNavLink to=\"/workflow\" activeClassName=\"header-link-active\">\n                    <Icon type=\"workflow\" />\n                    {t('app.header.workflow')}\n                  </AppHeaderNavLink>\n                </li>\n              )}\n              {showMediaButton && (\n                <li>\n                  <AppHeaderButton onClick={openMediaLibrary}>\n                    <Icon type=\"media-alt\" />\n                    {t('app.header.media')}\n                  </AppHeaderButton>\n                </li>\n              )}\n            </AppHeaderNavList>\n          </nav>\n          <AppHeaderActions>\n            {createableCollections.size > 0 && (\n              <Dropdown\n                renderButton={() => (\n                  <AppHeaderQuickNewButton> {t('app.header.quickAdd')}</AppHeaderQuickNewButton>\n                )}\n                dropdownTopOverlap=\"30px\"\n                dropdownWidth=\"160px\"\n                dropdownPosition=\"left\"\n              >\n                {createableCollections.map(collection => (\n                  <DropdownItem\n                    key={collection.get('name')}\n                    label={collection.get('label_singular') || collection.get('label')}\n                    onClick={() => this.handleCreatePostClick(collection.get('name'))}\n                  />\n                ))}\n              </Dropdown>\n            )}\n            <SettingsDropdown\n              displayUrl={displayUrl}\n              imageUrl={user.get('avatar_url')}\n              onLogoutClick={onLogoutClick}\n            />\n          </AppHeaderActions>\n        </AppHeaderContent>\n      </AppHeader>\n    );\n  }\n}\n\nexport default translate()(Header);\n"],"file":"Header.js"}