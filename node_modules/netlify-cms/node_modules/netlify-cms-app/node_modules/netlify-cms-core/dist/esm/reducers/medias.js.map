{"version":3,"sources":["../../../src/reducers/medias.js"],"names":["medias","state","action","type","ADD_ASSET","set","payload","public_path","REMOVE_ASSET","delete","memoizedProxies","getAsset","publicFolder","path","proxy","get","AssetProxy"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAG,SAATA,MAAS,GAA2B;AAAA,MAA1BC,KAA0B,uEAAlB,qBAAkB;AAAA,MAAXC,MAAW;;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,gBAAL;AACE,aAAOH,KAAK,CAACI,GAAN,CAAUH,MAAM,CAACI,OAAP,CAAeC,WAAzB,EAAsCL,MAAM,CAACI,OAA7C,CAAP;;AACF,SAAKE,mBAAL;AACE,aAAOP,KAAK,CAACQ,MAAN,CAAaP,MAAM,CAACI,OAApB,CAAP;;AAEF;AACE,aAAOL,KAAP;AAPJ;AASD,CAVD;;eAYeD,M;;AAEf,MAAMU,eAAe,GAAG,EAAxB;;AACO,MAAMC,QAAQ,GAAG,CAACC,YAAD,EAAeX,KAAf,EAAsBY,IAAtB,KAA+B;AACrD;AACA,MAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AAEX,MAAIC,KAAK,GAAGb,KAAK,CAACc,GAAN,CAAUF,IAAV,KAAmBH,eAAe,CAACG,IAAD,CAA9C;;AACA,MAAIC,KAAJ,EAAW;AACT;AACA,WAAOA,KAAP;AACD,GARoD,CAUrD;;;AACAA,EAAAA,KAAK,GAAGJ,eAAe,CAACG,IAAD,CAAf,GAAwB,IAAIG,mBAAJ,CAAe,oCAAYH,IAAZ,EAAkBD,YAAlB,CAAf,EAAgD,IAAhD,EAAsD,IAAtD,CAAhC;AACA,SAAOE,KAAP;AACD,CAbM","sourcesContent":["import { Map } from 'immutable';\nimport { resolvePath } from 'netlify-cms-lib-util';\nimport { ADD_ASSET, REMOVE_ASSET } from 'Actions/media';\nimport AssetProxy from 'ValueObjects/AssetProxy';\n\nconst medias = (state = Map(), action) => {\n  switch (action.type) {\n    case ADD_ASSET:\n      return state.set(action.payload.public_path, action.payload);\n    case REMOVE_ASSET:\n      return state.delete(action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default medias;\n\nconst memoizedProxies = {};\nexport const getAsset = (publicFolder, state, path) => {\n  // No path provided, skip\n  if (!path) return null;\n\n  let proxy = state.get(path) || memoizedProxies[path];\n  if (proxy) {\n    // There is already an AssetProxy in memmory for this path. Use it.\n    return proxy;\n  }\n\n  // Create a new AssetProxy (for consistency) and return it.\n  proxy = memoizedProxies[path] = new AssetProxy(resolvePath(path, publicFolder), null, true);\n  return proxy;\n};\n"],"file":"medias.js"}