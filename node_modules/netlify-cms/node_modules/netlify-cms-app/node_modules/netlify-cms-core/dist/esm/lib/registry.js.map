{"version":3,"sources":["../../../src/lib/registry.js"],"names":["registry","backends","templates","previewStyles","widgets","editorComponents","widgetValueSerializers","mediaLibraries","registerPreviewStyle","getPreviewStyles","registerPreviewTemplate","getPreviewTemplate","registerWidget","getWidget","resolveWidget","registerEditorComponent","getEditorComponents","registerWidgetValueSerializer","getWidgetValueSerializer","registerBackend","getBackend","registerMediaLibrary","getMediaLibrary","style","opts","push","value","name","component","control","preview","Array","isArray","forEach","widget","console","error","newControl","widgetName","controlComponent","previewComponent","globalStyles","oneLine","Error","plugin","set","get","serializer","BackendClass","init","args","mediaLibrary","options","find","ml"],"mappings":"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","sourcesContent":["import { Map } from 'immutable';\nimport { oneLine } from 'common-tags';\nimport EditorComponent from 'ValueObjects/EditorComponent';\n\n/**\n * Global Registry Object\n */\nconst registry = {\n  backends: {},\n  templates: {},\n  previewStyles: [],\n  widgets: {},\n  editorComponents: Map(),\n  widgetValueSerializers: {},\n  mediaLibraries: [],\n};\n\nexport default {\n  registerPreviewStyle,\n  getPreviewStyles,\n  registerPreviewTemplate,\n  getPreviewTemplate,\n  registerWidget,\n  getWidget,\n  resolveWidget,\n  registerEditorComponent,\n  getEditorComponents,\n  registerWidgetValueSerializer,\n  getWidgetValueSerializer,\n  registerBackend,\n  getBackend,\n  registerMediaLibrary,\n  getMediaLibrary,\n};\n\n/**\n * Preview Styles\n *\n * Valid options:\n *  - raw {boolean} if `true`, `style` value is expected to be a CSS string\n */\nexport function registerPreviewStyle(style, opts) {\n  registry.previewStyles.push({ ...opts, value: style });\n}\nexport function getPreviewStyles() {\n  return registry.previewStyles;\n}\n\n/**\n * Preview Templates\n */\nexport function registerPreviewTemplate(name, component) {\n  registry.templates[name] = component;\n}\nexport function getPreviewTemplate(name) {\n  return registry.templates[name];\n}\n\n/**\n * Editor Widgets\n */\nexport function registerWidget(name, control, preview) {\n  if (Array.isArray(name)) {\n    name.forEach(widget => {\n      if (typeof widget !== 'object') {\n        console.error(`Cannot register widget: ${widget}`);\n      } else {\n        registerWidget(widget);\n      }\n    });\n  } else if (typeof name === 'string') {\n    // A registered widget control can be reused by a new widget, allowing\n    // multiple copies with different previews.\n    const newControl = typeof control === 'string' ? registry.widgets[control].control : control;\n    registry.widgets[name] = { control: newControl, preview };\n  } else if (typeof name === 'object') {\n    const {\n      name: widgetName,\n      controlComponent: control,\n      previewComponent: preview,\n      globalStyles,\n    } = name;\n    if (registry.widgets[widgetName]) {\n      console.error(oneLine`\n        Multiple widgets registered with name \"${widgetName}\". Only the last widget registered with\n        this name will be used.\n      `);\n    }\n    if (!control) {\n      throw Error(`Widget \"${widgetName}\" registered without \\`controlComponent\\`.`);\n    }\n    registry.widgets[widgetName] = { control, preview, globalStyles };\n  } else {\n    console.error('`registerWidget` failed, called with incorrect arguments.');\n  }\n}\nexport function getWidget(name) {\n  return registry.widgets[name];\n}\nexport function resolveWidget(name) {\n  return getWidget(name || 'string') || getWidget('unknown');\n}\n\n/**\n * Markdown Editor Custom Components\n */\nexport function registerEditorComponent(component) {\n  const plugin = EditorComponent(component);\n  registry.editorComponents = registry.editorComponents.set(plugin.get('id'), plugin);\n}\nexport function getEditorComponents() {\n  return registry.editorComponents;\n}\n\n/**\n * Widget Serializers\n */\nexport function registerWidgetValueSerializer(widgetName, serializer) {\n  registry.widgetValueSerializers[widgetName] = serializer;\n}\nexport function getWidgetValueSerializer(widgetName) {\n  return registry.widgetValueSerializers[widgetName];\n}\n\n/**\n * Backend API\n */\nexport function registerBackend(name, BackendClass) {\n  if (!name || !BackendClass) {\n    console.error(\n      \"Backend parameters invalid. example: CMS.registerBackend('myBackend', BackendClass)\",\n    );\n  } else if (registry.backends[name]) {\n    console.error(`Backend [${name}] already registered. Please choose a different name.`);\n  } else {\n    registry.backends[name] = {\n      init: (...args) => new BackendClass(...args),\n    };\n  }\n}\n\nexport function getBackend(name) {\n  return registry.backends[name];\n}\n\n/**\n * Media Libraries\n */\nexport function registerMediaLibrary(mediaLibrary, options) {\n  if (registry.mediaLibraries.find(ml => mediaLibrary.name === ml.name)) {\n    throw new Error(`A media library named ${mediaLibrary.name} has already been registered.`);\n  }\n  registry.mediaLibraries.push({ ...mediaLibrary, options });\n}\n\nexport function getMediaLibrary(name) {\n  return registry.mediaLibraries.find(ml => ml.name === name);\n}\n"],"file":"registry.js"}