{"version":3,"sources":["../../../src/constants/configSchema.js"],"names":["fieldsConfig","type","minItems","items","properties","name","label","widget","required","getConfigSchema","backend","examples","site_url","display_url","logo_url","show_preview_links","media_folder","public_folder","media_library","config","publish_mode","enum","slug","encoding","clean_accents","collections","label_singular","description","folder","files","file","fields","identifier_field","preview_path","preview_path_date_field","create","editor","preview","format","Object","keys","formatExtensions","extension","frontmatter_delimiter","maxItems","oneOf","if","then","extensionFormatters","else","dependencies","frontmatterFormats","anyOf","ConfigError","Error","constructor","errors","message","map","dataPath","dotPath","slice","split","seg","match","join","args","toString","validateConfig","ajv","AJV","allErrors","valid","validate","console","error"],"mappings":"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","sourcesContent":["import AJV from 'ajv';\nimport ajvErrors from 'ajv-errors';\nimport { formatExtensions, frontmatterFormats, extensionFormatters } from 'Formats/formats';\n\n/**\n * Config for fields in both file and folder collections.\n */\nconst fieldsConfig = {\n  type: 'array',\n  minItems: 1,\n  items: {\n    // ------- Each field: -------\n    type: 'object',\n    properties: {\n      name: { type: 'string' },\n      label: { type: 'string' },\n      widget: { type: 'string' },\n      required: { type: 'boolean' },\n    },\n    required: ['name'],\n  },\n};\n\n/**\n * The schema had to be wrapped in a function to\n * fix a circular dependency problem for WebPack,\n * where the imports get resolved asyncronously.\n */\nconst getConfigSchema = () => ({\n  type: 'object',\n  properties: {\n    backend: {\n      type: 'object',\n      properties: { name: { type: 'string', examples: ['test-repo'] } },\n      required: ['name'],\n    },\n    site_url: { type: 'string', examples: ['https://example.com'] },\n    display_url: { type: 'string', examples: ['https://example.com'] },\n    logo_url: { type: 'string', examples: ['https://example.com/images/logo.svg'] },\n    show_preview_links: { type: 'boolean' },\n    media_folder: { type: 'string', examples: ['assets/uploads'] },\n    public_folder: { type: 'string', examples: ['/uploads'] },\n    media_library: {\n      type: 'object',\n      properties: {\n        name: { type: 'string', examples: ['uploadcare'] },\n        config: { type: 'object' },\n      },\n      required: ['name'],\n    },\n    publish_mode: {\n      type: 'string',\n      enum: ['simple', 'editorial_workflow'],\n      examples: ['editorial_workflow'],\n    },\n    slug: {\n      type: 'object',\n      properties: {\n        encoding: { type: 'string', enum: ['unicode', 'ascii'] },\n        clean_accents: { type: 'boolean' },\n      },\n    },\n    collections: {\n      type: 'array',\n      minItems: 1,\n      items: {\n        // ------- Each collection: -------\n        type: 'object',\n        properties: {\n          name: { type: 'string' },\n          label: { type: 'string' },\n          label_singular: { type: 'string' },\n          description: { type: 'string' },\n          folder: { type: 'string' },\n          files: {\n            type: 'array',\n            items: {\n              // ------- Each file: -------\n              type: 'object',\n              properties: {\n                name: { type: 'string' },\n                label: { type: 'string' },\n                label_singular: { type: 'string' },\n                description: { type: 'string' },\n                file: { type: 'string' },\n                fields: fieldsConfig,\n              },\n              required: ['name', 'label', 'file', 'fields'],\n            },\n          },\n          identifier_field: { type: 'string' },\n          slug: { type: 'string' },\n          preview_path: { type: 'string' },\n          preview_path_date_field: { type: 'string' },\n          create: { type: 'boolean' },\n          editor: {\n            type: 'object',\n            properties: {\n              preview: { type: 'boolean' },\n            },\n          },\n          format: { type: 'string', enum: Object.keys(formatExtensions) },\n          extension: { type: 'string' },\n          frontmatter_delimiter: {\n            type: ['string', 'array'],\n            minItems: 2,\n            maxItems: 2,\n            items: {\n              type: 'string',\n            },\n          },\n          fields: fieldsConfig,\n        },\n        required: ['name', 'label'],\n        oneOf: [{ required: ['files'] }, { required: ['folder', 'fields'] }],\n        if: { required: ['extension'] },\n        then: {\n          // Cannot infer format from extension.\n          if: {\n            properties: {\n              extension: { enum: Object.keys(extensionFormatters) },\n            },\n          },\n          else: { required: ['format'] },\n        },\n        dependencies: {\n          frontmatter_delimiter: {\n            properties: {\n              format: { enum: frontmatterFormats },\n            },\n            required: ['format'],\n          },\n        },\n      },\n    },\n  },\n  required: ['backend', 'collections'],\n  anyOf: [{ required: ['media_folder'] }, { required: ['media_library'] }],\n});\n\nclass ConfigError extends Error {\n  constructor(errors, ...args) {\n    const message = errors\n      .map(({ message, dataPath }) => {\n        const dotPath = dataPath\n          .slice(1)\n          .split('/')\n          .map(seg => (seg.match(/^\\d+$/) ? `[${seg}]` : `.${seg}`))\n          .join('')\n          .slice(1);\n        return `${dotPath ? `'${dotPath}'` : 'config'} ${message}`;\n      })\n      .join('\\n');\n    super(message, ...args);\n\n    this.errors = errors;\n    this.message = message;\n  }\n\n  toString() {\n    return this.message;\n  }\n}\n\n/**\n * `validateConfig` is a pure function. It does not mutate\n * the config that is passed in.\n */\nexport function validateConfig(config) {\n  const ajv = new AJV({ allErrors: true });\n  ajvErrors(ajv);\n\n  const valid = ajv.validate(getConfigSchema(), config);\n  if (!valid) {\n    console.error('Config Errors', ajv.errors);\n    throw new ConfigError(ajv.errors);\n  }\n}\n"],"file":"configSchema.js"}