{"version":3,"sources":["../../../../src/components/UI/ErrorBoundary.js"],"names":["ISSUE_URL","ErrorBoundaryContainer","colors","text","textLead","CopyButton","buttons","button","default","gray","RecoveredEntry","entry","t","console","log","ErrorBoundary","React","Component","hasError","errorMessage","backup","getDerivedStateFromError","error","toString","shouldComponentUpdate","nextProps","nextState","props","showBackup","state","componentDidUpdate","localForage","getItem","setState","render","children","PropTypes","node","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-polyglot';\nimport styled from '@emotion/styled';\nimport copyToClipboard from 'copy-text-to-clipboard';\nimport { localForage } from 'netlify-cms-lib-util';\nimport { buttons, colors } from 'netlify-cms-ui-default';\n\nconst ISSUE_URL = 'https://github.com/netlify/netlify-cms/issues/new?template=bug_report.md';\n\nconst ErrorBoundaryContainer = styled.div`\n  padding: 40px;\n\n  h1 {\n    font-size: 28px;\n    color: ${colors.text};\n  }\n\n  h2 {\n    font-size: 20px;\n  }\n\n  strong {\n    color: ${colors.textLead};\n    font-weight: 500;\n  }\n\n  hr {\n    width: 200px;\n    margin: 30px 0;\n    border: 0;\n    height: 1px;\n    background-color: ${colors.text};\n  }\n\n  a {\n    color: ${colors.text};\n  }\n`;\n\nconst CopyButton = styled.button`\n  ${buttons.button};\n  ${buttons.default};\n  ${buttons.gray};\n  display: block;\n  margin: 12px 0;\n`;\n\nconst RecoveredEntry = ({ entry, t }) => {\n  console.log(entry);\n  return (\n    <>\n      <hr />\n      <h2>{t('ui.errorBoundary.recoveredEntry.heading')}</h2>\n      <strong>{t('ui.errorBoundary.recoveredEntry.warning')}</strong>\n      <CopyButton onClick={() => copyToClipboard(entry)}>\n        {t('ui.errorBoundary.recoveredEntry.copyButtonLabel')}\n      </CopyButton>\n      <pre>\n        <code>{entry}</code>\n      </pre>\n    </>\n  );\n};\n\nclass ErrorBoundary extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    t: PropTypes.func.isRequired,\n  };\n\n  state = {\n    hasError: false,\n    errorMessage: '',\n    backup: '',\n  };\n\n  static getDerivedStateFromError(error) {\n    console.error(error);\n    return { hasError: true, errorMessage: error.toString() };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.showBackup) {\n      return (\n        this.state.errorMessage !== nextState.errorMessage || this.state.backup !== nextState.backup\n      );\n    }\n    return true;\n  }\n\n  async componentDidUpdate() {\n    if (this.props.showBackup) {\n      const backup = await localForage.getItem('backup');\n      console.log(backup);\n      this.setState({ backup });\n    }\n  }\n\n  render() {\n    const { hasError, errorMessage, backup } = this.state;\n    const { showBackup, t } = this.props;\n    if (!hasError) {\n      return this.props.children;\n    }\n    return (\n      <ErrorBoundaryContainer>\n        <h1>{t('ui.errorBoundary.title')}</h1>\n        <p>\n          <span>{t('ui.errorBoundary.details')}</span>\n          <a href={ISSUE_URL} target=\"_blank\" rel=\"noopener noreferrer\">\n            {t('ui.errorBoundary.reportIt')}\n          </a>\n        </p>\n        <hr />\n        <h2>{t('ui.errorBoundary.detailsHeading')}</h2>\n        <p>{errorMessage}</p>\n        {backup && showBackup && <RecoveredEntry entry={backup} t={t} />}\n      </ErrorBoundaryContainer>\n    );\n  }\n}\n\nexport default translate()(ErrorBoundary);\n"],"file":"ErrorBoundary.js"}