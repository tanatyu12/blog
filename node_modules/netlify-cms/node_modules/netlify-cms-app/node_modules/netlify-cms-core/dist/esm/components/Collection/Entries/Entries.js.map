{"version":3,"sources":["../../../../../src/components/Collection/Entries/Entries.js"],"names":["Entries","collections","entries","publicFolder","isFetching","viewStyle","cursor","handleCursorActions","t","loadingMessages","propTypes","ImmutablePropTypes","map","isRequired","list","PropTypes","string","page","number","bool","any","func"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,OAAO,GAAG,UASV;AAAA,MARJC,WAQI,QARJA,WAQI;AAAA,MAPJC,OAOI,QAPJA,OAOI;AAAA,MANJC,YAMI,QANJA,YAMI;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,MAFJC,mBAEI,QAFJA,mBAEI;AAAA,MADJC,CACI,QADJA,CACI;AACJ,QAAMC,eAAe,GAAG,CACtBD,CAAC,CAAC,mCAAD,CADqB,EAEtBA,CAAC,CAAC,mCAAD,CAFqB,EAGtBA,CAAC,CAAC,kCAAD,CAHqB,CAAxB;;AAMA,MAAIN,OAAJ,EAAa;AACX,WACE,6BAAC,qBAAD;AACE,MAAA,WAAW,EAAED,WADf;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAIE,MAAA,SAAS,EAAEE,SAJb;AAKE,MAAA,MAAM,EAAEC,MALV;AAME,MAAA,mBAAmB,EAAEC;AANvB,MADF;AAUD;;AAED,MAAIH,UAAJ,EAAgB;AACd,WAAO,6BAAC,2BAAD;AAAQ,MAAA,MAAM;AAAd,OAAgBK,eAAhB,CAAP;AACD;;AAED,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,kBAAP;AACD,CAlCD;;AAoCAT,OAAO,CAACU,SAAR,GAAoB;AAClBT,EAAAA,WAAW,EAAEU,iCAAmBC,GAAnB,CAAuBC,UADlB;AAElBX,EAAAA,OAAO,EAAES,iCAAmBG,IAFV;AAGlBX,EAAAA,YAAY,EAAEY,mBAAUC,MAAV,CAAiBH,UAHb;AAIlBI,EAAAA,IAAI,EAAEF,mBAAUG,MAJE;AAKlBd,EAAAA,UAAU,EAAEW,mBAAUI,IALJ;AAMlBd,EAAAA,SAAS,EAAEU,mBAAUC,MANH;AAOlBV,EAAAA,MAAM,EAAES,mBAAUK,GAAV,CAAcP,UAPJ;AAQlBN,EAAAA,mBAAmB,EAAEQ,mBAAUM,IAAV,CAAeR,UARlB;AASlBL,EAAAA,CAAC,EAAEO,mBAAUM,IAAV,CAAeR;AATA,CAApB;;eAYe,gCAAYb,OAAZ,C","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { translate } from 'react-polyglot';\nimport { Loader } from 'netlify-cms-ui-default';\nimport EntryListing from './EntryListing';\n\nconst Entries = ({\n  collections,\n  entries,\n  publicFolder,\n  isFetching,\n  viewStyle,\n  cursor,\n  handleCursorActions,\n  t,\n}) => {\n  const loadingMessages = [\n    t('collection.entries.loadingEntries'),\n    t('collection.entries.cachingEntries'),\n    t('collection.entries.longerLoading'),\n  ];\n\n  if (entries) {\n    return (\n      <EntryListing\n        collections={collections}\n        entries={entries}\n        publicFolder={publicFolder}\n        viewStyle={viewStyle}\n        cursor={cursor}\n        handleCursorActions={handleCursorActions}\n      />\n    );\n  }\n\n  if (isFetching) {\n    return <Loader active>{loadingMessages}</Loader>;\n  }\n\n  return <div className=\"nc-collectionPage-noEntries\">No Entries</div>;\n};\n\nEntries.propTypes = {\n  collections: ImmutablePropTypes.map.isRequired,\n  entries: ImmutablePropTypes.list,\n  publicFolder: PropTypes.string.isRequired,\n  page: PropTypes.number,\n  isFetching: PropTypes.bool,\n  viewStyle: PropTypes.string,\n  cursor: PropTypes.any.isRequired,\n  handleCursorActions: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default translate()(Entries);\n"],"file":"Entries.js"}