{"version":3,"sources":["../../../../src/components/Editor/EditorToolbar.js"],"names":["styles","buttonMargin","toolbarSection","css","colors","textFieldBorder","ToolbarContainer","ToolbarSectionMain","ToolbarSubSectionFirst","ToolbarSubSectionLast","ToolbarSectionBackLink","Link","ToolbarSectionMeta","ToolbarDropdown","Dropdown","Icon","colorsRaw","teal","BackArrow","textLead","BackCollection","BackStatus","BackStatusUnchanged","components","textBadgeSuccess","successText","BackStatusChanged","textBadgeDanger","ToolbarButton","buttons","button","default","DeleteButton","lightRed","SaveButton","lightBlue","StatusPublished","lengths","borderRadius","white","PublishButton","StyledDropdownButton","StatusButton","tealLight","PreviewButtonContainer","blue","RefreshPreviewButton","PreviewLink","withComponent","StatusDropdownItem","DropdownItem","infoText","EditorToolbar","React","Component","props","showDelete","onDelete","t","label","deployPreview","loadDeployPreview","url","get","status","isFetching","deployPreviewReady","collection","onPersist","onPersistAndNew","isPersisting","hasChanged","isNewEntry","renderDeployPreviewControls","onDeleteUnpublishedChanges","hasUnpublishedChanges","isDeleting","isModification","deleteLabel","isUpdatingStatus","isPublishing","onChangeStatus","onPublish","onPublishAndNew","currentStatus","componentDidMount","maxAttempts","componentDidUpdate","prevProps","render","user","displayUrl","hasWorkflow","onLogoutClick","collectionLabel","renderWorkflowSaveControls","renderSimpleSaveControls","renderWorkflowPublishControls","renderSimplePublishControls","PropTypes","bool","func","isRequired","ImmutablePropTypes","map","string"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAWA;;AACA;;;;;;AAEA,MAAMA,MAAM,GAAG;AACbC,EAAAA,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADC;AAIbC,EAAAA,cAAc;AAAA;AAAA,MAAEC,SAAF,iEAIMC,4BAAOC,eAJb;AAJD,CAAf;AAYA,MAAMC,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAtB;AAeA,MAAMC,kBAAkB;AAAA;AAAA;AAAA,GACpBP,MAAM,CAACE,cADa,uxnBAAxB;AAQA,MAAMM,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA5B;AAKA,MAAMC,qBAAqB,GAAG;AAAA;AAAA,wBAAOD,sBAAP;AAAA;AAAA;AAAA,EAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA3B;AAIA,MAAME,sBAAsB,GAAG;AAAA;AAAA,wBAAOC,oBAAP;AAAA;AAAA;AAAA,EAAH,CACxBX,MAAM,CAACE,cADiB,wznBAA5B;AAYA,MAAMU,kBAAkB;AAAA;AAAA;AAAA,GACpBZ,MAAM,CAACE,cADa,yvnBAAxB;AAMA,MAAMW,eAAe,GAAG;AAAA;AAAA,wBAAOC,6BAAP;AAAA;AAAA;AAAA,EAAH,CACjBd,MAAM,CAACC,YADU,OAGjBc,yBAHiB,aAIRC,+BAAUC,IAJF,stnBAArB;AAQA,MAAMC,SAAS;AAAA;AAAA;AAAA,aACJd,4BAAOe,QADH,swnBAAf;AAOA,MAAMC,cAAc;AAAA;AAAA;AAAA,aACThB,4BAAOe,QADE,ounBAApB;AAKA,MAAME,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB;AAIA,MAAMC,mBAAmB,GAAG;AAAA;AAAA,wBAAOD,UAAP;AAAA;AAAA;AAAA,EAAH,CACrBE,gCAAWC,gBADU,+CAMZpB,4BAAOqB,WANK,8wpBAAzB;AAgBA,MAAMC,iBAAiB,GAAG;AAAA;AAAA,wBAAOL,UAAP;AAAA;AAAA;AAAA,EAAH,CACnBE,gCAAWI,eADQ,qtnBAAvB;AAIA,MAAMC,aAAa;AAAA;AAAA;AAAA,GACfC,6BAAQC,MADO,OAEfD,6BAAQE,OAFO,OAGf/B,MAAM,CAACC,YAHQ,munBAAnB;AAOA,MAAM+B,YAAY,GAAG;AAAA;AAAA,wBAAOJ,aAAP;AAAA;AAAA;AAAA,EAAH,CACdC,6BAAQI,QADM,qtnBAAlB;AAIA,MAAMC,UAAU,GAAG;AAAA;AAAA,wBAAON,aAAP;AAAA;AAAA;AAAA,EAAH,CACZC,6BAAQM,SADI,qtnBAAhB;AAIA,MAAMC,eAAe;AAAA;AAAA;AAAA,GACjBpC,MAAM,CAACC,YADU,wBAECG,4BAAOC,eAFR,qBAGFgC,6BAAQC,YAHN,wBAICtB,+BAAUuB,KAJX,aAKVvB,+BAAUC,IALA,mynBAArB;AAaA,MAAMuB,aAAa,GAAG;AAAA;AAAA,wBAAOC,yCAAP;AAAA;AAAA;AAAA,EAAH,sBACGzB,+BAAUC,IADb,qtnBAAnB;AAIA,MAAMyB,YAAY,GAAG;AAAA;AAAA,wBAAOD,yCAAP;AAAA;AAAA;AAAA,EAAH,sBACIzB,+BAAU2B,SADd,aAEP3B,+BAAUC,IAFH,qtnBAAlB;AAKA,MAAM2B,sBAAsB;AAAA;AAAA;AAAA,+BAEjB5B,+BAAU6B,IAFO,yCAOxB9B,yBAPwB,aAQfC,+BAAU6B,IARK,QAWxB9B,yBAXwB,gvnBAA5B;AAiBA,MAAM+B,oBAAoB;AAAA;AAAA;AAAA,qDAIf9B,+BAAU6B,IAJK,4unBAA1B;AAWA,MAAME,WAAW,GAAGD,oBAAoB,CAACE,aAArB,CAAmC,GAAnC;AAAA;AAAA;AAAA,EAApB;AAEA,MAAMC,kBAAkB,GAAG;AAAA;AAAA,wBAAOC,iCAAP;AAAA;AAAA;AAAA,EAAH,CACpBnC,yBADoB,aAEXX,4BAAO+C,QAFI,stnBAAxB;;AAMA,MAAMC,aAAN,SAA4BC,eAAMC,SAAlC,CAA4C;AAAA;AAAA;;AAAA,sDA2Cf,MAAM;AAAA,0BACK,KAAKC,KADV;AAAA,YACvBC,UADuB,eACvBA,UADuB;AAAA,YACXC,QADW,eACXA,QADW;AAAA,YACDC,CADC,eACDA,CADC;AAE/B,aACE,0CACGF,UAAU,GACT,6BAAC,YAAD;AAAc,QAAA,OAAO,EAAEC;AAAvB,SAAkCC,CAAC,CAAC,kCAAD,CAAnC,CADS,GAEP,IAHN,CADF;AAOD,KApDyC;;AAAA,yDAsDZC,KAAK,IAAI;AAAA,2BACmB,KAAKJ,KADxB;AAAA,iDAC7BK,aAD6B;AAAA,YAC7BA,aAD6B,sCACb,qBADa;AAAA,YACNC,iBADM,gBACNA,iBADM;AAAA,YACaH,CADb,gBACaA,CADb;AAErC,YAAMI,GAAG,GAAGF,aAAa,CAACG,GAAd,CAAkB,KAAlB,CAAZ;AACA,YAAMC,MAAM,GAAGJ,aAAa,CAACG,GAAd,CAAkB,QAAlB,CAAf;;AAEA,UAAI,CAACC,MAAL,EAAa;AACX;AACD;;AAED,YAAMC,UAAU,GAAGL,aAAa,CAACG,GAAd,CAAkB,YAAlB,CAAnB;AACA,YAAMG,kBAAkB,GAAGF,MAAM,KAAK,SAAX,IAAwB,CAACC,UAApD;AACA,aACE,6BAAC,sBAAD,QACGC,kBAAkB,GACjB,6BAAC,WAAD;AAAa,QAAA,GAAG,EAAC,qBAAjB;AAAuC,QAAA,MAAM,EAAC,QAA9C;AAAuD,QAAA,IAAI,EAAEJ;AAA7D,SACE,2CAAOH,KAAP,CADF,EAEE,6BAAC,yBAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,IAAI,EAAC;AAA1B,QAFF,CADiB,GAMjB,6BAAC,oBAAD;AAAsB,QAAA,OAAO,EAAEE;AAA/B,SACE,2CAAOH,CAAC,CAAC,sDAAD,CAAR,CADF,EAEE,6BAAC,yBAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,IAAI,EAAC;AAA1B,QAFF,CAPJ,CADF;AAeD,KAhFyC;;AAAA,yDAkFZ,MAAM;AAAA,2BAS9B,KAAKH,KATyB;AAAA,YAEhCY,UAFgC,gBAEhCA,UAFgC;AAAA,YAGhCC,SAHgC,gBAGhCA,SAHgC;AAAA,YAIhCC,eAJgC,gBAIhCA,eAJgC;AAAA,YAKhCC,YALgC,gBAKhCA,YALgC;AAAA,YAMhCC,UANgC,gBAMhCA,UANgC;AAAA,YAOhCC,UAPgC,gBAOhCA,UAPgC;AAAA,YAQhCd,CARgC,gBAQhCA,CARgC;;AAUlC,UAAI,CAACc,UAAD,IAAe,CAACD,UAApB,EAAgC;AAC9B,eACE,4DACG,KAAKE,2BAAL,CAAiCf,CAAC,CAAC,wCAAD,CAAlC,CADH,EAEE,6BAAC,eAAD,QAAkBA,CAAC,CAAC,gCAAD,CAAnB,CAFF,CADF;AAMD;;AACD,aACE,0CACE,6BAAC,eAAD;AACE,QAAA,kBAAkB,EAAC,MADrB;AAEE,QAAA,aAAa,EAAC,OAFhB;AAGE,QAAA,YAAY,EAAE,MACZ,6BAAC,aAAD,QACGY,YAAY,GACTZ,CAAC,CAAC,iCAAD,CADQ,GAETA,CAAC,CAAC,8BAAD,CAHP;AAJJ,SAWE,6BAAC,iCAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,aAAa,EAAC,OAHhB;AAIE,QAAA,OAAO,EAAEU;AAJX,QAXF,EAiBGD,UAAU,CAACJ,GAAX,CAAe,QAAf,IACC,6BAAC,iCAAD;AACE,QAAA,KAAK,EAAEL,CAAC,CAAC,0CAAD,CADV;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,OAAO,EAAEW;AAHX,QADD,GAMG,IAvBN,CADF,CADF;AA6BD,KAjIyC;;AAAA,wDAmIb,MAAM;AAAA,2BAa7B,KAAKd,KAbwB;AAAA,YAE/Ba,SAF+B,gBAE/BA,SAF+B;AAAA,YAG/BX,QAH+B,gBAG/BA,QAH+B;AAAA,YAI/BiB,0BAJ+B,gBAI/BA,0BAJ+B;AAAA,YAK/BlB,UAL+B,gBAK/BA,UAL+B;AAAA,YAM/Be,UAN+B,gBAM/BA,UAN+B;AAAA,YAO/BI,qBAP+B,gBAO/BA,qBAP+B;AAAA,YAQ/BL,YAR+B,gBAQ/BA,YAR+B;AAAA,YAS/BM,UAT+B,gBAS/BA,UAT+B;AAAA,YAU/BJ,UAV+B,gBAU/BA,UAV+B;AAAA,YAW/BK,cAX+B,gBAW/BA,cAX+B;AAAA,YAY/BnB,CAZ+B,gBAY/BA,CAZ+B;AAejC,YAAMoB,WAAW,GACdH,qBAAqB,IACpBE,cADD,IAECnB,CAAC,CAAC,+CAAD,CAFH,IAGCiB,qBAAqB,KACnBH,UAAU,IAAI,CAACK,cADI,CAArB,IAECnB,CAAC,CAAC,6CAAD,CALH,IAMC,CAACiB,qBAAD,IAA0B,CAACE,cAA3B,IAA6CnB,CAAC,CAAC,2CAAD,CAPjD;AASA,aAAO,CACL,6BAAC,UAAD;AAAY,QAAA,GAAG,EAAC,aAAhB;AAA8B,QAAA,OAAO,EAAE,MAAMa,UAAU,IAAIH,SAAS;AAApE,SACGE,YAAY,GAAGZ,CAAC,CAAC,6BAAD,CAAJ,GAAsCA,CAAC,CAAC,2BAAD,CADtD,CADK,EAIL,CAACF,UAAD,IAAe,CAACmB,qBAAhB,IAAyC,CAACE,cAA1C,GAA2D,IAA3D,GACE,6BAAC,YAAD;AACE,QAAA,GAAG,EAAC,eADN;AAEE,QAAA,OAAO,EAAEF,qBAAqB,GAAGD,0BAAH,GAAgCjB;AAFhE,SAIGmB,UAAU,GAAGlB,CAAC,CAAC,+BAAD,CAAJ,GAAwCoB,WAJrD,CALG,CAAP;AAaD,KAxKyC;;AAAA,2DA0KV,MAAM;AAAA,2BAWhC,KAAKvB,KAX2B;AAAA,YAElCY,UAFkC,gBAElCA,UAFkC;AAAA,YAGlCY,gBAHkC,gBAGlCA,gBAHkC;AAAA,YAIlCC,YAJkC,gBAIlCA,YAJkC;AAAA,YAKlCC,cALkC,gBAKlCA,cALkC;AAAA,YAMlCC,SANkC,gBAMlCA,SANkC;AAAA,YAOlCC,eAPkC,gBAOlCA,eAPkC;AAAA,YAQlCC,aARkC,gBAQlCA,aARkC;AAAA,YASlCZ,UATkC,gBASlCA,UATkC;AAAA,YAUlCd,CAVkC,gBAUlCA,CAVkC;;AAYpC,UAAI0B,aAAJ,EAAmB;AACjB,eACE,4DACG,KAAKX,2BAAL,CAAiCf,CAAC,CAAC,+CAAD,CAAlC,CADH,EAEE,6BAAC,eAAD;AACE,UAAA,kBAAkB,EAAC,MADrB;AAEE,UAAA,aAAa,EAAC,OAFhB;AAGE,UAAA,YAAY,EAAE,MACZ,6BAAC,YAAD,QACGqB,gBAAgB,GACbrB,CAAC,CAAC,+BAAD,CADY,GAEbA,CAAC,CAAC,gCAAD,CAHP;AAJJ,WAWE,6BAAC,kBAAD;AACE,UAAA,KAAK,EAAEA,CAAC,CAAC,4BAAD,CADV;AAEE,UAAA,OAAO,EAAE,MAAMuB,cAAc,CAAC,OAAD,CAF/B;AAGE,UAAA,IAAI,EAAEG,aAAa,KAAKpB,qBAAOD,GAAP,CAAW,OAAX,CAAlB,IAAyC;AAHjD,UAXF,EAgBE,6BAAC,kBAAD;AACE,UAAA,KAAK,EAAEL,CAAC,CAAC,+BAAD,CADV;AAEE,UAAA,OAAO,EAAE,MAAMuB,cAAc,CAAC,gBAAD,CAF/B;AAGE,UAAA,IAAI,EAAEG,aAAa,KAAKpB,qBAAOD,GAAP,CAAW,gBAAX,CAAlB,IAAkD;AAH1D,UAhBF,EAqBE,6BAAC,kBAAD;AACE,UAAA,KAAK,EAAEL,CAAC,CAAC,4BAAD,CADV;AAEE,UAAA,OAAO,EAAE,MAAMuB,cAAc,CAAC,iBAAD,CAF/B;AAGE,UAAA,IAAI,EAAEG,aAAa,KAAKpB,qBAAOD,GAAP,CAAW,iBAAX,CAAlB,IAAmD;AAH3D,UArBF,CAFF,EA6BE,6BAAC,eAAD;AACE,UAAA,kBAAkB,EAAC,MADrB;AAEE,UAAA,aAAa,EAAC,OAFhB;AAGE,UAAA,YAAY,EAAE,MACZ,6BAAC,aAAD,QACGiB,YAAY,GACTtB,CAAC,CAAC,iCAAD,CADQ,GAETA,CAAC,CAAC,8BAAD,CAHP;AAJJ,WAWE,6BAAC,iCAAD;AACE,UAAA,KAAK,EAAEA,CAAC,CAAC,iCAAD,CADV;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,aAAa,EAAC,OAHhB;AAIE,UAAA,OAAO,EAAEwB;AAJX,UAXF,EAiBGf,UAAU,CAACJ,GAAX,CAAe,QAAf,IACC,6BAAC,iCAAD;AACE,UAAA,KAAK,EAAEL,CAAC,CAAC,0CAAD,CADV;AAEE,UAAA,IAAI,EAAC,KAFP;AAGE,UAAA,OAAO,EAAEyB;AAHX,UADD,GAMG,IAvBN,CA7BF,CADF;AAyDD;AAED;;;;;AAGA,UAAI,CAACX,UAAL,EAAiB;AACf,eACE,4DACG,KAAKC,2BAAL,CAAiCf,CAAC,CAAC,wCAAD,CAAlC,CADH,EAEE,6BAAC,eAAD,QAAkBA,CAAC,CAAC,gCAAD,CAAnB,CAFF,CADF;AAMD;AACF,KA7PyC;AAAA;;AA6B1C2B,EAAAA,iBAAiB,GAAG;AAAA,yBACwB,KAAK9B,KAD7B;AAAA,UACViB,UADU,gBACVA,UADU;AAAA,UACEX,iBADF,gBACEA,iBADF;;AAElB,QAAI,CAACW,UAAL,EAAiB;AACfX,MAAAA,iBAAiB,CAAC;AAAEyB,QAAAA,WAAW,EAAE;AAAf,OAAD,CAAjB;AACD;AACF;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAAA,yBAC4B,KAAKjC,KADjC;AAAA,UACpBiB,UADoB,gBACpBA,UADoB;AAAA,UACRF,YADQ,gBACRA,YADQ;AAAA,UACMT,iBADN,gBACMA,iBADN;;AAE5B,QAAI,CAACW,UAAD,IAAegB,SAAS,CAAClB,YAAzB,IAAyC,CAACA,YAA9C,EAA4D;AAC1DT,MAAAA,iBAAiB,CAAC;AAAEyB,QAAAA,WAAW,EAAE;AAAf,OAAD,CAAjB;AACD;AACF;;AAsNDG,EAAAA,MAAM,GAAG;AAAA,yBAC6E,KAAKlC,KADlF;AAAA,UACCmC,IADD,gBACCA,IADD;AAAA,UACOnB,UADP,gBACOA,UADP;AAAA,UACmBoB,UADnB,gBACmBA,UADnB;AAAA,UAC+BxB,UAD/B,gBAC+BA,UAD/B;AAAA,UAC2CyB,WAD3C,gBAC2CA,WAD3C;AAAA,UACwDC,aADxD,gBACwDA,aADxD;AAAA,UACuEnC,CADvE,gBACuEA,CADvE;AAGP,WACE,6BAAC,gBAAD,QACE,6BAAC,sBAAD;AAAwB,MAAA,EAAE,EAAG,gBAAeS,UAAU,CAACJ,GAAX,CAAe,MAAf,CAAuB;AAAnE,OACE,6BAAC,SAAD,iBADF,EAEE,0CACE,6BAAC,cAAD,QACGL,CAAC,CAAC,qCAAD,EAAwC;AACxCoC,MAAAA,eAAe,EAAE3B,UAAU,CAACJ,GAAX,CAAe,OAAf;AADuB,KAAxC,CADJ,CADF,EAMGQ,UAAU,GACT,6BAAC,iBAAD,QAAoBb,CAAC,CAAC,qCAAD,CAArB,CADS,GAGT,6BAAC,mBAAD,QAAsBA,CAAC,CAAC,mCAAD,CAAvB,CATJ,CAFF,CADF,EAgBE,6BAAC,kBAAD,QACE,6BAAC,sBAAD,QACGkC,WAAW,GAAG,KAAKG,0BAAL,EAAH,GAAuC,KAAKC,wBAAL,EADrD,CADF,EAIE,6BAAC,qBAAD,QACGJ,WAAW,GACR,KAAKK,6BAAL,EADQ,GAER,KAAKC,2BAAL,EAHN,CAJF,CAhBF,EA0BE,6BAAC,kBAAD,QACE,6BAAC,yBAAD;AACE,MAAA,UAAU,EAAEP,UADd;AAEE,MAAA,QAAQ,EAAED,IAAI,CAAC3B,GAAL,CAAS,YAAT,CAFZ;AAGE,MAAA,aAAa,EAAE8B;AAHjB,MADF,CA1BF,CADF;AAoCD;;AAtSyC;;gBAAtCzC,a,eACe;AACjBkB,EAAAA,YAAY,EAAE6B,mBAAUC,IADP;AAEjBpB,EAAAA,YAAY,EAAEmB,mBAAUC,IAFP;AAGjBrB,EAAAA,gBAAgB,EAAEoB,mBAAUC,IAHX;AAIjBxB,EAAAA,UAAU,EAAEuB,mBAAUC,IAJL;AAKjBhC,EAAAA,SAAS,EAAE+B,mBAAUE,IAAV,CAAeC,UALT;AAMjBjC,EAAAA,eAAe,EAAE8B,mBAAUE,IAAV,CAAeC,UANf;AAOjB9C,EAAAA,UAAU,EAAE2C,mBAAUC,IAAV,CAAeE,UAPV;AAQjB7C,EAAAA,QAAQ,EAAE0C,mBAAUE,IAAV,CAAeC,UARR;AASjB5B,EAAAA,0BAA0B,EAAEyB,mBAAUE,IAAV,CAAeC,UAT1B;AAUjBrB,EAAAA,cAAc,EAAEkB,mBAAUE,IAAV,CAAeC,UAVd;AAWjBpB,EAAAA,SAAS,EAAEiB,mBAAUE,IAAV,CAAeC,UAXT;AAYjBnB,EAAAA,eAAe,EAAEgB,mBAAUE,IAAV,CAAeC,UAZf;AAajBZ,EAAAA,IAAI,EAAEa,iCAAmBC,GAAnB,CAAuBF,UAbZ;AAcjB/B,EAAAA,UAAU,EAAE4B,mBAAUC,IAdL;AAejBT,EAAAA,UAAU,EAAEQ,mBAAUM,MAfL;AAgBjBtC,EAAAA,UAAU,EAAEoC,iCAAmBC,GAAnB,CAAuBF,UAhBlB;AAiBjBV,EAAAA,WAAW,EAAEO,mBAAUC,IAjBN;AAkBjBzB,EAAAA,qBAAqB,EAAEwB,mBAAUC,IAlBhB;AAmBjB5B,EAAAA,UAAU,EAAE2B,mBAAUC,IAnBL;AAoBjBvB,EAAAA,cAAc,EAAEsB,mBAAUC,IApBT;AAqBjBhB,EAAAA,aAAa,EAAEe,mBAAUM,MArBR;AAsBjBZ,EAAAA,aAAa,EAAEM,mBAAUE,IAAV,CAAeC,UAtBb;AAuBjB1C,EAAAA,aAAa,EAAE2C,iCAAmBC,GAvBjB;AAwBjB3C,EAAAA,iBAAiB,EAAEsC,mBAAUE,IAAV,CAAeC,UAxBjB;AAyBjB5C,EAAAA,CAAC,EAAEyC,mBAAUE,IAAV,CAAeC;AAzBD,C;;eAwSN,gCAAYlD,aAAZ,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { translate } from 'react-polyglot';\nimport { Map } from 'immutable';\nimport { Link } from 'react-router-dom';\nimport {\n  Icon,\n  Dropdown,\n  DropdownItem,\n  StyledDropdownButton,\n  colorsRaw,\n  colors,\n  components,\n  buttons,\n  lengths,\n} from 'netlify-cms-ui-default';\nimport { status } from 'Constants/publishModes';\nimport SettingsDropdown from 'UI/SettingsDropdown';\n\nconst styles = {\n  buttonMargin: css`\n    margin: 0 10px;\n  `,\n  toolbarSection: css`\n    height: 100%;\n    display: flex;\n    align-items: center;\n    border: 0 solid ${colors.textFieldBorder};\n  `,\n};\n\nconst ToolbarContainer = styled.div`\n  box-shadow: 0 2px 6px 0 rgba(68, 74, 87, 0.05), 0 1px 3px 0 rgba(68, 74, 87, 0.1),\n    0 2px 54px rgba(0, 0, 0, 0.1);\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  min-width: 800px;\n  z-index: 300;\n  background-color: #fff;\n  height: 66px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ToolbarSectionMain = styled.div`\n  ${styles.toolbarSection};\n  flex: 10;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 10px;\n`;\n\nconst ToolbarSubSectionFirst = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ToolbarSubSectionLast = styled(ToolbarSubSectionFirst)`\n  justify-content: flex-end;\n`;\n\nconst ToolbarSectionBackLink = styled(Link)`\n  ${styles.toolbarSection};\n  border-right-width: 1px;\n  font-weight: normal;\n  padding: 0 20px;\n\n  &:hover,\n  &:focus {\n    background-color: #f1f2f4;\n  }\n`;\n\nconst ToolbarSectionMeta = styled.div`\n  ${styles.toolbarSection};\n  border-left-width: 1px;\n  padding: 0 7px;\n`;\n\nconst ToolbarDropdown = styled(Dropdown)`\n  ${styles.buttonMargin};\n\n  ${Icon} {\n    color: ${colorsRaw.teal};\n  }\n`;\n\nconst BackArrow = styled.div`\n  color: ${colors.textLead};\n  font-size: 21px;\n  font-weight: 600;\n  margin-right: 16px;\n`;\n\nconst BackCollection = styled.div`\n  color: ${colors.textLead};\n  font-size: 14px;\n`;\n\nconst BackStatus = styled.div`\n  margin-top: 6px;\n`;\n\nconst BackStatusUnchanged = styled(BackStatus)`\n  ${components.textBadgeSuccess};\n\n  &::after {\n    height: 12px;\n    width: 15.5px;\n    color: ${colors.successText};\n    margin-left: 5px;\n\n    position: relative;\n    top: 1px;\n\n    content: url(\"data:image/svg+xml; utf8, <svg xmlns='http://www.w3.org/2000/svg' width='15' height='11'><path fill='#005614' fill-rule='nonzero' d='M4.016 11l-.648-.946a6.202 6.202 0 0 0-.157-.22 9.526 9.526 0 0 1-.096-.133l-.511-.7a7.413 7.413 0 0 0-.162-.214l-.102-.134-.265-.346a26.903 26.903 0 0 0-.543-.687l-.11-.136c-.143-.179-.291-.363-.442-.54l-.278-.332a8.854 8.854 0 0 0-.192-.225L.417 6.28l-.283-.324L0 5.805l1.376-1.602c.04.027.186.132.186.132l.377.272.129.095c.08.058.16.115.237.175l.37.28c.192.142.382.292.565.436l.162.126c.27.21.503.398.714.574l.477.393c.078.064.156.127.23.194l.433.375.171-.205A50.865 50.865 0 0 1 8.18 4.023a35.163 35.163 0 0 1 2.382-2.213c.207-.174.42-.349.635-.518l.328-.255.333-.245c.072-.055.146-.107.221-.159l.117-.083c.11-.077.225-.155.341-.23.163-.11.334-.217.503-.32l1.158 1.74a11.908 11.908 0 0 0-.64.55l-.065.06c-.07.062-.139.125-.207.192l-.258.249-.26.265c-.173.176-.345.357-.512.539a32.626 32.626 0 0 0-1.915 2.313 52.115 52.115 0 0 0-2.572 3.746l-.392.642-.19.322-.233.382H4.016z'/></svg>\");\n  }\n`;\n\nconst BackStatusChanged = styled(BackStatus)`\n  ${components.textBadgeDanger};\n`;\n\nconst ToolbarButton = styled.button`\n  ${buttons.button};\n  ${buttons.default};\n  ${styles.buttonMargin};\n  display: block;\n`;\n\nconst DeleteButton = styled(ToolbarButton)`\n  ${buttons.lightRed};\n`;\n\nconst SaveButton = styled(ToolbarButton)`\n  ${buttons.lightBlue};\n`;\n\nconst StatusPublished = styled.div`\n  ${styles.buttonMargin};\n  border: 1px solid ${colors.textFieldBorder};\n  border-radius: ${lengths.borderRadius};\n  background-color: ${colorsRaw.white};\n  color: ${colorsRaw.teal};\n  padding: 0 24px;\n  line-height: 36px;\n  cursor: default;\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst PublishButton = styled(StyledDropdownButton)`\n  background-color: ${colorsRaw.teal};\n`;\n\nconst StatusButton = styled(StyledDropdownButton)`\n  background-color: ${colorsRaw.tealLight};\n  color: ${colorsRaw.teal};\n`;\n\nconst PreviewButtonContainer = styled.div`\n  margin-right: 12px;\n  color: ${colorsRaw.blue};\n  display: flex;\n  align-items: center;\n\n  a,\n  ${Icon} {\n    color: ${colorsRaw.blue};\n  }\n\n  ${Icon} {\n    position: relative;\n    top: 1px;\n  }\n`;\n\nconst RefreshPreviewButton = styled.button`\n  background: none;\n  border: 0;\n  cursor: pointer;\n  color: ${colorsRaw.blue};\n\n  span {\n    margin-right: 6px;\n  }\n`;\n\nconst PreviewLink = RefreshPreviewButton.withComponent('a');\n\nconst StatusDropdownItem = styled(DropdownItem)`\n  ${Icon} {\n    color: ${colors.infoText};\n  }\n`;\n\nclass EditorToolbar extends React.Component {\n  static propTypes = {\n    isPersisting: PropTypes.bool,\n    isPublishing: PropTypes.bool,\n    isUpdatingStatus: PropTypes.bool,\n    isDeleting: PropTypes.bool,\n    onPersist: PropTypes.func.isRequired,\n    onPersistAndNew: PropTypes.func.isRequired,\n    showDelete: PropTypes.bool.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onDeleteUnpublishedChanges: PropTypes.func.isRequired,\n    onChangeStatus: PropTypes.func.isRequired,\n    onPublish: PropTypes.func.isRequired,\n    onPublishAndNew: PropTypes.func.isRequired,\n    user: ImmutablePropTypes.map.isRequired,\n    hasChanged: PropTypes.bool,\n    displayUrl: PropTypes.string,\n    collection: ImmutablePropTypes.map.isRequired,\n    hasWorkflow: PropTypes.bool,\n    hasUnpublishedChanges: PropTypes.bool,\n    isNewEntry: PropTypes.bool,\n    isModification: PropTypes.bool,\n    currentStatus: PropTypes.string,\n    onLogoutClick: PropTypes.func.isRequired,\n    deployPreview: ImmutablePropTypes.map,\n    loadDeployPreview: PropTypes.func.isRequired,\n    t: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    const { isNewEntry, loadDeployPreview } = this.props;\n    if (!isNewEntry) {\n      loadDeployPreview({ maxAttempts: 3 });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isNewEntry, isPersisting, loadDeployPreview } = this.props;\n    if (!isNewEntry && prevProps.isPersisting && !isPersisting) {\n      loadDeployPreview({ maxAttempts: 3 });\n    }\n  }\n\n  renderSimpleSaveControls = () => {\n    const { showDelete, onDelete, t } = this.props;\n    return (\n      <div>\n        {showDelete ? (\n          <DeleteButton onClick={onDelete}>{t('editor.editorToolbar.deleteEntry')}</DeleteButton>\n        ) : null}\n      </div>\n    );\n  };\n\n  renderDeployPreviewControls = label => {\n    const { deployPreview = Map(), loadDeployPreview, t } = this.props;\n    const url = deployPreview.get('url');\n    const status = deployPreview.get('status');\n\n    if (!status) {\n      return;\n    }\n\n    const isFetching = deployPreview.get('isFetching');\n    const deployPreviewReady = status === 'SUCCESS' && !isFetching;\n    return (\n      <PreviewButtonContainer>\n        {deployPreviewReady ? (\n          <PreviewLink rel=\"noopener noreferrer\" target=\"_blank\" href={url}>\n            <span>{label}</span>\n            <Icon type=\"new-tab\" size=\"xsmall\" />\n          </PreviewLink>\n        ) : (\n          <RefreshPreviewButton onClick={loadDeployPreview}>\n            <span>{t('editor.editorToolbar.deployPreviewPendingButtonLabel')}</span>\n            <Icon type=\"refresh\" size=\"xsmall\" />\n          </RefreshPreviewButton>\n        )}\n      </PreviewButtonContainer>\n    );\n  };\n\n  renderSimplePublishControls = () => {\n    const {\n      collection,\n      onPersist,\n      onPersistAndNew,\n      isPersisting,\n      hasChanged,\n      isNewEntry,\n      t,\n    } = this.props;\n    if (!isNewEntry && !hasChanged) {\n      return (\n        <>\n          {this.renderDeployPreviewControls(t('editor.editorToolbar.deployButtonLabel'))}\n          <StatusPublished>{t('editor.editorToolbar.published')}</StatusPublished>\n        </>\n      );\n    }\n    return (\n      <div>\n        <ToolbarDropdown\n          dropdownTopOverlap=\"40px\"\n          dropdownWidth=\"150px\"\n          renderButton={() => (\n            <PublishButton>\n              {isPersisting\n                ? t('editor.editorToolbar.publishing')\n                : t('editor.editorToolbar.publish')}\n            </PublishButton>\n          )}\n        >\n          <DropdownItem\n            label=\"Publish now\"\n            icon=\"arrow\"\n            iconDirection=\"right\"\n            onClick={onPersist}\n          />\n          {collection.get('create') ? (\n            <DropdownItem\n              label={t('editor.editorToolbar.publishAndCreateNew')}\n              icon=\"add\"\n              onClick={onPersistAndNew}\n            />\n          ) : null}\n        </ToolbarDropdown>\n      </div>\n    );\n  };\n\n  renderWorkflowSaveControls = () => {\n    const {\n      onPersist,\n      onDelete,\n      onDeleteUnpublishedChanges,\n      showDelete,\n      hasChanged,\n      hasUnpublishedChanges,\n      isPersisting,\n      isDeleting,\n      isNewEntry,\n      isModification,\n      t,\n    } = this.props;\n\n    const deleteLabel =\n      (hasUnpublishedChanges &&\n        isModification &&\n        t('editor.editorToolbar.deleteUnpublishedChanges')) ||\n      (hasUnpublishedChanges &&\n        (isNewEntry || !isModification) &&\n        t('editor.editorToolbar.deleteUnpublishedEntry')) ||\n      (!hasUnpublishedChanges && !isModification && t('editor.editorToolbar.deletePublishedEntry'));\n\n    return [\n      <SaveButton key=\"save-button\" onClick={() => hasChanged && onPersist()}>\n        {isPersisting ? t('editor.editorToolbar.saving') : t('editor.editorToolbar.save')}\n      </SaveButton>,\n      !showDelete && !hasUnpublishedChanges && !isModification ? null : (\n        <DeleteButton\n          key=\"delete-button\"\n          onClick={hasUnpublishedChanges ? onDeleteUnpublishedChanges : onDelete}\n        >\n          {isDeleting ? t('editor.editorToolbar.deleting') : deleteLabel}\n        </DeleteButton>\n      ),\n    ];\n  };\n\n  renderWorkflowPublishControls = () => {\n    const {\n      collection,\n      isUpdatingStatus,\n      isPublishing,\n      onChangeStatus,\n      onPublish,\n      onPublishAndNew,\n      currentStatus,\n      isNewEntry,\n      t,\n    } = this.props;\n    if (currentStatus) {\n      return (\n        <>\n          {this.renderDeployPreviewControls(t('editor.editorToolbar.deployPreviewButtonLabel'))}\n          <ToolbarDropdown\n            dropdownTopOverlap=\"40px\"\n            dropdownWidth=\"120px\"\n            renderButton={() => (\n              <StatusButton>\n                {isUpdatingStatus\n                  ? t('editor.editorToolbar.updating')\n                  : t('editor.editorToolbar.setStatus')}\n              </StatusButton>\n            )}\n          >\n            <StatusDropdownItem\n              label={t('editor.editorToolbar.draft')}\n              onClick={() => onChangeStatus('DRAFT')}\n              icon={currentStatus === status.get('DRAFT') && 'check'}\n            />\n            <StatusDropdownItem\n              label={t('editor.editorToolbar.inReview')}\n              onClick={() => onChangeStatus('PENDING_REVIEW')}\n              icon={currentStatus === status.get('PENDING_REVIEW') && 'check'}\n            />\n            <StatusDropdownItem\n              label={t('editor.editorToolbar.ready')}\n              onClick={() => onChangeStatus('PENDING_PUBLISH')}\n              icon={currentStatus === status.get('PENDING_PUBLISH') && 'check'}\n            />\n          </ToolbarDropdown>\n          <ToolbarDropdown\n            dropdownTopOverlap=\"40px\"\n            dropdownWidth=\"150px\"\n            renderButton={() => (\n              <PublishButton>\n                {isPublishing\n                  ? t('editor.editorToolbar.publishing')\n                  : t('editor.editorToolbar.publish')}\n              </PublishButton>\n            )}\n          >\n            <DropdownItem\n              label={t('editor.editorToolbar.publishNow')}\n              icon=\"arrow\"\n              iconDirection=\"right\"\n              onClick={onPublish}\n            />\n            {collection.get('create') ? (\n              <DropdownItem\n                label={t('editor.editorToolbar.publishAndCreateNew')}\n                icon=\"add\"\n                onClick={onPublishAndNew}\n              />\n            ) : null}\n          </ToolbarDropdown>\n        </>\n      );\n    }\n\n    /**\n     * Publish control for published workflow entry.\n     */\n    if (!isNewEntry) {\n      return (\n        <>\n          {this.renderDeployPreviewControls(t('editor.editorToolbar.deployButtonLabel'))}\n          <StatusPublished>{t('editor.editorToolbar.published')}</StatusPublished>\n        </>\n      );\n    }\n  };\n\n  render() {\n    const { user, hasChanged, displayUrl, collection, hasWorkflow, onLogoutClick, t } = this.props;\n\n    return (\n      <ToolbarContainer>\n        <ToolbarSectionBackLink to={`/collections/${collection.get('name')}`}>\n          <BackArrow>←</BackArrow>\n          <div>\n            <BackCollection>\n              {t('editor.editorToolbar.backCollection', {\n                collectionLabel: collection.get('label'),\n              })}\n            </BackCollection>\n            {hasChanged ? (\n              <BackStatusChanged>{t('editor.editorToolbar.unsavedChanges')}</BackStatusChanged>\n            ) : (\n              <BackStatusUnchanged>{t('editor.editorToolbar.changesSaved')}</BackStatusUnchanged>\n            )}\n          </div>\n        </ToolbarSectionBackLink>\n        <ToolbarSectionMain>\n          <ToolbarSubSectionFirst>\n            {hasWorkflow ? this.renderWorkflowSaveControls() : this.renderSimpleSaveControls()}\n          </ToolbarSubSectionFirst>\n          <ToolbarSubSectionLast>\n            {hasWorkflow\n              ? this.renderWorkflowPublishControls()\n              : this.renderSimplePublishControls()}\n          </ToolbarSubSectionLast>\n        </ToolbarSectionMain>\n        <ToolbarSectionMeta>\n          <SettingsDropdown\n            displayUrl={displayUrl}\n            imageUrl={user.get('avatar_url')}\n            onLogoutClick={onLogoutClick}\n          />\n        </ToolbarSectionMeta>\n      </ToolbarContainer>\n    );\n  }\n}\n\nexport default translate()(EditorToolbar);\n"],"file":"EditorToolbar.js"}