{"version":3,"sources":["../../../src/formats/toml.js"],"names":["outputReplacer","key","value","moment","isMoment","format","_f","AssetProxy","path","Number","isInteger","toString","fromFile","content","toml","parse","toFile","data","sortedKeys","tomlify","toToml","replace","sort"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,cAAc,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrC,MAAIC,gBAAOC,QAAP,CAAgBF,KAAhB,CAAJ,EAA4B;AAC1B,WAAOA,KAAK,CAACG,MAAN,CAAaH,KAAK,CAACI,EAAnB,CAAP;AACD;;AACD,MAAIJ,KAAK,YAAYK,mBAArB,EAAiC;AAC/B,WAAQ,GAAEL,KAAK,CAACM,IAAK,EAArB;AACD;;AACD,MAAIC,MAAM,CAACC,SAAP,CAAiBR,KAAjB,CAAJ,EAA6B;AAC3B;AACA,WAAOA,KAAK,CAACS,QAAN,EAAP;AACD,GAVoC,CAWrC;;;AACA,SAAO,KAAP;AACD,CAbD;;eAee;AACbC,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChB,WAAOC,eAAKC,KAAL,CAAWF,OAAX,CAAP;AACD,GAHY;;AAKbG,EAAAA,MAAM,CAACC,IAAD,EAAwB;AAAA,QAAjBC,UAAiB,uEAAJ,EAAI;AAC5B,WAAOC,kBAAQC,MAAR,CAAeH,IAAf,EAAqB;AAAEI,MAAAA,OAAO,EAAErB,cAAX;AAA2BsB,MAAAA,IAAI,EAAE,uBAASJ,UAAT;AAAjC,KAArB,CAAP;AACD;;AAPY,C","sourcesContent":["import toml from 'toml-j0.4';\nimport tomlify from 'tomlify-j0.4';\nimport moment from 'moment';\nimport AssetProxy from 'ValueObjects/AssetProxy';\nimport { sortKeys } from './helpers';\n\nconst outputReplacer = (key, value) => {\n  if (moment.isMoment(value)) {\n    return value.format(value._f);\n  }\n  if (value instanceof AssetProxy) {\n    return `${value.path}`;\n  }\n  if (Number.isInteger(value)) {\n    // Return the string representation of integers so tomlify won't render with tenths (\".0\")\n    return value.toString();\n  }\n  // Return `false` to use default (`undefined` would delete key).\n  return false;\n};\n\nexport default {\n  fromFile(content) {\n    return toml.parse(content);\n  },\n\n  toFile(data, sortedKeys = []) {\n    return tomlify.toToml(data, { replace: outputReplacer, sort: sortKeys(sortedKeys) });\n  },\n};\n"],"file":"toml.js"}