{"version":3,"sources":["../../../../../src/components/Editor/EditorPreviewPane/PreviewHOC.js"],"names":["PreviewHOC","React","Component","shouldComponentUpdate","nextProps","isWidgetContainer","includes","field","get","props","value","fieldsMetaData","render","previewComponent","createElement","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","map","oneOfType","node","object","string","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,UAAN,SAAyBC,eAAMC,SAA/B,CAAyC;AACvC;;;;;AAKAC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/B,UAAMC,iBAAiB,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmBC,QAAnB,CAA4BF,SAAS,CAACG,KAAV,CAAgBC,GAAhB,CAAoB,QAApB,CAA5B,CAA1B;AACA,WACEH,iBAAiB,IACjB,KAAKI,KAAL,CAAWC,KAAX,KAAqBN,SAAS,CAACM,KAD/B,IAEA,KAAKD,KAAL,CAAWE,cAAX,KAA8BP,SAAS,CAACO,cAH1C;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKH,KADrC;AAAA,UACCI,gBADD,eACCA,gBADD;AAAA,UACsBJ,KADtB;;AAEP,WAAOR,eAAMa,aAAN,CAAoBD,gBAApB,EAAsCJ,KAAtC,CAAP;AACD;;AAlBsC;;AAqBzCT,UAAU,CAACe,SAAX,GAAuB;AACrBF,EAAAA,gBAAgB,EAAEG,mBAAUC,IAAV,CAAeC,UADZ;AAErBX,EAAAA,KAAK,EAAEY,iCAAmBC,GAAnB,CAAuBF,UAFT;AAGrBR,EAAAA,KAAK,EAAEM,mBAAUK,SAAV,CAAoB,CAACL,mBAAUM,IAAX,EAAiBN,mBAAUO,MAA3B,EAAmCP,mBAAUQ,MAA7C,EAAqDR,mBAAUS,IAA/D,CAApB;AAHc,CAAvB;eAMezB,U","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nclass PreviewHOC extends React.Component {\n  /**\n   * Only re-render on value change, but always re-render objects and lists.\n   * Their child widgets will each also be wrapped with this component, and\n   * will only be updated on value change.\n   */\n  shouldComponentUpdate(nextProps) {\n    const isWidgetContainer = ['object', 'list'].includes(nextProps.field.get('widget'));\n    return (\n      isWidgetContainer ||\n      this.props.value !== nextProps.value ||\n      this.props.fieldsMetaData !== nextProps.fieldsMetaData\n    );\n  }\n\n  render() {\n    const { previewComponent, ...props } = this.props;\n    return React.createElement(previewComponent, props);\n  }\n}\n\nPreviewHOC.propTypes = {\n  previewComponent: PropTypes.func.isRequired,\n  field: ImmutablePropTypes.map.isRequired,\n  value: PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.string, PropTypes.bool]),\n};\n\nexport default PreviewHOC;\n"],"file":"PreviewHOC.js"}