{"version":3,"sources":["../../../src/reducers/editorialWorkflow.js"],"names":["unpublishedEntries","state","action","type","CONFIG_SUCCESS","publishMode","payload","get","EDITORIAL_WORKFLOW","entities","pages","UNPUBLISHED_ENTRY_REQUEST","setIn","collection","slug","UNPUBLISHED_ENTRY_REDIRECT","deleteIn","UNPUBLISHED_ENTRY_SUCCESS","entry","UNPUBLISHED_ENTRIES_REQUEST","UNPUBLISHED_ENTRIES_SUCCESS","withMutations","map","entries","forEach","set","ids","UNPUBLISHED_ENTRY_PERSIST_REQUEST","updateIn","list","push","UNPUBLISHED_ENTRY_PERSIST_SUCCESS","UNPUBLISHED_ENTRY_STATUS_CHANGE_REQUEST","newStatus","UNPUBLISHED_ENTRY_STATUS_CHANGE_SUCCESS","UNPUBLISHED_ENTRY_STATUS_CHANGE_FAILURE","UNPUBLISHED_ENTRY_PUBLISH_REQUEST","UNPUBLISHED_ENTRY_PUBLISH_SUCCESS","UNPUBLISHED_ENTRY_PUBLISH_FAILURE","UNPUBLISHED_ENTRY_DELETE_SUCCESS","selectUnpublishedEntry","getIn","selectUnpublishedEntriesByStatus","status","filter","valueSeq"],"mappings":"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","sourcesContent":["import { Map, List, fromJS } from 'immutable';\nimport { EDITORIAL_WORKFLOW } from 'Constants/publishModes';\nimport {\n  UNPUBLISHED_ENTRY_REQUEST,\n  UNPUBLISHED_ENTRY_REDIRECT,\n  UNPUBLISHED_ENTRY_SUCCESS,\n  UNPUBLISHED_ENTRIES_REQUEST,\n  UNPUBLISHED_ENTRIES_SUCCESS,\n  UNPUBLISHED_ENTRY_PERSIST_REQUEST,\n  UNPUBLISHED_ENTRY_PERSIST_SUCCESS,\n  UNPUBLISHED_ENTRY_STATUS_CHANGE_REQUEST,\n  UNPUBLISHED_ENTRY_STATUS_CHANGE_SUCCESS,\n  UNPUBLISHED_ENTRY_STATUS_CHANGE_FAILURE,\n  UNPUBLISHED_ENTRY_PUBLISH_REQUEST,\n  UNPUBLISHED_ENTRY_PUBLISH_SUCCESS,\n  UNPUBLISHED_ENTRY_PUBLISH_FAILURE,\n  UNPUBLISHED_ENTRY_DELETE_SUCCESS,\n} from 'Actions/editorialWorkflow';\nimport { CONFIG_SUCCESS } from 'Actions/config';\n\nconst unpublishedEntries = (state = Map(), action) => {\n  switch (action.type) {\n    case CONFIG_SUCCESS: {\n      const publishMode = action.payload && action.payload.get('publish_mode');\n      if (publishMode === EDITORIAL_WORKFLOW) {\n        //  Editorial workflow state is explicetelly initiated after the config.\n        return Map({ entities: Map(), pages: Map() });\n      }\n      return state;\n    }\n    case UNPUBLISHED_ENTRY_REQUEST:\n      return state.setIn(\n        ['entities', `${action.payload.collection}.${action.payload.slug}`, 'isFetching'],\n        true,\n      );\n\n    case UNPUBLISHED_ENTRY_REDIRECT:\n      return state.deleteIn(['entities', `${action.payload.collection}.${action.payload.slug}`]);\n\n    case UNPUBLISHED_ENTRY_SUCCESS:\n      return state.setIn(\n        ['entities', `${action.payload.collection}.${action.payload.entry.slug}`],\n        fromJS(action.payload.entry),\n      );\n\n    case UNPUBLISHED_ENTRIES_REQUEST:\n      return state.setIn(['pages', 'isFetching'], true);\n\n    case UNPUBLISHED_ENTRIES_SUCCESS:\n      return state.withMutations(map => {\n        action.payload.entries.forEach(entry =>\n          map.setIn(\n            ['entities', `${entry.collection}.${entry.slug}`],\n            fromJS(entry).set('isFetching', false),\n          ),\n        );\n        map.set(\n          'pages',\n          Map({\n            ...action.payload.pages,\n            ids: List(action.payload.entries.map(entry => entry.slug)),\n          }),\n        );\n      });\n\n    case UNPUBLISHED_ENTRY_PERSIST_REQUEST:\n      // Update Optimistically\n      return state.withMutations(map => {\n        map.setIn(\n          ['entities', `${action.payload.collection}.${action.payload.entry.get('slug')}`],\n          fromJS(action.payload.entry),\n        );\n        map.setIn(\n          [\n            'entities',\n            `${action.payload.collection}.${action.payload.entry.get('slug')}`,\n            'isPersisting',\n          ],\n          true,\n        );\n        map.updateIn(['pages', 'ids'], List(), list => list.push(action.payload.entry.get('slug')));\n      });\n\n    case UNPUBLISHED_ENTRY_PERSIST_SUCCESS:\n      // Update Optimistically\n      return state.deleteIn([\n        'entities',\n        `${action.payload.collection}.${action.payload.entry.get('slug')}`,\n        'isPersisting',\n      ]);\n\n    case UNPUBLISHED_ENTRY_STATUS_CHANGE_REQUEST:\n      // Update Optimistically\n      return state.withMutations(map => {\n        map.setIn(\n          ['entities', `${action.payload.collection}.${action.payload.slug}`, 'metaData', 'status'],\n          action.payload.newStatus,\n        );\n        map.setIn(\n          ['entities', `${action.payload.collection}.${action.payload.slug}`, 'isUpdatingStatus'],\n          true,\n        );\n      });\n\n    case UNPUBLISHED_ENTRY_STATUS_CHANGE_SUCCESS:\n    case UNPUBLISHED_ENTRY_STATUS_CHANGE_FAILURE:\n      return state.setIn(\n        ['entities', `${action.payload.collection}.${action.payload.slug}`, 'isUpdatingStatus'],\n        false,\n      );\n\n    case UNPUBLISHED_ENTRY_PUBLISH_REQUEST:\n      return state.setIn(\n        ['entities', `${action.payload.collection}.${action.payload.slug}`, 'isPublishing'],\n        true,\n      );\n\n    case UNPUBLISHED_ENTRY_PUBLISH_SUCCESS:\n    case UNPUBLISHED_ENTRY_PUBLISH_FAILURE:\n      return state.withMutations(map => {\n        map.deleteIn(['entities', `${action.payload.collection}.${action.payload.slug}`]);\n      });\n\n    case UNPUBLISHED_ENTRY_DELETE_SUCCESS:\n      return state.deleteIn(['entities', `${action.payload.collection}.${action.payload.slug}`]);\n\n    default:\n      return state;\n  }\n};\n\nexport const selectUnpublishedEntry = (state, collection, slug) =>\n  state && state.getIn(['entities', `${collection}.${slug}`]);\n\nexport const selectUnpublishedEntriesByStatus = (state, status) => {\n  if (!state) return null;\n  return state\n    .get('entities')\n    .filter(entry => entry.getIn(['metaData', 'status']) === status)\n    .valueSeq();\n};\n\nexport default unpublishedEntries;\n"],"file":"editorialWorkflow.js"}