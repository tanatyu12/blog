{"version":3,"sources":["../../../../src/components/Workflow/Workflow.js"],"names":["WorkflowContainer","lengths","pageMargin","WorkflowTop","components","cardTop","WorkflowTopRow","shadows","dropDeep","WorkflowTopHeading","cardTopHeading","WorkflowTopDescription","cardTopDescription","Workflow","Component","componentDidMount","props","loadUnpublishedEntries","isEditorialWorkflow","collections","render","isFetching","unpublishedEntries","updateUnpublishedEntryStatus","publishUnpublishedEntry","deleteUnpublishedEntry","t","reviewCount","get","size","readyCount","filter","collection","toList","map","smart_count","ImmutablePropTypes","orderedMap","PropTypes","bool","isRequired","func","mapStateToProps","state","config","EDITORIAL_WORKFLOW","returnObj","editorialWorkflow","getIn","status","reduce","acc","currStatus","entries","set"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport styled from '@emotion/styled';\nimport { OrderedMap } from 'immutable';\nimport { translate } from 'react-polyglot';\nimport { connect } from 'react-redux';\nimport {\n  Dropdown,\n  DropdownItem,\n  StyledDropdownButton,\n  Loader,\n  lengths,\n  components,\n  shadows,\n} from 'netlify-cms-ui-default';\nimport { createNewEntry } from 'Actions/collections';\nimport {\n  loadUnpublishedEntries,\n  updateUnpublishedEntryStatus,\n  publishUnpublishedEntry,\n  deleteUnpublishedEntry,\n} from 'Actions/editorialWorkflow';\nimport { selectUnpublishedEntriesByStatus } from 'Reducers';\nimport { EDITORIAL_WORKFLOW, status } from 'Constants/publishModes';\nimport WorkflowList from './WorkflowList';\n\nconst WorkflowContainer = styled.div`\n  padding: ${lengths.pageMargin} 0;\n  height: 100vh;\n`;\n\nconst WorkflowTop = styled.div`\n  ${components.cardTop};\n`;\n\nconst WorkflowTopRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  span[role='button'] {\n    ${shadows.dropDeep};\n  }\n`;\n\nconst WorkflowTopHeading = styled.h1`\n  ${components.cardTopHeading};\n`;\n\nconst WorkflowTopDescription = styled.p`\n  ${components.cardTopDescription};\n`;\n\nclass Workflow extends Component {\n  static propTypes = {\n    collections: ImmutablePropTypes.orderedMap,\n    isEditorialWorkflow: PropTypes.bool.isRequired,\n    isFetching: PropTypes.bool,\n    unpublishedEntries: ImmutablePropTypes.map,\n    loadUnpublishedEntries: PropTypes.func.isRequired,\n    updateUnpublishedEntryStatus: PropTypes.func.isRequired,\n    publishUnpublishedEntry: PropTypes.func.isRequired,\n    deleteUnpublishedEntry: PropTypes.func.isRequired,\n    t: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    const { loadUnpublishedEntries, isEditorialWorkflow, collections } = this.props;\n    if (isEditorialWorkflow) {\n      loadUnpublishedEntries(collections);\n    }\n  }\n\n  render() {\n    const {\n      isEditorialWorkflow,\n      isFetching,\n      unpublishedEntries,\n      updateUnpublishedEntryStatus,\n      publishUnpublishedEntry,\n      deleteUnpublishedEntry,\n      collections,\n      t,\n    } = this.props;\n\n    if (!isEditorialWorkflow) return null;\n    if (isFetching) return <Loader active>{t('workflow.workflow.loading')}</Loader>;\n    const reviewCount = unpublishedEntries.get('pending_review').size;\n    const readyCount = unpublishedEntries.get('pending_publish').size;\n\n    return (\n      <WorkflowContainer>\n        <WorkflowTop>\n          <WorkflowTopRow>\n            <WorkflowTopHeading>{t('workflow.workflow.workflowHeading')}</WorkflowTopHeading>\n            <Dropdown\n              dropdownWidth=\"160px\"\n              dropdownPosition=\"left\"\n              dropdownTopOverlap=\"40px\"\n              renderButton={() => (\n                <StyledDropdownButton>{t('workflow.workflow.newPost')}</StyledDropdownButton>\n              )}\n            >\n              {collections\n                .filter(collection => collection.get('create'))\n                .toList()\n                .map(collection => (\n                  <DropdownItem\n                    key={collection.get('name')}\n                    label={collection.get('label')}\n                    onClick={() => createNewEntry(collection.get('name'))}\n                  />\n                ))}\n            </Dropdown>\n          </WorkflowTopRow>\n          <WorkflowTopDescription>\n            {t('workflow.workflow.description', {\n              smart_count: reviewCount,\n              readyCount: readyCount,\n            })}\n          </WorkflowTopDescription>\n        </WorkflowTop>\n        <WorkflowList\n          entries={unpublishedEntries}\n          handleChangeStatus={updateUnpublishedEntryStatus}\n          handlePublish={publishUnpublishedEntry}\n          handleDelete={deleteUnpublishedEntry}\n        />\n      </WorkflowContainer>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { collections } = state;\n  const isEditorialWorkflow = state.config.get('publish_mode') === EDITORIAL_WORKFLOW;\n  const returnObj = { collections, isEditorialWorkflow };\n\n  if (isEditorialWorkflow) {\n    returnObj.isFetching = state.editorialWorkflow.getIn(['pages', 'isFetching'], false);\n\n    /*\n     * Generates an ordered Map of the available status as keys.\n     * Each key containing a Sequence of available unpubhlished entries\n     * Eg.: OrderedMap{'draft':Seq(), 'pending_review':Seq(), 'pending_publish':Seq()}\n     */\n    returnObj.unpublishedEntries = status.reduce((acc, currStatus) => {\n      const entries = selectUnpublishedEntriesByStatus(state, currStatus);\n      return acc.set(currStatus, entries);\n    }, OrderedMap());\n  }\n  return returnObj;\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadUnpublishedEntries,\n    updateUnpublishedEntryStatus,\n    publishUnpublishedEntry,\n    deleteUnpublishedEntry,\n  },\n)(translate()(Workflow));\n"],"file":"Workflow.js"}