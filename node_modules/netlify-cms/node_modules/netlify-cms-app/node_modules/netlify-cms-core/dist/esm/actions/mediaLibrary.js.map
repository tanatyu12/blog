{"version":3,"sources":["../../../src/actions/mediaLibrary.js"],"names":["notifSend","notifActions","MEDIA_LIBRARY_OPEN","MEDIA_LIBRARY_CLOSE","MEDIA_LIBRARY_CREATE","MEDIA_INSERT","MEDIA_REMOVE_INSERTED","MEDIA_LOAD_REQUEST","MEDIA_LOAD_SUCCESS","MEDIA_LOAD_FAILURE","MEDIA_PERSIST_REQUEST","MEDIA_PERSIST_SUCCESS","MEDIA_PERSIST_FAILURE","MEDIA_DELETE_REQUEST","MEDIA_DELETE_SUCCESS","MEDIA_DELETE_FAILURE","MEDIA_DISPLAY_URL_REQUEST","MEDIA_DISPLAY_URL_SUCCESS","MEDIA_DISPLAY_URL_FAILURE","createMediaLibrary","instance","api","show","hide","onClearControl","onRemoveControl","enableStandalone","type","payload","clearMediaControl","id","dispatch","getState","state","mediaLibrary","get","removeMediaControl","openMediaLibrary","controlID","value","config","allowMultiple","forImage","toJS","imagesOnly","closeMediaLibrary","insertMedia","mediaPath","removeInsertedMedia","loadMedia","opts","delay","query","page","privateUpload","backend","integration","provider","integrations","getToken","mediaLoading","files","retrieve","mediaLoadedOpts","canPaginate","dynamicSearch","dynamicSearchQuery","mediaLoaded","error","mediaLoadFailed","Promise","resolve","setTimeout","getMedia","then","catch","console","status","persistMedia","file","fileName","name","toLowerCase","existingFile","find","window","confirm","deleteMedia","mediaPersisting","assetProxy","asset","displayURL","URL","createObjectURL","mediaPersisted","message","kind","dismissAfter","mediaPersistFailed","mediaDeleting","delete","mediaDeleted","mediaDeleteFailed","path","loadMediaDisplayURL","url","displayURLState","getIn","mediaDisplayURLRequest","mediaDisplayURLSuccess","newURL","getMediaDisplayURL","Error","err","mediaDisplayURLFailure","key"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;MAEQA,S,GAAcC,2B,CAAdD,S;AAED,MAAME,kBAAkB,GAAG,oBAA3B;;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AACA,MAAMC,YAAY,GAAG,cAArB;;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AACA,MAAMC,yBAAyB,GAAG,2BAAlC;;AACA,MAAMC,yBAAyB,GAAG,2BAAlC;;AACA,MAAMC,yBAAyB,GAAG,2BAAlC;;;AAEA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3C,QAAMC,GAAG,GAAG;AACVC,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,KAAkB,MAAM,CAAE,CAA1B,CADI;AAEVC,IAAAA,IAAI,EAAEH,QAAQ,CAACG,IAAT,KAAkB,MAAM,CAAE,CAA1B,CAFI;AAGVC,IAAAA,cAAc,EAAEJ,QAAQ,CAACI,cAAT,KAA4B,MAAM,CAAE,CAApC,CAHN;AAIVC,IAAAA,eAAe,EAAEL,QAAQ,CAACK,eAAT,KAA6B,MAAM,CAAE,CAArC,CAJP;AAKVC,IAAAA,gBAAgB,EAAEN,QAAQ,CAACM,gBAAT,KAA8B,MAAM,CAAE,CAAtC;AALR,GAAZ;AAOA,SAAO;AAAEC,IAAAA,IAAI,EAAEvB,oBAAR;AAA8BwB,IAAAA,OAAO,EAAEP;AAAvC,GAAP;AACD;;AAEM,SAASQ,iBAAT,CAA2BC,EAA3B,EAA+B;AACpC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,YAAY,GAAGD,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuB,iBAAvB,CAArB;;AACA,QAAID,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACV,cAAb,CAA4B;AAAEM,QAAAA;AAAF,OAA5B;AACD;AACF,GAND;AAOD;;AAEM,SAASM,kBAAT,CAA4BN,EAA5B,EAAgC;AACrC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,YAAY,GAAGD,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuB,iBAAvB,CAArB;;AACA,QAAID,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACT,eAAb,CAA6B;AAAEK,QAAAA;AAAF,OAA7B;AACD;AACF,GAND;AAOD;;AAEM,SAASO,gBAAT,GAAwC;AAAA,MAAdT,OAAc,uEAAJ,EAAI;AAC7C,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,YAAY,GAAGD,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuB,iBAAvB,CAArB;;AACA,QAAID,YAAJ,EAAkB;AAAA,YACGJ,EADH,GAC0DF,OAD1D,CACRU,SADQ;AAAA,YACOC,KADP,GAC0DX,OAD1D,CACOW,KADP;AAAA,8BAC0DX,OAD1D,CACcY,MADd;AAAA,YACcA,MADd,gCACuB,qBADvB;AAAA,YAC8BC,aAD9B,GAC0Db,OAD1D,CAC8Ba,aAD9B;AAAA,YAC6CC,QAD7C,GAC0Dd,OAD1D,CAC6Cc,QAD7C;AAEhBR,MAAAA,YAAY,CAACZ,IAAb,CAAkB;AAAEQ,QAAAA,EAAF;AAAMS,QAAAA,KAAN;AAAaC,QAAAA,MAAM,EAAEA,MAAM,CAACG,IAAP,EAArB;AAAoCF,QAAAA,aAApC;AAAmDG,QAAAA,UAAU,EAAEF;AAA/D,OAAlB;AACD;;AACDX,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEzB,kBAAR;AAA4B0B,MAAAA;AAA5B,KAAD,CAAR;AACD,GARD;AASD;;AAEM,SAASiB,iBAAT,GAA6B;AAClC,SAAO,CAACd,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,YAAY,GAAGD,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuB,iBAAvB,CAArB;;AACA,QAAID,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACX,IAAb;AACD;;AACDQ,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAExB;AAAR,KAAD,CAAR;AACD,GAPD;AAQD;;AAEM,SAAS2C,WAAT,CAAqBC,SAArB,EAAgC;AACrC,SAAO;AAAEpB,IAAAA,IAAI,EAAEtB,YAAR;AAAsBuB,IAAAA,OAAO,EAAE;AAAEmB,MAAAA;AAAF;AAA/B,GAAP;AACD;;AAEM,SAASC,mBAAT,CAA6BV,SAA7B,EAAwC;AAC7C,SAAO;AAAEX,IAAAA,IAAI,EAAErB,qBAAR;AAA+BsB,IAAAA,OAAO,EAAE;AAAEU,MAAAA;AAAF;AAAxC,GAAP;AACD;;AAEM,SAASW,SAAT,GAA8B;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AAAA,sBACwBA,IADxB,CAC3BC,KAD2B;AAAA,QAC3BA,KAD2B,4BACnB,CADmB;AAAA,sBACwBD,IADxB,CAChBE,KADgB;AAAA,QAChBA,KADgB,4BACR,EADQ;AAAA,qBACwBF,IADxB,CACJG,IADI;AAAA,QACJA,IADI,2BACG,CADH;AAAA,QACMC,aADN,GACwBJ,IADxB,CACMI,aADN;AAEnC,SAAO,OAAOvB,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAMuB,OAAO,GAAG,6BAAetB,KAAK,CAACO,MAArB,CAAhB;AACA,UAAMgB,WAAW,GAAG,iCAAkBvB,KAAlB,EAAyB,IAAzB,EAA+B,YAA/B,CAApB;;AACA,QAAIuB,WAAJ,EAAiB;AACf,YAAMC,QAAQ,GAAG,0CAAuBxB,KAAK,CAACyB,YAA7B,EAA2CH,OAAO,CAACI,QAAnD,EAA6DH,WAA7D,CAAjB;AACAzB,MAAAA,QAAQ,CAAC6B,YAAY,CAACP,IAAD,CAAb,CAAR;;AACA,UAAI;AACF,cAAMQ,KAAK,GAAG,MAAMJ,QAAQ,CAACK,QAAT,CAAkBV,KAAlB,EAAyBC,IAAzB,EAA+BC,aAA/B,CAApB;AACA,cAAMS,eAAe,GAAG;AACtBV,UAAAA,IADsB;AAEtBW,UAAAA,WAAW,EAAE,IAFS;AAGtBC,UAAAA,aAAa,EAAE,IAHO;AAItBC,UAAAA,kBAAkB,EAAEd,KAJE;AAKtBE,UAAAA;AALsB,SAAxB;AAOA,eAAOvB,QAAQ,CAACoC,WAAW,CAACN,KAAD,EAAQE,eAAR,CAAZ,CAAf;AACD,OAVD,CAUE,OAAOK,KAAP,EAAc;AACd,eAAOrC,QAAQ,CAACsC,eAAe,CAAC;AAAEf,UAAAA;AAAF,SAAD,CAAhB,CAAf;AACD;AACF;;AACDvB,IAAAA,QAAQ,CAAC6B,YAAY,CAACP,IAAD,CAAb,CAAR;AACA,WAAO,IAAIiB,OAAJ,CAAYC,OAAO,IAAI;AAC5BC,MAAAA,UAAU,CAAC,MACTD,OAAO,CACLhB,OAAO,CACJkB,QADH,GAEGC,IAFH,CAEQb,KAAK,IAAI9B,QAAQ,CAACoC,WAAW,CAACN,KAAD,CAAZ,CAFzB,EAGGc,KAHH,CAIIP,KAAK,IACHQ,OAAO,CAACR,KAAR,CAAcA,KAAd,KACArC,QAAQ,CAACqC,KAAK,CAACS,MAAN,KAAiB,GAAjB,GAAuBV,WAAW,EAAlC,GAAuCE,eAAe,EAAvD,CANd,CADK,CADC,CAAV;AAYD,KAbM,EAaJlB,KAbI,CAAP;AAcD,GApCD;AAqCD;;AAEM,SAAS2B,YAAT,CAAsBC,IAAtB,EAAuC;AAAA,MAAX7B,IAAW,uEAAJ,EAAI;AAAA,QACpCI,aADoC,GAClBJ,IADkB,CACpCI,aADoC;AAE5C,SAAO,OAAOvB,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAMuB,OAAO,GAAG,6BAAetB,KAAK,CAACO,MAArB,CAAhB;AACA,UAAMgB,WAAW,GAAG,iCAAkBvB,KAAlB,EAAyB,IAAzB,EAA+B,YAA/B,CAApB;AACA,UAAM4B,KAAK,GAAG5B,KAAK,CAACC,YAAN,CAAmBC,GAAnB,CAAuB,OAAvB,CAAd;AACA,UAAM6C,QAAQ,GAAG,6BAAaD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAb,EAAsCjD,KAAK,CAACO,MAAN,CAAaL,GAAb,CAAiB,MAAjB,CAAtC,CAAjB;AACA,UAAMgD,YAAY,GAAGtB,KAAK,CAACuB,IAAN,CAAWD,YAAY,IAAIA,YAAY,CAACF,IAAb,CAAkBC,WAAlB,OAAoCF,QAA/D,CAArB;AAEA;;;;;;;AAMA,QAAI,CAACxB,WAAD,IAAgB2B,YAApB,EAAkC;AAChC,UAAI,CAACE,MAAM,CAACC,OAAP,CAAgB,GAAEH,YAAY,CAACF,IAAK,6CAApC,CAAL,EAAwF;AACtF;AACD,OAFD,MAEO;AACL,cAAMlD,QAAQ,CAACwD,WAAW,CAACJ,YAAD,EAAe;AAAE7B,UAAAA;AAAF,SAAf,CAAZ,CAAd;AACD;AACF;;AAEDvB,IAAAA,QAAQ,CAACyD,eAAe,EAAhB,CAAR;;AAEA,QAAI;AACF,YAAM1D,EAAE,GAAG,MAAM,mCAAWiD,IAAX,CAAjB;AACA,YAAMU,UAAU,GAAG,MAAM,kCAAiBT,QAAjB,EAA2BD,IAA3B,EAAiC,KAAjC,EAAwCzB,aAAxC,CAAzB;AACAvB,MAAAA,QAAQ,CAAC,qBAAS0D,UAAT,CAAD,CAAR;;AACA,UAAI,CAACjC,WAAL,EAAkB;AAChB,cAAMkC,KAAK,GAAG,MAAMnC,OAAO,CAACuB,YAAR,CAAqB7C,KAAK,CAACO,MAA3B,EAAmCiD,UAAnC,CAApB;AACA,cAAME,UAAU,GAAGD,KAAK,CAACC,UAAN,IAAoBC,GAAG,CAACC,eAAJ,CAAoBd,IAApB,CAAvC;AACA,eAAOhD,QAAQ,CAAC+D,cAAc;AAAGhE,UAAAA,EAAH;AAAO6D,UAAAA;AAAP,WAAsBD,KAAtB,EAAf,CAAf;AACD;;AACD,aAAO3D,QAAQ,CACb+D,cAAc;AACVhE,QAAAA,EADU;AACN6D,QAAAA,UAAU,EAAEC,GAAG,CAACC,eAAJ,CAAoBd,IAApB;AADN,SACoCU,UAAU,CAACC,KAD/C,GAEZ;AAAEpC,QAAAA;AAAF,OAFY,CADD,CAAf;AAMD,KAfD,CAeE,OAAOc,KAAP,EAAc;AACdQ,MAAAA,OAAO,CAACR,KAAR,CAAcA,KAAd;AACArC,MAAAA,QAAQ,CACN/B,SAAS,CAAC;AACR+F,QAAAA,OAAO,EAAG,4BAA2B3B,KAAM,EADnC;AAER4B,QAAAA,IAAI,EAAE,QAFE;AAGRC,QAAAA,YAAY,EAAE;AAHN,OAAD,CADH,CAAR;AAOA,aAAOlE,QAAQ,CAACmE,kBAAkB,CAAC;AAAE5C,QAAAA;AAAF,OAAD,CAAnB,CAAf;AACD;AACF,GAlDD;AAmDD;;AAEM,SAASiC,WAAT,CAAqBR,IAArB,EAAsC;AAAA,MAAX7B,IAAW,uEAAJ,EAAI;AAAA,QACnCI,aADmC,GACjBJ,IADiB,CACnCI,aADmC;AAE3C,SAAO,CAACvB,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAMuB,OAAO,GAAG,6BAAetB,KAAK,CAACO,MAArB,CAAhB;AACA,UAAMgB,WAAW,GAAG,iCAAkBvB,KAAlB,EAAyB,IAAzB,EAA+B,YAA/B,CAApB;;AACA,QAAIuB,WAAJ,EAAiB;AACf,YAAMC,QAAQ,GAAG,0CAAuBxB,KAAK,CAACyB,YAA7B,EAA2CH,OAAO,CAACI,QAAnD,EAA6DH,WAA7D,CAAjB;AACAzB,MAAAA,QAAQ,CAACoE,aAAa,EAAd,CAAR;AACA,aAAO1C,QAAQ,CACZ2C,MADI,CACGrB,IAAI,CAACjD,EADR,EAEJ4C,IAFI,CAEC,MAAM;AACV,eAAO3C,QAAQ,CAACsE,YAAY,CAACtB,IAAD,EAAO;AAAEzB,UAAAA;AAAF,SAAP,CAAb,CAAf;AACD,OAJI,EAKJqB,KALI,CAKEP,KAAK,IAAI;AACdQ,QAAAA,OAAO,CAACR,KAAR,CAAcA,KAAd;AACArC,QAAAA,QAAQ,CACN/B,SAAS,CAAC;AACR+F,UAAAA,OAAO,EAAG,2BAA0B3B,KAAK,CAAC2B,OAAQ,EAD1C;AAERC,UAAAA,IAAI,EAAE,QAFE;AAGRC,UAAAA,YAAY,EAAE;AAHN,SAAD,CADH,CAAR;AAOA,eAAOlE,QAAQ,CAACuE,iBAAiB,CAAC;AAAEhD,UAAAA;AAAF,SAAD,CAAlB,CAAf;AACD,OAfI,CAAP;AAgBD;;AACDvB,IAAAA,QAAQ,CAACoE,aAAa,EAAd,CAAR;AACA,WAAO5C,OAAO,CACXgC,WADI,CACQtD,KAAK,CAACO,MADd,EACsBuC,IAAI,CAACwB,IAD3B,EAEJ7B,IAFI,CAEC,MAAM;AACV,aAAO3C,QAAQ,CAACsE,YAAY,CAACtB,IAAD,CAAb,CAAf;AACD,KAJI,EAKJJ,KALI,CAKEP,KAAK,IAAI;AACdQ,MAAAA,OAAO,CAACR,KAAR,CAAcA,KAAd;AACArC,MAAAA,QAAQ,CACN/B,SAAS,CAAC;AACR+F,QAAAA,OAAO,EAAG,2BAA0B3B,KAAK,CAAC2B,OAAQ,EAD1C;AAERC,QAAAA,IAAI,EAAE,QAFE;AAGRC,QAAAA,YAAY,EAAE;AAHN,OAAD,CADH,CAAR;AAOA,aAAOlE,QAAQ,CAACuE,iBAAiB,EAAlB,CAAf;AACD,KAfI,CAAP;AAgBD,GAzCD;AA0CD;;AAEM,SAASE,mBAAT,CAA6BzB,IAA7B,EAAmC;AACxC,SAAO,OAAOhD,QAAP,EAAiBC,QAAjB,KAA8B;AAAA,UAC3B2D,UAD2B,GACHZ,IADG,CAC3BY,UAD2B;AAAA,UACf7D,EADe,GACHiD,IADG,CACfjD,EADe;AAAA,UACX2E,GADW,GACH1B,IADG,CACX0B,GADW;AAEnC,UAAMxE,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAM0E,eAAe,GAAGzE,KAAK,CAACC,YAAN,CAAmByE,KAAnB,CAAyB,CAAC,aAAD,EAAgB7E,EAAhB,CAAzB,EAA8C,qBAA9C,CAAxB;;AACA,QACE,CAACA,EAAD,IACA;AACA;AACA;AACA;AACC,KAAC6D,UAAD,IAAe,CAACc,GALjB,IAMAC,eAAe,CAACvE,GAAhB,CAAoB,KAApB,CANA,IAOAuE,eAAe,CAACvE,GAAhB,CAAoB,YAApB,CAPA,IAQAuE,eAAe,CAACvE,GAAhB,CAAoB,KAApB,CATF,EAUE;AACA,aAAOmC,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,QAAI,OAAOkC,GAAP,KAAe,QAAnB,EAA6B;AAC3B1E,MAAAA,QAAQ,CAAC6E,sBAAsB,CAAC9E,EAAD,CAAvB,CAAR;AACA,aAAOC,QAAQ,CAAC8E,sBAAsB,CAAC/E,EAAD,EAAK6D,UAAL,CAAvB,CAAf;AACD;;AACD,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC5D,MAAAA,QAAQ,CAAC6E,sBAAsB,CAAC9E,EAAD,CAAvB,CAAR;AACA,aAAOC,QAAQ,CAAC8E,sBAAsB,CAAC/E,EAAD,EAAK6D,UAAL,CAAvB,CAAf;AACD;;AACD,QAAI;AACF,YAAMpC,OAAO,GAAG,6BAAetB,KAAK,CAACO,MAArB,CAAhB;AACAT,MAAAA,QAAQ,CAAC6E,sBAAsB,CAAC9E,EAAD,CAAvB,CAAR;AACA,YAAMgF,MAAM,GAAG,MAAMvD,OAAO,CAACwD,kBAAR,CAA2BpB,UAA3B,CAArB;;AACA,UAAImB,MAAJ,EAAY;AACV,eAAO/E,QAAQ,CAAC8E,sBAAsB,CAAC/E,EAAD,EAAKgF,MAAL,CAAvB,CAAf;AACD,OAFD,MAEO;AACL,cAAM,IAAIE,KAAJ,CAAU,8BAAV,CAAN;AACD;AACF,KATD,CASE,OAAOC,GAAP,EAAY;AACZ,aAAOlF,QAAQ,CAACmF,sBAAsB,CAACpF,EAAD,EAAKmF,GAAL,CAAvB,CAAf;AACD;AACF,GArCD;AAsCD;;AAEM,SAASrD,YAAT,CAAsBP,IAAtB,EAA4B;AACjC,SAAO;AACL1B,IAAAA,IAAI,EAAEpB,kBADD;AAELqB,IAAAA,OAAO,EAAE;AAAEyB,MAAAA;AAAF;AAFJ,GAAP;AAID;;AAEM,SAASc,WAAT,CAAqBN,KAArB,EAAuC;AAAA,MAAXX,IAAW,uEAAJ,EAAI;AAC5C,SAAO;AACLvB,IAAAA,IAAI,EAAEnB,kBADD;AAELoB,IAAAA,OAAO;AAAIiC,MAAAA;AAAJ,OAAcX,IAAd;AAFF,GAAP;AAID;;AAEM,SAASmB,eAAT,CAAyBD,KAAzB,EAA2C;AAAA,MAAXlB,IAAW,uEAAJ,EAAI;AAAA,QACxCI,aADwC,GACtBJ,IADsB,CACxCI,aADwC;AAEhD,SAAO;AAAE3B,IAAAA,IAAI,EAAElB,kBAAR;AAA4BmB,IAAAA,OAAO,EAAE;AAAE0B,MAAAA;AAAF;AAArC,GAAP;AACD;;AAEM,SAASkC,eAAT,GAA2B;AAChC,SAAO;AAAE7D,IAAAA,IAAI,EAAEjB;AAAR,GAAP;AACD;;AAEM,SAASoF,cAAT,CAAwBJ,KAAxB,EAA0C;AAAA,MAAXxC,IAAW,uEAAJ,EAAI;AAAA,QACvCI,aADuC,GACrBJ,IADqB,CACvCI,aADuC;AAE/C,SAAO;AACL3B,IAAAA,IAAI,EAAEhB,qBADD;AAELiB,IAAAA,OAAO,EAAE;AAAEmD,MAAAA,IAAI,EAAEW,KAAR;AAAepC,MAAAA;AAAf;AAFJ,GAAP;AAID;;AAEM,SAAS4C,kBAAT,CAA4B9B,KAA5B,EAA8C;AAAA,MAAXlB,IAAW,uEAAJ,EAAI;AAAA,QAC3CI,aAD2C,GACzBJ,IADyB,CAC3CI,aAD2C;AAEnD,SAAO;AAAE3B,IAAAA,IAAI,EAAEf,qBAAR;AAA+BgB,IAAAA,OAAO,EAAE;AAAE0B,MAAAA;AAAF;AAAxC,GAAP;AACD;;AAEM,SAAS6C,aAAT,GAAyB;AAC9B,SAAO;AAAExE,IAAAA,IAAI,EAAEd;AAAR,GAAP;AACD;;AAEM,SAASwF,YAAT,CAAsBtB,IAAtB,EAAuC;AAAA,MAAX7B,IAAW,uEAAJ,EAAI;AAAA,QACpCI,aADoC,GAClBJ,IADkB,CACpCI,aADoC;AAE5C,SAAO;AACL3B,IAAAA,IAAI,EAAEb,oBADD;AAELc,IAAAA,OAAO,EAAE;AAAEmD,MAAAA,IAAF;AAAQzB,MAAAA;AAAR;AAFJ,GAAP;AAID;;AAEM,SAASgD,iBAAT,CAA2BlC,KAA3B,EAA6C;AAAA,MAAXlB,IAAW,uEAAJ,EAAI;AAAA,QAC1CI,aAD0C,GACxBJ,IADwB,CAC1CI,aAD0C;AAElD,SAAO;AAAE3B,IAAAA,IAAI,EAAEZ,oBAAR;AAA8Ba,IAAAA,OAAO,EAAE;AAAE0B,MAAAA;AAAF;AAAvC,GAAP;AACD;;AAEM,SAASsD,sBAAT,CAAgCO,GAAhC,EAAqC;AAC1C,SAAO;AAAExF,IAAAA,IAAI,EAAEX,yBAAR;AAAmCY,IAAAA,OAAO,EAAE;AAAEuF,MAAAA;AAAF;AAA5C,GAAP;AACD;;AAEM,SAASN,sBAAT,CAAgCM,GAAhC,EAAqCV,GAArC,EAA0C;AAC/C,SAAO;AACL9E,IAAAA,IAAI,EAAEV,yBADD;AAELW,IAAAA,OAAO,EAAE;AAAEuF,MAAAA,GAAF;AAAOV,MAAAA;AAAP;AAFJ,GAAP;AAID;;AAEM,SAASS,sBAAT,CAAgCC,GAAhC,EAAqCF,GAArC,EAA0C;AAC/CrC,EAAAA,OAAO,CAACR,KAAR,CAAc6C,GAAd;AACA,SAAO;AACLtF,IAAAA,IAAI,EAAET,yBADD;AAELU,IAAAA,OAAO,EAAE;AAAEuF,MAAAA,GAAF;AAAOF,MAAAA;AAAP;AAFJ,GAAP;AAID","sourcesContent":["import { Map } from 'immutable';\nimport { actions as notifActions } from 'redux-notifications';\nimport { getBlobSHA } from 'netlify-cms-lib-util';\nimport { currentBackend } from 'coreSrc/backend';\nimport { createAssetProxy } from 'ValueObjects/AssetProxy';\nimport { selectIntegration } from 'Reducers';\nimport { getIntegrationProvider } from 'Integrations';\nimport { addAsset } from './media';\nimport { sanitizeSlug } from 'Lib/urlHelper';\n\nconst { notifSend } = notifActions;\n\nexport const MEDIA_LIBRARY_OPEN = 'MEDIA_LIBRARY_OPEN';\nexport const MEDIA_LIBRARY_CLOSE = 'MEDIA_LIBRARY_CLOSE';\nexport const MEDIA_LIBRARY_CREATE = 'MEDIA_LIBRARY_CREATE';\nexport const MEDIA_INSERT = 'MEDIA_INSERT';\nexport const MEDIA_REMOVE_INSERTED = 'MEDIA_REMOVE_INSERTED';\nexport const MEDIA_LOAD_REQUEST = 'MEDIA_LOAD_REQUEST';\nexport const MEDIA_LOAD_SUCCESS = 'MEDIA_LOAD_SUCCESS';\nexport const MEDIA_LOAD_FAILURE = 'MEDIA_LOAD_FAILURE';\nexport const MEDIA_PERSIST_REQUEST = 'MEDIA_PERSIST_REQUEST';\nexport const MEDIA_PERSIST_SUCCESS = 'MEDIA_PERSIST_SUCCESS';\nexport const MEDIA_PERSIST_FAILURE = 'MEDIA_PERSIST_FAILURE';\nexport const MEDIA_DELETE_REQUEST = 'MEDIA_DELETE_REQUEST';\nexport const MEDIA_DELETE_SUCCESS = 'MEDIA_DELETE_SUCCESS';\nexport const MEDIA_DELETE_FAILURE = 'MEDIA_DELETE_FAILURE';\nexport const MEDIA_DISPLAY_URL_REQUEST = 'MEDIA_DISPLAY_URL_REQUEST';\nexport const MEDIA_DISPLAY_URL_SUCCESS = 'MEDIA_DISPLAY_URL_SUCCESS';\nexport const MEDIA_DISPLAY_URL_FAILURE = 'MEDIA_DISPLAY_URL_FAILURE';\n\nexport function createMediaLibrary(instance) {\n  const api = {\n    show: instance.show || (() => {}),\n    hide: instance.hide || (() => {}),\n    onClearControl: instance.onClearControl || (() => {}),\n    onRemoveControl: instance.onRemoveControl || (() => {}),\n    enableStandalone: instance.enableStandalone || (() => {}),\n  };\n  return { type: MEDIA_LIBRARY_CREATE, payload: api };\n}\n\nexport function clearMediaControl(id) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const mediaLibrary = state.mediaLibrary.get('externalLibrary');\n    if (mediaLibrary) {\n      mediaLibrary.onClearControl({ id });\n    }\n  };\n}\n\nexport function removeMediaControl(id) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const mediaLibrary = state.mediaLibrary.get('externalLibrary');\n    if (mediaLibrary) {\n      mediaLibrary.onRemoveControl({ id });\n    }\n  };\n}\n\nexport function openMediaLibrary(payload = {}) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const mediaLibrary = state.mediaLibrary.get('externalLibrary');\n    if (mediaLibrary) {\n      const { controlID: id, value, config = Map(), allowMultiple, forImage } = payload;\n      mediaLibrary.show({ id, value, config: config.toJS(), allowMultiple, imagesOnly: forImage });\n    }\n    dispatch({ type: MEDIA_LIBRARY_OPEN, payload });\n  };\n}\n\nexport function closeMediaLibrary() {\n  return (dispatch, getState) => {\n    const state = getState();\n    const mediaLibrary = state.mediaLibrary.get('externalLibrary');\n    if (mediaLibrary) {\n      mediaLibrary.hide();\n    }\n    dispatch({ type: MEDIA_LIBRARY_CLOSE });\n  };\n}\n\nexport function insertMedia(mediaPath) {\n  return { type: MEDIA_INSERT, payload: { mediaPath } };\n}\n\nexport function removeInsertedMedia(controlID) {\n  return { type: MEDIA_REMOVE_INSERTED, payload: { controlID } };\n}\n\nexport function loadMedia(opts = {}) {\n  const { delay = 0, query = '', page = 1, privateUpload } = opts;\n  return async (dispatch, getState) => {\n    const state = getState();\n    const backend = currentBackend(state.config);\n    const integration = selectIntegration(state, null, 'assetStore');\n    if (integration) {\n      const provider = getIntegrationProvider(state.integrations, backend.getToken, integration);\n      dispatch(mediaLoading(page));\n      try {\n        const files = await provider.retrieve(query, page, privateUpload);\n        const mediaLoadedOpts = {\n          page,\n          canPaginate: true,\n          dynamicSearch: true,\n          dynamicSearchQuery: query,\n          privateUpload,\n        };\n        return dispatch(mediaLoaded(files, mediaLoadedOpts));\n      } catch (error) {\n        return dispatch(mediaLoadFailed({ privateUpload }));\n      }\n    }\n    dispatch(mediaLoading(page));\n    return new Promise(resolve => {\n      setTimeout(() =>\n        resolve(\n          backend\n            .getMedia()\n            .then(files => dispatch(mediaLoaded(files)))\n            .catch(\n              error =>\n                console.error(error) ||\n                dispatch(error.status === 404 ? mediaLoaded() : mediaLoadFailed()),\n            ),\n        ),\n      );\n    }, delay);\n  };\n}\n\nexport function persistMedia(file, opts = {}) {\n  const { privateUpload } = opts;\n  return async (dispatch, getState) => {\n    const state = getState();\n    const backend = currentBackend(state.config);\n    const integration = selectIntegration(state, null, 'assetStore');\n    const files = state.mediaLibrary.get('files');\n    const fileName = sanitizeSlug(file.name.toLowerCase(), state.config.get('slug'));\n    const existingFile = files.find(existingFile => existingFile.name.toLowerCase() === fileName);\n\n    /**\n     * Check for existing files of the same name before persisting. If no asset\n     * store integration is used, files are being stored in Git, so we can\n     * expect file names to be unique. If an asset store is in use, file names\n     * may not be unique, so we forego this check.\n     */\n    if (!integration && existingFile) {\n      if (!window.confirm(`${existingFile.name} already exists. Do you want to replace it?`)) {\n        return;\n      } else {\n        await dispatch(deleteMedia(existingFile, { privateUpload }));\n      }\n    }\n\n    dispatch(mediaPersisting());\n\n    try {\n      const id = await getBlobSHA(file);\n      const assetProxy = await createAssetProxy(fileName, file, false, privateUpload);\n      dispatch(addAsset(assetProxy));\n      if (!integration) {\n        const asset = await backend.persistMedia(state.config, assetProxy);\n        const displayURL = asset.displayURL || URL.createObjectURL(file);\n        return dispatch(mediaPersisted({ id, displayURL, ...asset }));\n      }\n      return dispatch(\n        mediaPersisted(\n          { id, displayURL: URL.createObjectURL(file), ...assetProxy.asset },\n          { privateUpload },\n        ),\n      );\n    } catch (error) {\n      console.error(error);\n      dispatch(\n        notifSend({\n          message: `Failed to persist media: ${error}`,\n          kind: 'danger',\n          dismissAfter: 8000,\n        }),\n      );\n      return dispatch(mediaPersistFailed({ privateUpload }));\n    }\n  };\n}\n\nexport function deleteMedia(file, opts = {}) {\n  const { privateUpload } = opts;\n  return (dispatch, getState) => {\n    const state = getState();\n    const backend = currentBackend(state.config);\n    const integration = selectIntegration(state, null, 'assetStore');\n    if (integration) {\n      const provider = getIntegrationProvider(state.integrations, backend.getToken, integration);\n      dispatch(mediaDeleting());\n      return provider\n        .delete(file.id)\n        .then(() => {\n          return dispatch(mediaDeleted(file, { privateUpload }));\n        })\n        .catch(error => {\n          console.error(error);\n          dispatch(\n            notifSend({\n              message: `Failed to delete media: ${error.message}`,\n              kind: 'danger',\n              dismissAfter: 8000,\n            }),\n          );\n          return dispatch(mediaDeleteFailed({ privateUpload }));\n        });\n    }\n    dispatch(mediaDeleting());\n    return backend\n      .deleteMedia(state.config, file.path)\n      .then(() => {\n        return dispatch(mediaDeleted(file));\n      })\n      .catch(error => {\n        console.error(error);\n        dispatch(\n          notifSend({\n            message: `Failed to delete media: ${error.message}`,\n            kind: 'danger',\n            dismissAfter: 8000,\n          }),\n        );\n        return dispatch(mediaDeleteFailed());\n      });\n  };\n}\n\nexport function loadMediaDisplayURL(file) {\n  return async (dispatch, getState) => {\n    const { displayURL, id, url } = file;\n    const state = getState();\n    const displayURLState = state.mediaLibrary.getIn(['displayURLs', id], Map());\n    if (\n      !id ||\n      // displayURL is used by most backends; url (like urlIsPublicPath) is used exclusively by the\n      // assetStore integration. Only the assetStore uses URLs which can actually be inserted into\n      // an entry - other backends create a domain-relative URL using the public_folder from the\n      // config and the file's name.\n      (!displayURL && !url) ||\n      displayURLState.get('url') ||\n      displayURLState.get('isFetching') ||\n      displayURLState.get('err')\n    ) {\n      return Promise.resolve();\n    }\n    if (typeof url === 'string') {\n      dispatch(mediaDisplayURLRequest(id));\n      return dispatch(mediaDisplayURLSuccess(id, displayURL));\n    }\n    if (typeof displayURL === 'string') {\n      dispatch(mediaDisplayURLRequest(id));\n      return dispatch(mediaDisplayURLSuccess(id, displayURL));\n    }\n    try {\n      const backend = currentBackend(state.config);\n      dispatch(mediaDisplayURLRequest(id));\n      const newURL = await backend.getMediaDisplayURL(displayURL);\n      if (newURL) {\n        return dispatch(mediaDisplayURLSuccess(id, newURL));\n      } else {\n        throw new Error('No display URL was returned!');\n      }\n    } catch (err) {\n      return dispatch(mediaDisplayURLFailure(id, err));\n    }\n  };\n}\n\nexport function mediaLoading(page) {\n  return {\n    type: MEDIA_LOAD_REQUEST,\n    payload: { page },\n  };\n}\n\nexport function mediaLoaded(files, opts = {}) {\n  return {\n    type: MEDIA_LOAD_SUCCESS,\n    payload: { files, ...opts },\n  };\n}\n\nexport function mediaLoadFailed(error, opts = {}) {\n  const { privateUpload } = opts;\n  return { type: MEDIA_LOAD_FAILURE, payload: { privateUpload } };\n}\n\nexport function mediaPersisting() {\n  return { type: MEDIA_PERSIST_REQUEST };\n}\n\nexport function mediaPersisted(asset, opts = {}) {\n  const { privateUpload } = opts;\n  return {\n    type: MEDIA_PERSIST_SUCCESS,\n    payload: { file: asset, privateUpload },\n  };\n}\n\nexport function mediaPersistFailed(error, opts = {}) {\n  const { privateUpload } = opts;\n  return { type: MEDIA_PERSIST_FAILURE, payload: { privateUpload } };\n}\n\nexport function mediaDeleting() {\n  return { type: MEDIA_DELETE_REQUEST };\n}\n\nexport function mediaDeleted(file, opts = {}) {\n  const { privateUpload } = opts;\n  return {\n    type: MEDIA_DELETE_SUCCESS,\n    payload: { file, privateUpload },\n  };\n}\n\nexport function mediaDeleteFailed(error, opts = {}) {\n  const { privateUpload } = opts;\n  return { type: MEDIA_DELETE_FAILURE, payload: { privateUpload } };\n}\n\nexport function mediaDisplayURLRequest(key) {\n  return { type: MEDIA_DISPLAY_URL_REQUEST, payload: { key } };\n}\n\nexport function mediaDisplayURLSuccess(key, url) {\n  return {\n    type: MEDIA_DISPLAY_URL_SUCCESS,\n    payload: { key, url },\n  };\n}\n\nexport function mediaDisplayURLFailure(key, err) {\n  console.error(err);\n  return {\n    type: MEDIA_DISPLAY_URL_FAILURE,\n    payload: { key, err },\n  };\n}\n"],"file":"mediaLibrary.js"}