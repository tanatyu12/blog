{"version":3,"sources":["../../src/backend.js"],"names":["LocalStorageAuthStore","retrieve","data","window","localStorage","getItem","storageKey","JSON","parse","store","userData","setItem","stringify","logout","removeItem","prepareSlug","slug","trim","toLocaleLowerCase","replace","dateParsers","year","date","getFullYear","month","getMonth","slice","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","SLUG_MISSING_REQUIRED_DATE","USE_FIELD_PREFIX","getExplicitFieldReplacement","key","startsWith","fieldName","substring","length","get","getEntryBackupKey","collectionName","baseKey","suffix","getLabelForFileCollectionEntry","collection","path","files","find","f","compileSlug","template","identifier","processor","missingRequiredDate","_","replacement","explicitFieldReplacement","err","Error","name","slugFormatter","entryData","slugConfig","processSlug","sanitizeSlug","Date","commitMessageTemplates","create","update","delete","uploadMedia","deleteMedia","commitMessageFormatter","type","config","templates","merge","getIn","messageTemplate","variable","console","warn","extractSearchFields","searchFields","entry","reduce","acc","field","sortByScore","a","b","score","parsePreviewPathDate","dateField","dateValue","dateMoment","isValid","toDate","createPreviewUrl","baseUrl","basePath","pathTemplate","fields","processSegment","value","String","compiledPath","error","stripIndent","previewPath","Backend","constructor","implementation","backendName","authStore","updatedCredentials","storedUser","newUser","getToken","deleteAnonymousBackup","init","useWorkflow","EDITORIAL_WORKFLOW","updateUserCredentials","initialWorkflowStatus","status","first","currentUser","user","stored","Promise","resolve","restoreUser","then","authComponent","authenticate","credentials","processEntries","loadedEntries","collectionFilter","entries","map","loadedEntry","file","raw","label","formattedEntries","entryWithFormat","filteredEntries","filterEntries","listEntries","listMethod","extension","call","cursor","Cursor","CURSOR_COMPATIBILITY_SYMBOL","wrapData","cursorType","listAllEntries","allEntriesByFolder","response","actions","includes","traverseCursor","newEntries","newCursor","push","search","collections","searchTerm","errors","collectionEntriesRequests","collectionEntries","fuzzy","filter","extract","p","catch","all","arrs","message","hits","sort","original","query","action","unwrapData","unwrappedCursor","getLocalDraftBackup","backup","localForage","persistLocalDraftBackup","entryToRaw","deleteLocalDraftBackup","getEntry","getMedia","getMediaDisplayURL","displayURL","reject","collectionOrEntity","format","undefined","fromFile","bind","Object","assign","unpublishedEntries","metaData","isModification","pagination","unpublishedEntry","getDeploy","url","getDeployPreview","maxAttempts","interval","deployPreview","count","setTimeout","toUpperCase","persistEntry","entryDraft","MediaFiles","integrations","options","newEntry","parsedData","title","description","entryObj","commitMessage","hasAssetStore","updatedOptions","opts","persistMedia","deleteEntry","deleteFile","persistUnpublishedEntry","args","unpublished","updateUnpublishedEntryStatus","newStatus","publishUnpublishedEntry","deleteUnpublishedEntry","toJS","fieldsOrder","toFile","toArray","filterRule","fieldValue","Array","isArray","resolveBackend","currentBackend","backend"],"mappings":"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","sourcesContent":["import { attempt, flatten, isError, trimStart, trimEnd, flow, partialRight } from 'lodash';\nimport { Map } from 'immutable';\nimport { stripIndent } from 'common-tags';\nimport moment from 'moment';\nimport fuzzy from 'fuzzy';\nimport { resolveFormat } from 'Formats/formats';\nimport { selectIntegration } from 'Reducers/integrations';\nimport {\n  selectListMethod,\n  selectEntrySlug,\n  selectEntryPath,\n  selectAllowNewEntries,\n  selectAllowDeletion,\n  selectFolderEntryExtension,\n  selectIdentifier,\n  selectInferedField,\n} from 'Reducers/collections';\nimport { createEntry } from 'ValueObjects/Entry';\nimport { sanitizeSlug } from 'Lib/urlHelper';\nimport { getBackend } from 'Lib/registry';\nimport { localForage, Cursor, CURSOR_COMPATIBILITY_SYMBOL } from 'netlify-cms-lib-util';\nimport { EDITORIAL_WORKFLOW, status } from 'Constants/publishModes';\n\nclass LocalStorageAuthStore {\n  storageKey = 'netlify-cms-user';\n\n  retrieve() {\n    const data = window.localStorage.getItem(this.storageKey);\n    return data && JSON.parse(data);\n  }\n\n  store(userData) {\n    window.localStorage.setItem(this.storageKey, JSON.stringify(userData));\n  }\n\n  logout() {\n    window.localStorage.removeItem(this.storageKey);\n  }\n}\n\nfunction prepareSlug(slug) {\n  return (\n    slug\n      .trim()\n      // Convert slug to lower-case\n      .toLocaleLowerCase()\n\n      // Remove single quotes.\n      .replace(/[']/g, '')\n\n      // Replace periods with dashes.\n      .replace(/[.]/g, '-')\n  );\n}\n\nconst dateParsers = {\n  year: date => date.getFullYear(),\n  month: date => `0${date.getMonth() + 1}`.slice(-2),\n  day: date => `0${date.getDate()}`.slice(-2),\n  hour: date => `0${date.getHours()}`.slice(-2),\n  minute: date => `0${date.getMinutes()}`.slice(-2),\n  second: date => `0${date.getSeconds()}`.slice(-2),\n};\n\nconst SLUG_MISSING_REQUIRED_DATE = 'SLUG_MISSING_REQUIRED_DATE';\nconst USE_FIELD_PREFIX = 'fields.';\n\n// Allow `fields.` prefix in placeholder to override built in replacements\n// like \"slug\" and \"year\" with values from fields of the same name.\nfunction getExplicitFieldReplacement(key, data) {\n  if (!key.startsWith(USE_FIELD_PREFIX)) {\n    return;\n  }\n  const fieldName = key.substring(USE_FIELD_PREFIX.length);\n  return data.get(fieldName, '');\n}\n\nfunction getEntryBackupKey(collectionName, slug) {\n  const baseKey = 'backup';\n  if (!collectionName) {\n    return baseKey;\n  }\n  const suffix = slug ? `.${slug}` : '';\n  return `backup.${collectionName}${suffix}`;\n}\n\nfunction getLabelForFileCollectionEntry(collection, path) {\n  const files = collection.get('files');\n  return files && files.find(f => f.get('file') === path).get('label');\n}\n\nfunction compileSlug(template, date, identifier = '', data = Map(), processor) {\n  let missingRequiredDate;\n\n  const slug = template.replace(/\\{\\{([^}]+)\\}\\}/g, (_, key) => {\n    let replacement;\n    const explicitFieldReplacement = getExplicitFieldReplacement(key, data);\n\n    if (explicitFieldReplacement) {\n      replacement = explicitFieldReplacement;\n    } else if (dateParsers[key] && !date) {\n      missingRequiredDate = true;\n      return '';\n    } else if (dateParsers[key]) {\n      replacement = dateParsers[key](date);\n    } else if (key === 'slug') {\n      replacement = identifier;\n    } else {\n      replacement = data.get(key, '');\n    }\n\n    if (processor) {\n      return processor(replacement);\n    }\n\n    return replacement;\n  });\n\n  if (missingRequiredDate) {\n    const err = new Error();\n    err.name = SLUG_MISSING_REQUIRED_DATE;\n    throw err;\n  } else {\n    return slug;\n  }\n}\n\nfunction slugFormatter(collection, entryData, slugConfig) {\n  const template = collection.get('slug') || '{{slug}}';\n\n  const identifier = entryData.get(selectIdentifier(collection));\n  if (!identifier) {\n    throw new Error(\n      'Collection must have a field name that is a valid entry identifier, or must have `identifier_field` set',\n    );\n  }\n\n  // Pass entire slug through `prepareSlug` and `sanitizeSlug`.\n  // TODO: only pass slug replacements through sanitizers, static portions of\n  // the slug template should not be sanitized. (breaking change)\n  const processSlug = flow([compileSlug, prepareSlug, partialRight(sanitizeSlug, slugConfig)]);\n\n  return processSlug(template, new Date(), identifier, entryData);\n}\n\nconst commitMessageTemplates = Map({\n  create: 'Create {{collection}} “{{slug}}”',\n  update: 'Update {{collection}} “{{slug}}”',\n  delete: 'Delete {{collection}} “{{slug}}”',\n  uploadMedia: 'Upload “{{path}}”',\n  deleteMedia: 'Delete “{{path}}”',\n});\n\nconst commitMessageFormatter = (type, config, { slug, path, collection }) => {\n  const templates = commitMessageTemplates.merge(\n    config.getIn(['backend', 'commit_messages'], Map()),\n  );\n  const messageTemplate = templates.get(type);\n  return messageTemplate.replace(/\\{\\{([^}]+)\\}\\}/g, (_, variable) => {\n    switch (variable) {\n      case 'slug':\n        return slug;\n      case 'path':\n        return path;\n      case 'collection':\n        return collection.get('label_singular') || collection.get('label');\n      default:\n        console.warn(`Ignoring unknown variable “${variable}” in commit message template.`);\n        return '';\n    }\n  });\n};\n\nconst extractSearchFields = searchFields => entry =>\n  searchFields.reduce((acc, field) => {\n    const f = entry.data[field];\n    return f ? `${acc} ${f}` : acc;\n  }, '');\n\nconst sortByScore = (a, b) => {\n  if (a.score > b.score) return -1;\n  if (a.score < b.score) return 1;\n  return 0;\n};\n\nfunction parsePreviewPathDate(collection, entry) {\n  const dateField =\n    collection.get('preview_path_date_field') || selectInferedField(collection, 'date');\n  if (!dateField) {\n    return;\n  }\n\n  const dateValue = entry.getIn(['data', dateField]);\n  const dateMoment = dateValue && moment(dateValue);\n  if (dateMoment && dateMoment.isValid()) {\n    return dateMoment.toDate();\n  }\n}\n\nfunction createPreviewUrl(baseUrl, collection, slug, slugConfig, entry) {\n  /**\n   * Preview URL can't be created without `baseUrl`. This makes preview URLs\n   * optional for backends that don't support them.\n   */\n  if (!baseUrl) {\n    return;\n  }\n\n  /**\n   * Without a `previewPath` for the collection (via config), the preview URL\n   * will be the URL provided by the backend.\n   */\n  if (!collection.get('preview_path')) {\n    return baseUrl;\n  }\n\n  /**\n   * If a `previewPath` is provided for the collection, use it to construct the\n   * URL path.\n   */\n  const basePath = trimEnd(baseUrl, '/');\n  const pathTemplate = collection.get('preview_path');\n  const fields = entry.get('data');\n  const date = parsePreviewPathDate(collection, entry);\n\n  // Prepare and sanitize slug variables only, leave the rest of the\n  // `preview_path` template as is.\n  const processSegment = flow([\n    value => String(value),\n    prepareSlug,\n    partialRight(sanitizeSlug, slugConfig),\n  ]);\n  let compiledPath;\n\n  try {\n    compiledPath = compileSlug(pathTemplate, date, slug, fields, processSegment);\n  } catch (err) {\n    // Print an error and ignore `preview_path` if both:\n    //   1. Date is invalid (according to Moment), and\n    //   2. A date expression (eg. `{{year}}`) is used in `preview_path`\n    if (err.name === SLUG_MISSING_REQUIRED_DATE) {\n      console.error(stripIndent`\n        Collection \"${collection.get('name')}\" configuration error:\n          \\`preview_path_date_field\\` must be a field with a valid date. Ignoring \\`preview_path\\`.\n      `);\n      return basePath;\n    }\n    throw err;\n  }\n\n  const previewPath = trimStart(compiledPath, ' /');\n  return `${basePath}/${previewPath}`;\n}\n\nclass Backend {\n  constructor(implementation, { backendName, authStore = null, config } = {}) {\n    // We can't reliably run this on exit, so we do cleanup on load.\n    this.deleteAnonymousBackup();\n    this.config = config;\n    this.implementation = implementation.init(config, {\n      useWorkflow: config.getIn(['publish_mode']) === EDITORIAL_WORKFLOW,\n      updateUserCredentials: this.updateUserCredentials,\n      initialWorkflowStatus: status.first(),\n    });\n    this.backendName = backendName;\n    this.authStore = authStore;\n    if (this.implementation === null) {\n      throw new Error('Cannot instantiate a Backend with no implementation');\n    }\n  }\n\n  currentUser() {\n    if (this.user) {\n      return this.user;\n    }\n    const stored = this.authStore && this.authStore.retrieve();\n    if (stored && stored.backendName === this.backendName) {\n      return Promise.resolve(this.implementation.restoreUser(stored)).then(user => {\n        const newUser = { ...user, backendName: this.backendName };\n        // return confirmed/rehydrated user object instead of stored\n        this.authStore.store(newUser);\n        return newUser;\n      });\n    }\n    return Promise.resolve(null);\n  }\n\n  updateUserCredentials = updatedCredentials => {\n    const storedUser = this.authStore && this.authStore.retrieve();\n    if (storedUser && storedUser.backendName === this.backendName) {\n      const newUser = { ...storedUser, ...updatedCredentials };\n      this.authStore.store(newUser);\n      return newUser;\n    }\n  };\n\n  authComponent() {\n    return this.implementation.authComponent();\n  }\n\n  authenticate(credentials) {\n    return this.implementation.authenticate(credentials).then(user => {\n      const newUser = { ...user, backendName: this.backendName };\n      if (this.authStore) {\n        this.authStore.store(newUser);\n      }\n      return newUser;\n    });\n  }\n\n  logout() {\n    return Promise.resolve(this.implementation.logout()).then(() => {\n      if (this.authStore) {\n        this.authStore.logout();\n      }\n    });\n  }\n\n  getToken = () => this.implementation.getToken();\n\n  processEntries(loadedEntries, collection) {\n    const collectionFilter = collection.get('filter');\n    const entries = loadedEntries.map(loadedEntry =>\n      createEntry(\n        collection.get('name'),\n        selectEntrySlug(collection, loadedEntry.file.path),\n        loadedEntry.file.path,\n        { raw: loadedEntry.data || '', label: loadedEntry.file.label },\n      ),\n    );\n    const formattedEntries = entries.map(this.entryWithFormat(collection));\n    // If this collection has a \"filter\" property, filter entries accordingly\n    const filteredEntries = collectionFilter\n      ? this.filterEntries({ entries: formattedEntries }, collectionFilter)\n      : formattedEntries;\n    return filteredEntries;\n  }\n\n  listEntries(collection) {\n    const listMethod = this.implementation[selectListMethod(collection)];\n    const extension = selectFolderEntryExtension(collection);\n    return listMethod.call(this.implementation, collection, extension).then(loadedEntries => ({\n      entries: this.processEntries(loadedEntries, collection),\n      /*\n          Wrap cursors so we can tell which collection the cursor is\n          from. This is done to prevent traverseCursor from requiring a\n          `collection` argument.\n        */\n      cursor: Cursor.create(loadedEntries[CURSOR_COMPATIBILITY_SYMBOL]).wrapData({\n        cursorType: 'collectionEntries',\n        collection,\n      }),\n    }));\n  }\n\n  // The same as listEntries, except that if a cursor with the \"next\"\n  // action available is returned, it calls \"next\" on the cursor and\n  // repeats the process. Once there is no available \"next\" action, it\n  // returns all the collected entries. Used to retrieve all entries\n  // for local searches and queries.\n  async listAllEntries(collection) {\n    if (collection.get('folder') && this.implementation.allEntriesByFolder) {\n      const extension = selectFolderEntryExtension(collection);\n      return this.implementation\n        .allEntriesByFolder(collection, extension)\n        .then(entries => this.processEntries(entries, collection));\n    }\n\n    const response = await this.listEntries(collection);\n    const { entries } = response;\n    let { cursor } = response;\n    while (cursor && cursor.actions.includes('next')) {\n      const { entries: newEntries, cursor: newCursor } = await this.traverseCursor(cursor, 'next');\n      entries.push(...newEntries);\n      cursor = newCursor;\n    }\n    return entries;\n  }\n\n  async search(collections, searchTerm) {\n    // Perform a local search by requesting all entries. For each\n    // collection, load it, search, and call onCollectionResults with\n    // its results.\n    const errors = [];\n    const collectionEntriesRequests = collections\n      .map(async collection => {\n        // TODO: pass search fields in as an argument\n        const searchFields = [\n          selectInferedField(collection, 'title'),\n          selectInferedField(collection, 'shortTitle'),\n          selectInferedField(collection, 'author'),\n        ];\n        const collectionEntries = await this.listAllEntries(collection);\n        return fuzzy.filter(searchTerm, collectionEntries, {\n          extract: extractSearchFields(searchFields),\n        });\n      })\n      .map(p => p.catch(err => errors.push(err) && []));\n\n    const entries = await Promise.all(collectionEntriesRequests).then(arrs => flatten(arrs));\n\n    if (errors.length > 0) {\n      throw new Error({ message: 'Errors ocurred while searching entries locally!', errors });\n    }\n    const hits = entries\n      .filter(({ score }) => score > 5)\n      .sort(sortByScore)\n      .map(f => f.original);\n    return { entries: hits };\n  }\n\n  async query(collection, searchFields, searchTerm) {\n    const entries = await this.listAllEntries(collection);\n    const hits = fuzzy\n      .filter(searchTerm, entries, { extract: extractSearchFields(searchFields) })\n      .sort(sortByScore)\n      .map(f => f.original);\n    return { query: searchTerm, hits };\n  }\n\n  traverseCursor(cursor, action) {\n    const [data, unwrappedCursor] = cursor.unwrapData();\n    // TODO: stop assuming all cursors are for collections\n    const collection = data.get('collection');\n    return this.implementation\n      .traverseCursor(unwrappedCursor, action)\n      .then(async ({ entries, cursor: newCursor }) => ({\n        entries: this.processEntries(entries, collection),\n        cursor: Cursor.create(newCursor).wrapData({\n          cursorType: 'collectionEntries',\n          collection,\n        }),\n      }));\n  }\n\n  async getLocalDraftBackup(collection, slug) {\n    const key = getEntryBackupKey(collection.get('name'), slug);\n    const backup = await localForage.getItem(key);\n    if (!backup || !backup.raw.trim()) {\n      return;\n    }\n    const { raw, path } = backup;\n    const label = getLabelForFileCollectionEntry(collection, path);\n    return this.entryWithFormat(collection, slug)(\n      createEntry(collection.get('name'), slug, path, { raw, label }),\n    );\n  }\n\n  async persistLocalDraftBackup(entry, collection) {\n    const key = getEntryBackupKey(collection.get('name'), entry.get('slug'));\n    const raw = this.entryToRaw(collection, entry);\n    if (!raw.trim()) {\n      return;\n    }\n    await localForage.setItem(key, { raw, path: entry.get('path') });\n    return localForage.setItem(getEntryBackupKey(), raw);\n  }\n\n  async deleteLocalDraftBackup(collection, slug) {\n    const key = getEntryBackupKey(collection.get('name'), slug);\n    await localForage.removeItem(key);\n    return this.deleteAnonymousBackup();\n  }\n\n  // Unnamed backup for use in the global error boundary, should always be\n  // deleted on cms load.\n  deleteAnonymousBackup() {\n    return localForage.removeItem(getEntryBackupKey());\n  }\n\n  getEntry(collection, slug) {\n    const path = selectEntryPath(collection, slug);\n    const label = getLabelForFileCollectionEntry(collection, path);\n    return this.implementation.getEntry(collection, slug, path).then(loadedEntry =>\n      this.entryWithFormat(collection, slug)(\n        createEntry(collection.get('name'), slug, loadedEntry.file.path, {\n          raw: loadedEntry.data,\n          label,\n        }),\n      ),\n    );\n  }\n\n  getMedia() {\n    return this.implementation.getMedia();\n  }\n\n  getMediaDisplayURL(displayURL) {\n    if (this.implementation.getMediaDisplayURL) {\n      return this.implementation.getMediaDisplayURL(displayURL);\n    }\n    const err = new Error(\n      'getMediaDisplayURL is not implemented by the current backend, but the backend returned a displayURL which was not a string!',\n    );\n    err.displayURL = displayURL;\n    return Promise.reject(err);\n  }\n\n  entryWithFormat(collectionOrEntity) {\n    return entry => {\n      const format = resolveFormat(collectionOrEntity, entry);\n      if (entry && entry.raw !== undefined) {\n        const data = (format && attempt(format.fromFile.bind(format, entry.raw))) || {};\n        if (isError(data)) console.error(data);\n        return Object.assign(entry, { data: isError(data) ? {} : data });\n      }\n      return format.fromFile(entry);\n    };\n  }\n\n  unpublishedEntries(collections) {\n    return this.implementation\n      .unpublishedEntries()\n      .then(loadedEntries => loadedEntries.filter(entry => entry !== null))\n      .then(entries =>\n        entries.map(loadedEntry => {\n          const entry = createEntry(\n            loadedEntry.metaData.collection,\n            loadedEntry.slug,\n            loadedEntry.file.path,\n            {\n              raw: loadedEntry.data,\n              isModification: loadedEntry.isModification,\n            },\n          );\n          entry.metaData = loadedEntry.metaData;\n          return entry;\n        }),\n      )\n      .then(entries => ({\n        pagination: 0,\n        entries: entries.reduce((acc, entry) => {\n          const collection = collections.get(entry.collection);\n          if (collection) {\n            acc.push(this.entryWithFormat(collection)(entry));\n          }\n          return acc;\n        }, []),\n      }));\n  }\n\n  unpublishedEntry(collection, slug) {\n    return this.implementation\n      .unpublishedEntry(collection, slug)\n      .then(loadedEntry => {\n        const entry = createEntry('draft', loadedEntry.slug, loadedEntry.file.path, {\n          raw: loadedEntry.data,\n          isModification: loadedEntry.isModification,\n        });\n        entry.metaData = loadedEntry.metaData;\n        return entry;\n      })\n      .then(this.entryWithFormat(collection, slug));\n  }\n\n  /**\n   * Creates a URL using `site_url` from the config and `preview_path` from the\n   * entry's collection. Does not currently make a request through the backend,\n   * but likely will in the future.\n   */\n  getDeploy(collection, slug, entry) {\n    /**\n     * If `site_url` is undefiend or `show_preview_links` in the config is set to false, do nothing.\n     */\n\n    const baseUrl = this.config.get('site_url');\n\n    if (!baseUrl || this.config.get('show_preview_links') === false) {\n      return;\n    }\n\n    return {\n      url: createPreviewUrl(baseUrl, collection, slug, this.config.get('slug'), entry),\n      status: 'SUCCESS',\n    };\n  }\n\n  /**\n   * Requests a base URL from the backend for previewing a specific entry.\n   * Supports polling via `maxAttempts` and `interval` options, as there is\n   * often a delay before a preview URL is available.\n   */\n  async getDeployPreview(collection, slug, entry, { maxAttempts = 1, interval = 5000 } = {}) {\n    /**\n     * If the registered backend does not provide a `getDeployPreview` method, or\n     * `show_preview_links` in the config is set to false, do nothing.\n     */\n    if (!this.implementation.getDeployPreview || this.config.get('show_preview_links') === false) {\n      return;\n    }\n\n    /**\n     * Poll for the deploy preview URL (defaults to 1 attempt, so no polling by\n     * default).\n     */\n    let deployPreview,\n      count = 0;\n    while (!deployPreview && count < maxAttempts) {\n      count++;\n      deployPreview = await this.implementation.getDeployPreview(collection, slug);\n      if (!deployPreview) {\n        await new Promise(resolve => setTimeout(() => resolve(), interval));\n      }\n    }\n\n    /**\n     * If there's no deploy preview, do nothing.\n     */\n    if (!deployPreview) {\n      return;\n    }\n\n    return {\n      /**\n       * Create a URL using the collection `preview_path`, if provided.\n       */\n      url: createPreviewUrl(deployPreview.url, collection, slug, this.config.get('slug'), entry),\n      /**\n       * Always capitalize the status for consistency.\n       */\n      status: deployPreview.status ? deployPreview.status.toUpperCase() : '',\n    };\n  }\n\n  persistEntry(config, collection, entryDraft, MediaFiles, integrations, options = {}) {\n    const newEntry = entryDraft.getIn(['entry', 'newRecord']) || false;\n\n    const parsedData = {\n      title: entryDraft.getIn(['entry', 'data', 'title'], 'No Title'),\n      description: entryDraft.getIn(['entry', 'data', 'description'], 'No Description!'),\n    };\n\n    let entryObj;\n    if (newEntry) {\n      if (!selectAllowNewEntries(collection)) {\n        throw new Error('Not allowed to create new entries in this collection');\n      }\n      const slug = slugFormatter(\n        collection,\n        entryDraft.getIn(['entry', 'data']),\n        config.get('slug'),\n      );\n      const path = selectEntryPath(collection, slug);\n      entryObj = {\n        path,\n        slug,\n        raw: this.entryToRaw(collection, entryDraft.get('entry')),\n      };\n    } else {\n      const path = entryDraft.getIn(['entry', 'path']);\n      const slug = entryDraft.getIn(['entry', 'slug']);\n      entryObj = {\n        path,\n        slug,\n        raw: this.entryToRaw(collection, entryDraft.get('entry')),\n      };\n    }\n\n    const commitMessage = commitMessageFormatter(newEntry ? 'create' : 'update', config, {\n      collection,\n      slug: entryObj.slug,\n      path: entryObj.path,\n    });\n\n    const useWorkflow = config.getIn(['publish_mode']) === EDITORIAL_WORKFLOW;\n\n    const collectionName = collection.get('name');\n\n    /**\n     * Determine whether an asset store integration is in use.\n     */\n    const hasAssetStore = integrations && !!selectIntegration(integrations, null, 'assetStore');\n    const updatedOptions = { ...options, hasAssetStore };\n    const opts = {\n      newEntry,\n      parsedData,\n      commitMessage,\n      collectionName,\n      useWorkflow,\n      ...updatedOptions,\n    };\n\n    return this.implementation.persistEntry(entryObj, MediaFiles, opts).then(() => entryObj.slug);\n  }\n\n  persistMedia(config, file) {\n    const options = {\n      commitMessage: commitMessageFormatter('uploadMedia', config, { path: file.path }),\n    };\n    return this.implementation.persistMedia(file, options);\n  }\n\n  deleteEntry(config, collection, slug) {\n    const path = selectEntryPath(collection, slug);\n\n    if (!selectAllowDeletion(collection)) {\n      throw new Error('Not allowed to delete entries in this collection');\n    }\n\n    const commitMessage = commitMessageFormatter('delete', config, { collection, slug, path });\n    return this.implementation.deleteFile(path, commitMessage, { collection, slug });\n  }\n\n  deleteMedia(config, path) {\n    const commitMessage = commitMessageFormatter('deleteMedia', config, { path });\n    return this.implementation.deleteFile(path, commitMessage);\n  }\n\n  persistUnpublishedEntry(...args) {\n    return this.persistEntry(...args, { unpublished: true });\n  }\n\n  updateUnpublishedEntryStatus(collection, slug, newStatus) {\n    return this.implementation.updateUnpublishedEntryStatus(collection, slug, newStatus);\n  }\n\n  publishUnpublishedEntry(collection, slug) {\n    return this.implementation.publishUnpublishedEntry(collection, slug);\n  }\n\n  deleteUnpublishedEntry(collection, slug) {\n    return this.implementation.deleteUnpublishedEntry(collection, slug);\n  }\n\n  entryToRaw(collection, entry) {\n    const format = resolveFormat(collection, entry.toJS());\n    const fieldsOrder = this.fieldsOrder(collection, entry);\n    return format && format.toFile(entry.get('data').toJS(), fieldsOrder);\n  }\n\n  fieldsOrder(collection, entry) {\n    const fields = collection.get('fields');\n    if (fields) {\n      return collection\n        .get('fields')\n        .map(f => f.get('name'))\n        .toArray();\n    }\n\n    const files = collection.get('files');\n    const file = (files || []).filter(f => f.get('name') === entry.get('slug')).get(0);\n    if (file == null) {\n      throw new Error(`No file found for ${entry.get('slug')} in ${collection.get('name')}`);\n    }\n    return file\n      .get('fields')\n      .map(f => f.get('name'))\n      .toArray();\n  }\n\n  filterEntries(collection, filterRule) {\n    return collection.entries.filter(entry => {\n      const fieldValue = entry.data[filterRule.get('field')];\n      if (Array.isArray(fieldValue)) {\n        return fieldValue.includes(filterRule.get('value'));\n      }\n      return fieldValue === filterRule.get('value');\n    });\n  }\n}\n\nexport function resolveBackend(config) {\n  const name = config.getIn(['backend', 'name']);\n  if (name == null) {\n    throw new Error('No backend defined in configuration');\n  }\n\n  const authStore = new LocalStorageAuthStore();\n\n  if (!getBackend(name)) {\n    throw new Error(`Backend not found: ${name}`);\n  } else {\n    return new Backend(getBackend(name), { backendName: name, authStore, config });\n  }\n}\n\nexport const currentBackend = (function() {\n  let backend = null;\n\n  return config => {\n    if (backend) {\n      return backend;\n    }\n    if (config.get('backend')) {\n      return (backend = resolveBackend(config));\n    }\n  };\n})();\n"],"file":"backend.js"}