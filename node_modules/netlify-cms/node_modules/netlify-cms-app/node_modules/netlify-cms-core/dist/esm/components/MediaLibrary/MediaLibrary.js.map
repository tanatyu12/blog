{"version":3,"sources":["../../../../src/components/MediaLibrary/MediaLibrary.js"],"names":["IMAGE_EXTENSIONS_VIEWABLE","IMAGE_EXTENSIONS","fileShape","displayURL","PropTypes","oneOfType","string","object","isRequired","id","key","name","queryOrder","number","size","url","urlIsPublicPath","bool","MediaLibrary","React","Component","selectedFile","query","file","loadMediaDisplayURL","props","files","filter","ext","toLowerCase","includes","tableData","map","type","toUpperCase","isImage","isViewableImage","sortFields","state","fieldNames","concat","directions","closeMediaLibrary","asset","setState","event","stopPropagation","preventDefault","persist","persistMedia","privateUpload","dataTransfer","target","fileList","value","scrollToTop","insertMedia","publicFolder","publicPath","handleClose","deleteMedia","t","window","confirm","find","then","loadMedia","dynamicSearchQuery","page","dynamicSearch","scrollContainerRef","scrollTop","strippedQuery","replace","matches","fuzzy","extract","matchFiles","match","queryIndex","index","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","isOpening","isVisible","componentDidUpdate","prevProps","render","canInsert","dynamicSearchActive","forImage","isLoading","isPersisting","isDeleting","hasNextPage","isPaginating","displayURLs","filterImages","queryFilter","toTableData","handleSearchChange","handleSearchKeyDown","handlePersist","handleDelete","handleInsert","ref","handleAssetClick","handleLoadMore","loadDisplayURL","func","ImmutablePropTypes","arrayOf","shape","mapStateToProps","config","mediaLibrary","configProps","get","mediaLibraryProps","mapDispatchToProps","loadMediaAction","persistMediaAction","deleteMediaAction","insertMediaAction","loadMediaDisplayURLAction","closeMediaLibraryAction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport { orderBy, map } from 'lodash';\nimport { translate } from 'react-polyglot';\nimport fuzzy from 'fuzzy';\nimport { resolvePath, fileExtension } from 'netlify-cms-lib-util';\nimport {\n  loadMedia as loadMediaAction,\n  persistMedia as persistMediaAction,\n  deleteMedia as deleteMediaAction,\n  insertMedia as insertMediaAction,\n  loadMediaDisplayURL as loadMediaDisplayURLAction,\n  closeMediaLibrary as closeMediaLibraryAction,\n} from 'Actions/mediaLibrary';\nimport MediaLibraryModal from './MediaLibraryModal';\n\n/**\n * Extensions used to determine which files to show when the media library is\n * accessed from an image insertion field.\n */\nconst IMAGE_EXTENSIONS_VIEWABLE = ['jpg', 'jpeg', 'webp', 'gif', 'png', 'bmp', 'tiff', 'svg'];\nconst IMAGE_EXTENSIONS = [...IMAGE_EXTENSIONS_VIEWABLE];\n\nconst fileShape = {\n  displayURL: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  id: PropTypes.string.isRequired,\n  key: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  queryOrder: PropTypes.number,\n  size: PropTypes.number,\n  url: PropTypes.string,\n  urlIsPublicPath: PropTypes.bool,\n};\n\nclass MediaLibrary extends React.Component {\n  static propTypes = {\n    isVisible: PropTypes.bool,\n    loadMediaDisplayURL: PropTypes.func,\n    displayURLs: ImmutablePropTypes.map,\n    canInsert: PropTypes.bool,\n    files: PropTypes.arrayOf(PropTypes.shape(fileShape)).isRequired,\n    dynamicSearch: PropTypes.bool,\n    dynamicSearchActive: PropTypes.bool,\n    forImage: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isPersisting: PropTypes.bool,\n    isDeleting: PropTypes.bool,\n    hasNextPage: PropTypes.bool,\n    isPaginating: PropTypes.bool,\n    privateUpload: PropTypes.bool,\n    loadMedia: PropTypes.func.isRequired,\n    dynamicSearchQuery: PropTypes.string,\n    page: PropTypes.number,\n    persistMedia: PropTypes.func.isRequired,\n    deleteMedia: PropTypes.func.isRequired,\n    insertMedia: PropTypes.func.isRequired,\n    publicFolder: PropTypes.string,\n    closeMediaLibrary: PropTypes.func.isRequired,\n    t: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    files: [],\n  };\n\n  /**\n   * The currently selected file and query are tracked in component state as\n   * they do not impact the rest of the application.\n   */\n  state = {\n    selectedFile: {},\n    query: '',\n  };\n\n  componentDidMount() {\n    this.props.loadMedia();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    /**\n     * We clear old state from the media library when it's being re-opened\n     * because, when doing so on close, the state is cleared while the media\n     * library is still fading away.\n     */\n    const isOpening = !this.props.isVisible && nextProps.isVisible;\n    if (isOpening) {\n      this.setState({ selectedFile: {}, query: '' });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const isOpening = !prevProps.isVisible && this.props.isVisible;\n\n    if (isOpening && prevProps.privateUpload !== this.props.privateUpload) {\n      this.props.loadMedia({ privateUpload: this.props.privateUpload });\n    }\n  }\n\n  loadDisplayURL = file => {\n    const { loadMediaDisplayURL } = this.props;\n    loadMediaDisplayURL(file);\n  };\n\n  /**\n   * Filter an array of file data to include only images.\n   */\n  filterImages = files => {\n    return files.filter(file => {\n      const ext = fileExtension(file.name).toLowerCase();\n      return IMAGE_EXTENSIONS.includes(ext);\n    });\n  };\n\n  /**\n   * Transform file data for table display.\n   */\n  toTableData = files => {\n    const tableData =\n      files &&\n      files.map(({ key, name, id, size, queryOrder, url, urlIsPublicPath, displayURL }) => {\n        const ext = fileExtension(name).toLowerCase();\n        return {\n          key,\n          id,\n          name,\n          type: ext.toUpperCase(),\n          size,\n          queryOrder,\n          url,\n          urlIsPublicPath,\n          displayURL,\n          isImage: IMAGE_EXTENSIONS.includes(ext),\n          isViewableImage: IMAGE_EXTENSIONS_VIEWABLE.includes(ext),\n        };\n      });\n\n    /**\n     * Get the sort order for use with `lodash.orderBy`, and always add the\n     * `queryOrder` sort as the lowest priority sort order.\n     */\n    const { sortFields } = this.state;\n    const fieldNames = map(sortFields, 'fieldName').concat('queryOrder');\n    const directions = map(sortFields, 'direction').concat('asc');\n    return orderBy(tableData, fieldNames, directions);\n  };\n\n  handleClose = () => {\n    this.props.closeMediaLibrary();\n  };\n\n  /**\n   * Toggle asset selection on click.\n   */\n  handleAssetClick = asset => {\n    const selectedFile = this.state.selectedFile.key === asset.key ? {} : asset;\n    this.setState({ selectedFile });\n  };\n\n  /**\n   * Upload a file.\n   */\n  handlePersist = async event => {\n    /**\n     * Stop the browser from automatically handling the file input click, and\n     * get the file for upload, and retain the synthetic event for access after\n     * the asynchronous persist operation.\n     */\n    event.stopPropagation();\n    event.preventDefault();\n    event.persist();\n    const { persistMedia, privateUpload } = this.props;\n    const { files: fileList } = event.dataTransfer || event.target;\n    const files = [...fileList];\n    const file = files[0];\n\n    await persistMedia(file, { privateUpload });\n\n    event.target.value = null;\n\n    this.scrollToTop();\n  };\n\n  /**\n   * Stores the public path of the file in the application store, where the\n   * editor field that launched the media library can retrieve it.\n   */\n  handleInsert = () => {\n    const { selectedFile } = this.state;\n    const { name, url, urlIsPublicPath } = selectedFile;\n    const { insertMedia, publicFolder } = this.props;\n    const publicPath = urlIsPublicPath ? url : resolvePath(name, publicFolder);\n    insertMedia(publicPath);\n    this.handleClose();\n  };\n\n  /**\n   * Removes the selected file from the backend.\n   */\n  handleDelete = () => {\n    const { selectedFile } = this.state;\n    const { files, deleteMedia, privateUpload, t } = this.props;\n    if (!window.confirm(t('mediaLibrary.mediaLibrary.onDelete'))) {\n      return;\n    }\n    const file = files.find(file => selectedFile.key === file.key);\n    deleteMedia(file, { privateUpload }).then(() => {\n      this.setState({ selectedFile: {} });\n    });\n  };\n\n  handleLoadMore = () => {\n    const { loadMedia, dynamicSearchQuery, page, privateUpload } = this.props;\n    loadMedia({ query: dynamicSearchQuery, page: page + 1, privateUpload });\n  };\n\n  /**\n   * Executes media library search for implementations that support dynamic\n   * search via request. For these implementations, the Enter key must be\n   * pressed to execute search. If assets are being stored directly through\n   * the GitHub backend, search is in-memory and occurs as the query is typed,\n   * so this handler has no impact.\n   */\n  handleSearchKeyDown = async event => {\n    const { dynamicSearch, loadMedia, privateUpload } = this.props;\n    if (event.key === 'Enter' && dynamicSearch) {\n      await loadMedia({ query: this.state.query, privateUpload });\n      this.scrollToTop();\n    }\n  };\n\n  scrollToTop = () => {\n    this.scrollContainerRef.scrollTop = 0;\n  };\n\n  /**\n   * Updates query state as the user types in the search field.\n   */\n  handleSearchChange = event => {\n    this.setState({ query: event.target.value });\n  };\n\n  /**\n   * Filters files that do not match the query. Not used for dynamic search.\n   */\n  queryFilter = (query, files) => {\n    /**\n     * Because file names don't have spaces, typing a space eliminates all\n     * potential matches, so we strip them all out internally before running the\n     * query.\n     */\n    const strippedQuery = query.replace(/ /g, '');\n    const matches = fuzzy.filter(strippedQuery, files, { extract: file => file.name });\n    const matchFiles = matches.map((match, queryIndex) => {\n      const file = files[match.index];\n      return { ...file, queryIndex };\n    });\n    return matchFiles;\n  };\n\n  render() {\n    const {\n      isVisible,\n      canInsert,\n      files,\n      dynamicSearch,\n      dynamicSearchActive,\n      forImage,\n      isLoading,\n      isPersisting,\n      isDeleting,\n      hasNextPage,\n      isPaginating,\n      privateUpload,\n      displayURLs,\n      t,\n    } = this.props;\n\n    return (\n      <MediaLibraryModal\n        isVisible={isVisible}\n        canInsert={canInsert}\n        files={files}\n        dynamicSearch={dynamicSearch}\n        dynamicSearchActive={dynamicSearchActive}\n        forImage={forImage}\n        isLoading={isLoading}\n        isPersisting={isPersisting}\n        isDeleting={isDeleting}\n        hasNextPage={hasNextPage}\n        isPaginating={isPaginating}\n        privateUpload={privateUpload}\n        query={this.state.query}\n        selectedFile={this.state.selectedFile}\n        handleFilter={this.filterImages}\n        handleQuery={this.queryFilter}\n        toTableData={this.toTableData}\n        handleClose={this.handleClose}\n        handleSearchChange={this.handleSearchChange}\n        handleSearchKeyDown={this.handleSearchKeyDown}\n        handlePersist={this.handlePersist}\n        handleDelete={this.handleDelete}\n        handleInsert={this.handleInsert}\n        setScrollContainerRef={ref => (this.scrollContainerRef = ref)}\n        handleAssetClick={this.handleAssetClick}\n        handleLoadMore={this.handleLoadMore}\n        displayURLs={displayURLs}\n        loadDisplayURL={this.loadDisplayURL}\n        t={t}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { config, mediaLibrary } = state;\n  const configProps = {\n    publicFolder: config.get('public_folder'),\n  };\n  const mediaLibraryProps = {\n    isVisible: mediaLibrary.get('isVisible'),\n    canInsert: mediaLibrary.get('canInsert'),\n    files: mediaLibrary.get('files'),\n    displayURLs: mediaLibrary.get('displayURLs'),\n    dynamicSearch: mediaLibrary.get('dynamicSearch'),\n    dynamicSearchActive: mediaLibrary.get('dynamicSearchActive'),\n    dynamicSearchQuery: mediaLibrary.get('dynamicSearchQuery'),\n    forImage: mediaLibrary.get('forImage'),\n    isLoading: mediaLibrary.get('isLoading'),\n    isPersisting: mediaLibrary.get('isPersisting'),\n    isDeleting: mediaLibrary.get('isDeleting'),\n    privateUpload: mediaLibrary.get('privateUpload'),\n    page: mediaLibrary.get('page'),\n    hasNextPage: mediaLibrary.get('hasNextPage'),\n    isPaginating: mediaLibrary.get('isPaginating'),\n  };\n  return { ...configProps, ...mediaLibraryProps };\n};\n\nconst mapDispatchToProps = {\n  loadMedia: loadMediaAction,\n  persistMedia: persistMediaAction,\n  deleteMedia: deleteMediaAction,\n  insertMedia: insertMediaAction,\n  loadMediaDisplayURL: loadMediaDisplayURLAction,\n  closeMediaLibrary: closeMediaLibraryAction,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(translate()(MediaLibrary));\n"],"file":"MediaLibrary.js"}