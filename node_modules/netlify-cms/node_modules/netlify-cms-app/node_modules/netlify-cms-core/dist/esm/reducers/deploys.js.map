{"version":3,"sources":["../../../src/reducers/deploys.js"],"names":["deploys","state","action","type","DEPLOY_PREVIEW_REQUEST","payload","collection","slug","setIn","DEPLOY_PREVIEW_SUCCESS","url","status","isFetching","DEPLOY_PREVIEW_FAILURE","selectDeployPreview","getIn"],"mappings":";;;;;;;AAAA;;AACA;;AAMA,MAAMA,OAAO,GAAG,SAAVA,OAAU,GAA6C;AAAA,MAA5CC,KAA4C,uEAApC,oBAAI;AAAED,IAAAA,OAAO,EAAE;AAAX,GAAJ,CAAoC;AAAA,MAAXE,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,+BAAL;AAA6B;AAAA,gCACEF,MAAM,CAACG,OADT;AAAA,cACnBC,UADmB,mBACnBA,UADmB;AAAA,cACPC,IADO,mBACPA,IADO;AAE3B,eAAON,KAAK,CAACO,KAAN,CAAY,CAAC,SAAD,EAAa,GAAEF,UAAW,IAAGC,IAAK,EAAlC,EAAqC,YAArC,CAAZ,EAAgE,IAAhE,CAAP;AACD;;AAED,SAAKE,+BAAL;AAA6B;AAAA,iCACeP,MAAM,CAACG,OADtB;AAAA,cACnBC,UADmB,oBACnBA,UADmB;AAAA,cACPC,IADO,oBACPA,IADO;AAAA,cACDG,GADC,oBACDA,GADC;AAAA,cACIC,MADJ,oBACIA,MADJ;AAE3B,eAAOV,KAAK,CAACO,KAAN,CACL,CAAC,SAAD,EAAa,GAAEF,UAAW,IAAGC,IAAK,EAAlC,CADK,EAEL,uBAAO;AACLK,UAAAA,UAAU,EAAE,KADP;AAELF,UAAAA,GAFK;AAGLC,UAAAA;AAHK,SAAP,CAFK,CAAP;AAQD;;AAED,SAAKE,+BAAL;AAA6B;AAAA,iCACEX,MAAM,CAACG,OADT;AAAA,cACnBC,UADmB,oBACnBA,UADmB;AAAA,cACPC,IADO,oBACPA,IADO;AAE3B,eAAON,KAAK,CAACO,KAAN,CACL,CAAC,SAAD,EAAa,GAAEF,UAAW,IAAGC,IAAK,EAAlC,CADK,EAEL,uBAAO;AACLK,UAAAA,UAAU,EAAE;AADP,SAAP,CAFK,CAAP;AAMD;;AAED;AACE,aAAOX,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCO,MAAMa,mBAAmB,GAAG,CAACb,KAAD,EAAQK,UAAR,EAAoBC,IAApB,KACjCN,KAAK,CAACc,KAAN,CAAY,CAAC,SAAD,EAAa,GAAET,UAAW,IAAGC,IAAK,EAAlC,CAAZ,CADK;;;eAGQP,O","sourcesContent":["import { Map, fromJS } from 'immutable';\nimport {\n  DEPLOY_PREVIEW_REQUEST,\n  DEPLOY_PREVIEW_SUCCESS,\n  DEPLOY_PREVIEW_FAILURE,\n} from 'Actions/deploys';\n\nconst deploys = (state = Map({ deploys: Map() }), action) => {\n  switch (action.type) {\n    case DEPLOY_PREVIEW_REQUEST: {\n      const { collection, slug } = action.payload;\n      return state.setIn(['deploys', `${collection}.${slug}`, 'isFetching'], true);\n    }\n\n    case DEPLOY_PREVIEW_SUCCESS: {\n      const { collection, slug, url, status } = action.payload;\n      return state.setIn(\n        ['deploys', `${collection}.${slug}`],\n        fromJS({\n          isFetching: false,\n          url,\n          status,\n        }),\n      );\n    }\n\n    case DEPLOY_PREVIEW_FAILURE: {\n      const { collection, slug } = action.payload;\n      return state.setIn(\n        ['deploys', `${collection}.${slug}`],\n        fromJS({\n          isFetching: false,\n        }),\n      );\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const selectDeployPreview = (state, collection, slug) =>\n  state.getIn(['deploys', `${collection}.${slug}`]);\n\nexport default deploys;\n"],"file":"deploys.js"}