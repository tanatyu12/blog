{"version":3,"sources":["../../../src/actions/editorialWorkflow.js"],"names":["notifSend","notifActions","UNPUBLISHED_ENTRY_REQUEST","UNPUBLISHED_ENTRY_SUCCESS","UNPUBLISHED_ENTRY_REDIRECT","UNPUBLISHED_ENTRIES_REQUEST","UNPUBLISHED_ENTRIES_SUCCESS","UNPUBLISHED_ENTRIES_FAILURE","UNPUBLISHED_ENTRY_PERSIST_REQUEST","UNPUBLISHED_ENTRY_PERSIST_SUCCESS","UNPUBLISHED_ENTRY_PERSIST_FAILURE","UNPUBLISHED_ENTRY_STATUS_CHANGE_REQUEST","UNPUBLISHED_ENTRY_STATUS_CHANGE_SUCCESS","UNPUBLISHED_ENTRY_STATUS_CHANGE_FAILURE","UNPUBLISHED_ENTRY_PUBLISH_REQUEST","UNPUBLISHED_ENTRY_PUBLISH_SUCCESS","UNPUBLISHED_ENTRY_PUBLISH_FAILURE","UNPUBLISHED_ENTRY_DELETE_REQUEST","UNPUBLISHED_ENTRY_DELETE_SUCCESS","UNPUBLISHED_ENTRY_DELETE_FAILURE","unpublishedEntryLoading","collection","slug","type","payload","get","unpublishedEntryLoaded","entry","unpublishedEntryRedirected","unpublishedEntriesLoading","unpublishedEntriesLoaded","entries","pagination","pages","unpublishedEntriesFailed","error","unpublishedEntryPersisting","transactionID","optimist","BEGIN","id","unpublishedEntryPersisted","COMMIT","unpublishedEntryPersistedFail","REVERT","unpublishedEntryStatusChangeRequest","oldStatus","newStatus","unpublishedEntryStatusChangePersisted","unpublishedEntryStatusChangeError","unpublishedEntryPublishRequest","unpublishedEntryPublished","unpublishedEntryPublishError","unpublishedEntryDeleteRequest","unpublishedEntryDeleted","unpublishedEntryDeleteError","loadUnpublishedEntry","dispatch","getState","state","backend","config","unpublishedEntry","then","catch","name","EDITORIAL_WORKFLOW_ERROR","notUnderEditorialWorkflow","message","key","details","kind","dismissAfter","loadUnpublishedEntries","collections","EDITORIAL_WORKFLOW","unpublishedEntries","response","Promise","reject","persistUnpublishedEntry","existingUnpublishedEntry","entryDraft","fieldsErrors","isEmpty","hasPresenceErrors","some","errors","ValidationErrorTypes","PRESENCE","assetProxies","map","path","fields","serializedData","getIn","serializedEntry","set","serializedEntryDraft","persistAction","persistEntry","persistCallArgs","toJS","integrations","newSlug","call","updateUnpublishedEntryStatus","deleteUnpublishedEntry","publishUnpublishedEntry"],"mappings":"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","sourcesContent":["import uuid from 'uuid/v4';\nimport { actions as notifActions } from 'redux-notifications';\nimport { BEGIN, COMMIT, REVERT } from 'redux-optimist';\nimport { serializeValues } from 'Lib/serializeEntryValues';\nimport { currentBackend } from 'coreSrc/backend';\nimport { getAsset } from 'Reducers';\nimport { selectFields } from 'Reducers/collections';\nimport { EDITORIAL_WORKFLOW } from 'Constants/publishModes';\nimport { EDITORIAL_WORKFLOW_ERROR } from 'netlify-cms-lib-util';\nimport { loadEntry } from './entries';\nimport ValidationErrorTypes from 'Constants/validationErrorTypes';\n\nconst { notifSend } = notifActions;\n\n/*\n * Contant Declarations\n */\nexport const UNPUBLISHED_ENTRY_REQUEST = 'UNPUBLISHED_ENTRY_REQUEST';\nexport const UNPUBLISHED_ENTRY_SUCCESS = 'UNPUBLISHED_ENTRY_SUCCESS';\nexport const UNPUBLISHED_ENTRY_REDIRECT = 'UNPUBLISHED_ENTRY_REDIRECT';\n\nexport const UNPUBLISHED_ENTRIES_REQUEST = 'UNPUBLISHED_ENTRIES_REQUEST';\nexport const UNPUBLISHED_ENTRIES_SUCCESS = 'UNPUBLISHED_ENTRIES_SUCCESS';\nexport const UNPUBLISHED_ENTRIES_FAILURE = 'UNPUBLISHED_ENTRIES_FAILURE';\n\nexport const UNPUBLISHED_ENTRY_PERSIST_REQUEST = 'UNPUBLISHED_ENTRY_PERSIST_REQUEST';\nexport const UNPUBLISHED_ENTRY_PERSIST_SUCCESS = 'UNPUBLISHED_ENTRY_PERSIST_SUCCESS';\nexport const UNPUBLISHED_ENTRY_PERSIST_FAILURE = 'UNPUBLISHED_ENTRY_PERSIST_FAILURE';\n\nexport const UNPUBLISHED_ENTRY_STATUS_CHANGE_REQUEST = 'UNPUBLISHED_ENTRY_STATUS_CHANGE_REQUEST';\nexport const UNPUBLISHED_ENTRY_STATUS_CHANGE_SUCCESS = 'UNPUBLISHED_ENTRY_STATUS_CHANGE_SUCCESS';\nexport const UNPUBLISHED_ENTRY_STATUS_CHANGE_FAILURE = 'UNPUBLISHED_ENTRY_STATUS_CHANGE_FAILURE';\n\nexport const UNPUBLISHED_ENTRY_PUBLISH_REQUEST = 'UNPUBLISHED_ENTRY_PUBLISH_REQUEST';\nexport const UNPUBLISHED_ENTRY_PUBLISH_SUCCESS = 'UNPUBLISHED_ENTRY_PUBLISH_SUCCESS';\nexport const UNPUBLISHED_ENTRY_PUBLISH_FAILURE = 'UNPUBLISHED_ENTRY_PUBLISH_FAILURE';\n\nexport const UNPUBLISHED_ENTRY_DELETE_REQUEST = 'UNPUBLISHED_ENTRY_DELETE_REQUEST';\nexport const UNPUBLISHED_ENTRY_DELETE_SUCCESS = 'UNPUBLISHED_ENTRY_DELETE_SUCCESS';\nexport const UNPUBLISHED_ENTRY_DELETE_FAILURE = 'UNPUBLISHED_ENTRY_DELETE_FAILURE';\n\n/*\n * Simple Action Creators (Internal)\n */\n\nfunction unpublishedEntryLoading(collection, slug) {\n  return {\n    type: UNPUBLISHED_ENTRY_REQUEST,\n    payload: {\n      collection: collection.get('name'),\n      slug,\n    },\n  };\n}\n\nfunction unpublishedEntryLoaded(collection, entry) {\n  return {\n    type: UNPUBLISHED_ENTRY_SUCCESS,\n    payload: {\n      collection: collection.get('name'),\n      entry,\n    },\n  };\n}\n\nfunction unpublishedEntryRedirected(collection, slug) {\n  return {\n    type: UNPUBLISHED_ENTRY_REDIRECT,\n    payload: {\n      collection: collection.get('name'),\n      slug,\n    },\n  };\n}\n\nfunction unpublishedEntriesLoading() {\n  return {\n    type: UNPUBLISHED_ENTRIES_REQUEST,\n  };\n}\n\nfunction unpublishedEntriesLoaded(entries, pagination) {\n  return {\n    type: UNPUBLISHED_ENTRIES_SUCCESS,\n    payload: {\n      entries,\n      pages: pagination,\n    },\n  };\n}\n\nfunction unpublishedEntriesFailed(error) {\n  return {\n    type: UNPUBLISHED_ENTRIES_FAILURE,\n    error: 'Failed to load entries',\n    payload: error,\n  };\n}\n\nfunction unpublishedEntryPersisting(collection, entry, transactionID) {\n  return {\n    type: UNPUBLISHED_ENTRY_PERSIST_REQUEST,\n    payload: {\n      collection: collection.get('name'),\n      entry,\n    },\n    optimist: { type: BEGIN, id: transactionID },\n  };\n}\n\nfunction unpublishedEntryPersisted(collection, entry, transactionID, slug) {\n  return {\n    type: UNPUBLISHED_ENTRY_PERSIST_SUCCESS,\n    payload: {\n      collection: collection.get('name'),\n      entry,\n      slug,\n    },\n    optimist: { type: COMMIT, id: transactionID },\n  };\n}\n\nfunction unpublishedEntryPersistedFail(error, transactionID) {\n  return {\n    type: UNPUBLISHED_ENTRY_PERSIST_FAILURE,\n    payload: { error },\n    optimist: { type: REVERT, id: transactionID },\n    error,\n  };\n}\n\nfunction unpublishedEntryStatusChangeRequest(\n  collection,\n  slug,\n  oldStatus,\n  newStatus,\n  transactionID,\n) {\n  return {\n    type: UNPUBLISHED_ENTRY_STATUS_CHANGE_REQUEST,\n    payload: {\n      collection,\n      slug,\n      oldStatus,\n      newStatus,\n    },\n    optimist: { type: BEGIN, id: transactionID },\n  };\n}\n\nfunction unpublishedEntryStatusChangePersisted(\n  collection,\n  slug,\n  oldStatus,\n  newStatus,\n  transactionID,\n) {\n  return {\n    type: UNPUBLISHED_ENTRY_STATUS_CHANGE_SUCCESS,\n    payload: {\n      collection,\n      slug,\n      oldStatus,\n      newStatus,\n    },\n    optimist: { type: COMMIT, id: transactionID },\n  };\n}\n\nfunction unpublishedEntryStatusChangeError(collection, slug, transactionID) {\n  return {\n    type: UNPUBLISHED_ENTRY_STATUS_CHANGE_FAILURE,\n    payload: { collection, slug },\n    optimist: { type: REVERT, id: transactionID },\n  };\n}\n\nfunction unpublishedEntryPublishRequest(collection, slug, transactionID) {\n  return {\n    type: UNPUBLISHED_ENTRY_PUBLISH_REQUEST,\n    payload: { collection, slug },\n    optimist: { type: BEGIN, id: transactionID },\n  };\n}\n\nfunction unpublishedEntryPublished(collection, slug, transactionID) {\n  return {\n    type: UNPUBLISHED_ENTRY_PUBLISH_SUCCESS,\n    payload: { collection, slug },\n    optimist: { type: COMMIT, id: transactionID },\n  };\n}\n\nfunction unpublishedEntryPublishError(collection, slug, transactionID) {\n  return {\n    type: UNPUBLISHED_ENTRY_PUBLISH_FAILURE,\n    payload: { collection, slug },\n    optimist: { type: REVERT, id: transactionID },\n  };\n}\n\nfunction unpublishedEntryDeleteRequest(collection, slug, transactionID) {\n  // The reducer doesn't handle this action -- it is for `optimist`.\n  return {\n    type: UNPUBLISHED_ENTRY_DELETE_REQUEST,\n    payload: { collection, slug },\n    optimist: { type: BEGIN, id: transactionID },\n  };\n}\n\nfunction unpublishedEntryDeleted(collection, slug, transactionID) {\n  return {\n    type: UNPUBLISHED_ENTRY_DELETE_SUCCESS,\n    payload: { collection, slug },\n    optimist: { type: COMMIT, id: transactionID },\n  };\n}\n\nfunction unpublishedEntryDeleteError(collection, slug, transactionID) {\n  // The reducer doesn't handle this action -- it is for `optimist`.\n  return {\n    type: UNPUBLISHED_ENTRY_DELETE_FAILURE,\n    payload: { collection, slug },\n    optimist: { type: REVERT, id: transactionID },\n  };\n}\n\n/*\n * Exported Thunk Action Creators\n */\n\nexport function loadUnpublishedEntry(collection, slug) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const backend = currentBackend(state.config);\n    dispatch(unpublishedEntryLoading(collection, slug));\n    backend\n      .unpublishedEntry(collection, slug)\n      .then(entry => dispatch(unpublishedEntryLoaded(collection, entry)))\n      .catch(error => {\n        if (error.name === EDITORIAL_WORKFLOW_ERROR && error.notUnderEditorialWorkflow) {\n          dispatch(unpublishedEntryRedirected(collection, slug));\n          dispatch(loadEntry(collection, slug));\n        } else {\n          dispatch(\n            notifSend({\n              message: {\n                key: 'ui.toast.onFailToLoadEntries',\n                details: error,\n              },\n              kind: 'danger',\n              dismissAfter: 8000,\n            }),\n          );\n        }\n      });\n  };\n}\n\nexport function loadUnpublishedEntries(collections) {\n  return (dispatch, getState) => {\n    const state = getState();\n    if (state.config.get('publish_mode') !== EDITORIAL_WORKFLOW) return;\n    const backend = currentBackend(state.config);\n    dispatch(unpublishedEntriesLoading());\n    backend\n      .unpublishedEntries(collections)\n      .then(response => dispatch(unpublishedEntriesLoaded(response.entries, response.pagination)))\n      .catch(error => {\n        dispatch(\n          notifSend({\n            message: {\n              key: 'ui.toast.onFailToLoadEntries',\n              details: error,\n            },\n            kind: 'danger',\n            dismissAfter: 8000,\n          }),\n        );\n        dispatch(unpublishedEntriesFailed(error));\n        Promise.reject(error);\n      });\n  };\n}\n\nexport function persistUnpublishedEntry(collection, existingUnpublishedEntry) {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const entryDraft = state.entryDraft;\n    const fieldsErrors = entryDraft.get('fieldsErrors');\n\n    // Early return if draft contains validation errors\n    if (!fieldsErrors.isEmpty()) {\n      const hasPresenceErrors = fieldsErrors.some(errors =>\n        errors.some(error => error.type && error.type === ValidationErrorTypes.PRESENCE),\n      );\n\n      if (hasPresenceErrors) {\n        dispatch(\n          notifSend({\n            message: {\n              key: 'ui.toast.missingRequiredField',\n            },\n            kind: 'danger',\n            dismissAfter: 8000,\n          }),\n        );\n      }\n      return Promise.reject();\n    }\n\n    const backend = currentBackend(state.config);\n    const transactionID = uuid();\n    const assetProxies = entryDraft.get('mediaFiles').map(path => getAsset(state, path));\n    const entry = entryDraft.get('entry');\n\n    /**\n     * Serialize the values of any fields with registered serializers, and\n     * update the entry and entryDraft with the serialized values.\n     */\n    const fields = selectFields(collection, entry.get('slug'));\n    const serializedData = serializeValues(entryDraft.getIn(['entry', 'data']), fields);\n    const serializedEntry = entry.set('data', serializedData);\n    const serializedEntryDraft = entryDraft.set('entry', serializedEntry);\n\n    dispatch(unpublishedEntryPersisting(collection, serializedEntry, transactionID));\n    const persistAction = existingUnpublishedEntry\n      ? backend.persistUnpublishedEntry\n      : backend.persistEntry;\n    const persistCallArgs = [\n      backend,\n      state.config,\n      collection,\n      serializedEntryDraft,\n      assetProxies.toJS(),\n      state.integrations,\n    ];\n\n    try {\n      const newSlug = await persistAction.call(...persistCallArgs);\n      dispatch(\n        notifSend({\n          message: {\n            key: 'ui.toast.entrySaved',\n          },\n          kind: 'success',\n          dismissAfter: 4000,\n        }),\n      );\n      dispatch(unpublishedEntryPersisted(collection, serializedEntry, transactionID, newSlug));\n    } catch (error) {\n      dispatch(\n        notifSend({\n          message: {\n            key: 'ui.toast.onFailToPersist',\n            details: error,\n          },\n          kind: 'danger',\n          dismissAfter: 8000,\n        }),\n      );\n      return Promise.reject(dispatch(unpublishedEntryPersistedFail(error, transactionID)));\n    }\n  };\n}\n\nexport function updateUnpublishedEntryStatus(collection, slug, oldStatus, newStatus) {\n  return (dispatch, getState) => {\n    if (oldStatus === newStatus) return;\n    const state = getState();\n    const backend = currentBackend(state.config);\n    const transactionID = uuid();\n    dispatch(\n      unpublishedEntryStatusChangeRequest(collection, slug, oldStatus, newStatus, transactionID),\n    );\n    backend\n      .updateUnpublishedEntryStatus(collection, slug, newStatus)\n      .then(() => {\n        dispatch(\n          notifSend({\n            message: {\n              key: 'ui.toast.entryUpdated',\n            },\n            kind: 'success',\n            dismissAfter: 4000,\n          }),\n        );\n        dispatch(\n          unpublishedEntryStatusChangePersisted(\n            collection,\n            slug,\n            oldStatus,\n            newStatus,\n            transactionID,\n          ),\n        );\n      })\n      .catch(error => {\n        dispatch(\n          notifSend({\n            message: {\n              key: 'ui.toast.onFailToUpdateStatus',\n              details: error,\n            },\n            kind: 'danger',\n            dismissAfter: 8000,\n          }),\n        );\n        dispatch(unpublishedEntryStatusChangeError(collection, slug, transactionID));\n      });\n  };\n}\n\nexport function deleteUnpublishedEntry(collection, slug) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const backend = currentBackend(state.config);\n    const transactionID = uuid();\n    dispatch(unpublishedEntryDeleteRequest(collection, slug, transactionID));\n    return backend\n      .deleteUnpublishedEntry(collection, slug)\n      .then(() => {\n        dispatch(\n          notifSend({\n            message: { key: 'ui.toast.onDeleteUnpublishedChanges' },\n            kind: 'success',\n            dismissAfter: 4000,\n          }),\n        );\n        dispatch(unpublishedEntryDeleted(collection, slug, transactionID));\n      })\n      .catch(error => {\n        dispatch(\n          notifSend({\n            message: { key: 'ui.toast.onDeleteUnpublishedChanges', details: error },\n            kind: 'danger',\n            dismissAfter: 8000,\n          }),\n        );\n        dispatch(unpublishedEntryDeleteError(collection, slug, transactionID));\n      });\n  };\n}\n\nexport function publishUnpublishedEntry(collection, slug) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const collections = state.collections;\n    const backend = currentBackend(state.config);\n    const transactionID = uuid();\n    dispatch(unpublishedEntryPublishRequest(collection, slug, transactionID));\n    return backend\n      .publishUnpublishedEntry(collection, slug)\n      .then(() => {\n        dispatch(\n          notifSend({\n            message: { key: 'ui.toast.entryPublished' },\n            kind: 'success',\n            dismissAfter: 4000,\n          }),\n        );\n        dispatch(unpublishedEntryPublished(collection, slug, transactionID));\n        dispatch(loadEntry(collections.get(collection), slug));\n      })\n      .catch(error => {\n        dispatch(\n          notifSend({\n            message: { key: 'ui.toast.onFailToPublishEntry', details: error },\n            kind: 'danger',\n            dismissAfter: 8000,\n          }),\n        );\n        dispatch(unpublishedEntryPublishError(collection, slug, transactionID));\n      });\n  };\n}\n"],"file":"editorialWorkflow.js"}