"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _react = _interopRequireDefault(require("react"));

var _reactRouterDom = require("react-router-dom");

var _netlifyCmsLibUtil = require("netlify-cms-lib-util");

var _netlifyCmsUiDefault = require("netlify-cms-ui-default");

var _collectionViews = require("../../../constants/collectionViews");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ListCard = (0, _styledBase.default)("li", {
  target: "eab48an0",
  label: "ListCard"
})(_netlifyCmsUiDefault.components.card, ";width:", _netlifyCmsUiDefault.lengths.topCardWidth, ";margin-left:12px;margin-bottom:16px;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTzBCIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgcmVzb2x2ZVBhdGggfSBmcm9tICduZXRsaWZ5LWNtcy1saWItdXRpbCc7XG5pbXBvcnQgeyBjb2xvcnMsIGNvbG9yc1JhdywgY29tcG9uZW50cywgbGVuZ3RocyB9IGZyb20gJ25ldGxpZnktY21zLXVpLWRlZmF1bHQnO1xuaW1wb3J0IHsgVklFV19TVFlMRV9MSVNULCBWSUVXX1NUWUxFX0dSSUQgfSBmcm9tICdDb25zdGFudHMvY29sbGVjdGlvblZpZXdzJztcblxuY29uc3QgTGlzdENhcmQgPSBzdHlsZWQubGlgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgd2lkdGg6ICR7bGVuZ3Rocy50b3BDYXJkV2lkdGh9O1xuICBtYXJnaW4tbGVmdDogMTJweDtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbmA7XG5cbmNvbnN0IExpc3RDYXJkTGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTZweCAyMnB4O1xuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5mb3JlZ3JvdW5kfTtcbiAgfVxuYDtcblxuY29uc3QgR3JpZENhcmQgPSBzdHlsZWQubGlgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgZmxleDogMCAwIDMzNXB4O1xuICBoZWlnaHQ6IDI0MHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tbGVmdDogMTJweDtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbmA7XG5cbmNvbnN0IEdyaWRDYXJkTGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gICYsXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmZvcmVncm91bmR9O1xuICAgIGNvbG9yOiAke2NvbG9ycy50ZXh0fTtcbiAgfVxuYDtcblxuY29uc3QgQ29sbGVjdGlvbkxhYmVsID0gc3R5bGVkLmgyYFxuICBmb250LXNpemU6IDEycHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5gO1xuXG5jb25zdCBMaXN0Q2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW4tYm90dG9tOiAwO1xuYDtcblxuY29uc3QgQ2FyZEhlYWRpbmcgPSBzdHlsZWQuaDJgXG4gIG1hcmdpbjogMCAwIDJweDtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLmRpdmBcbiAgcGFkZGluZzogMTZweCAyMnB4O1xuICBoZWlnaHQ6IDkwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogJHtwcm9wcyA9PiBwcm9wcy5oYXNJbWFnZSAmJiAwfTtcblxuICAmOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgei1pbmRleDogMTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogLTIwJTtcbiAgICBoZWlnaHQ6IDE0MCU7XG4gICAgd2lkdGg6IDE0MCU7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAtMTVweCAyNHB4ICR7Y29sb3JzUmF3LndoaXRlfTtcbiAgfVxuYDtcblxuY29uc3QgQ2FyZEltYWdlID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7cHJvcHMgPT4gcHJvcHMudXJsfSk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGhlaWdodDogMTUwcHg7XG5gO1xuXG5jb25zdCBFbnRyeUNhcmQgPSAoe1xuICBjb2xsZWN0aW9uLFxuICBlbnRyeSxcbiAgaW5mZXJlZEZpZWxkcyxcbiAgcHVibGljRm9sZGVyLFxuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHZpZXdTdHlsZSA9IFZJRVdfU1RZTEVfTElTVCxcbn0pID0+IHtcbiAgY29uc3QgbGFiZWwgPSBlbnRyeS5nZXQoJ2xhYmVsJyk7XG4gIGNvbnN0IHRpdGxlID0gbGFiZWwgfHwgZW50cnkuZ2V0SW4oWydkYXRhJywgaW5mZXJlZEZpZWxkcy50aXRsZUZpZWxkXSk7XG4gIGNvbnN0IHBhdGggPSBgL2NvbGxlY3Rpb25zLyR7Y29sbGVjdGlvbi5nZXQoJ25hbWUnKX0vZW50cmllcy8ke2VudHJ5LmdldCgnc2x1ZycpfWA7XG4gIGxldCBpbWFnZSA9IGVudHJ5LmdldEluKFsnZGF0YScsIGluZmVyZWRGaWVsZHMuaW1hZ2VGaWVsZF0pO1xuICBpbWFnZSA9IHJlc29sdmVQYXRoKGltYWdlLCBwdWJsaWNGb2xkZXIpO1xuICBpZiAoaW1hZ2UpIHtcbiAgICBpbWFnZSA9IGVuY29kZVVSSShpbWFnZSk7XG4gIH1cblxuICBpZiAodmlld1N0eWxlID09PSBWSUVXX1NUWUxFX0xJU1QpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPExpc3RDYXJkPlxuICAgICAgICA8TGlzdENhcmRMaW5rIHRvPXtwYXRofT5cbiAgICAgICAgICB7Y29sbGVjdGlvbkxhYmVsID8gPENvbGxlY3Rpb25MYWJlbD57Y29sbGVjdGlvbkxhYmVsfTwvQ29sbGVjdGlvbkxhYmVsPiA6IG51bGx9XG4gICAgICAgICAgPExpc3RDYXJkVGl0bGU+e3RpdGxlfTwvTGlzdENhcmRUaXRsZT5cbiAgICAgICAgPC9MaXN0Q2FyZExpbms+XG4gICAgICA8L0xpc3RDYXJkPlxuICAgICk7XG4gIH1cblxuICBpZiAodmlld1N0eWxlID09PSBWSUVXX1NUWUxFX0dSSUQpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEdyaWRDYXJkPlxuICAgICAgICA8R3JpZENhcmRMaW5rIHRvPXtwYXRofT5cbiAgICAgICAgICA8Q2FyZEJvZHkgaGFzSW1hZ2U9e2ltYWdlfT5cbiAgICAgICAgICAgIHtjb2xsZWN0aW9uTGFiZWwgPyA8Q29sbGVjdGlvbkxhYmVsPntjb2xsZWN0aW9uTGFiZWx9PC9Db2xsZWN0aW9uTGFiZWw+IDogbnVsbH1cbiAgICAgICAgICAgIDxDYXJkSGVhZGluZz57dGl0bGV9PC9DYXJkSGVhZGluZz5cbiAgICAgICAgICA8L0NhcmRCb2R5PlxuICAgICAgICAgIHtpbWFnZSA/IDxDYXJkSW1hZ2UgdXJsPXtpbWFnZX0gLz4gOiBudWxsfVxuICAgICAgICA8L0dyaWRDYXJkTGluaz5cbiAgICAgIDwvR3JpZENhcmQ+XG4gICAgKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgRW50cnlDYXJkO1xuIl19 */"));
const ListCardLink = (
/*#__PURE__*/
0, _styledBase.default)(_reactRouterDom.Link, {
  target: "eab48an1",
  label: "ListCardLink"
})("display:block;max-width:100%;padding:16px 22px;&:hover{background-color:", _netlifyCmsUiDefault.colors.foreground, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBY2lDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgcmVzb2x2ZVBhdGggfSBmcm9tICduZXRsaWZ5LWNtcy1saWItdXRpbCc7XG5pbXBvcnQgeyBjb2xvcnMsIGNvbG9yc1JhdywgY29tcG9uZW50cywgbGVuZ3RocyB9IGZyb20gJ25ldGxpZnktY21zLXVpLWRlZmF1bHQnO1xuaW1wb3J0IHsgVklFV19TVFlMRV9MSVNULCBWSUVXX1NUWUxFX0dSSUQgfSBmcm9tICdDb25zdGFudHMvY29sbGVjdGlvblZpZXdzJztcblxuY29uc3QgTGlzdENhcmQgPSBzdHlsZWQubGlgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgd2lkdGg6ICR7bGVuZ3Rocy50b3BDYXJkV2lkdGh9O1xuICBtYXJnaW4tbGVmdDogMTJweDtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbmA7XG5cbmNvbnN0IExpc3RDYXJkTGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTZweCAyMnB4O1xuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5mb3JlZ3JvdW5kfTtcbiAgfVxuYDtcblxuY29uc3QgR3JpZENhcmQgPSBzdHlsZWQubGlgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgZmxleDogMCAwIDMzNXB4O1xuICBoZWlnaHQ6IDI0MHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tbGVmdDogMTJweDtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbmA7XG5cbmNvbnN0IEdyaWRDYXJkTGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gICYsXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmZvcmVncm91bmR9O1xuICAgIGNvbG9yOiAke2NvbG9ycy50ZXh0fTtcbiAgfVxuYDtcblxuY29uc3QgQ29sbGVjdGlvbkxhYmVsID0gc3R5bGVkLmgyYFxuICBmb250LXNpemU6IDEycHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5gO1xuXG5jb25zdCBMaXN0Q2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW4tYm90dG9tOiAwO1xuYDtcblxuY29uc3QgQ2FyZEhlYWRpbmcgPSBzdHlsZWQuaDJgXG4gIG1hcmdpbjogMCAwIDJweDtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLmRpdmBcbiAgcGFkZGluZzogMTZweCAyMnB4O1xuICBoZWlnaHQ6IDkwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogJHtwcm9wcyA9PiBwcm9wcy5oYXNJbWFnZSAmJiAwfTtcblxuICAmOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgei1pbmRleDogMTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogLTIwJTtcbiAgICBoZWlnaHQ6IDE0MCU7XG4gICAgd2lkdGg6IDE0MCU7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAtMTVweCAyNHB4ICR7Y29sb3JzUmF3LndoaXRlfTtcbiAgfVxuYDtcblxuY29uc3QgQ2FyZEltYWdlID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7cHJvcHMgPT4gcHJvcHMudXJsfSk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGhlaWdodDogMTUwcHg7XG5gO1xuXG5jb25zdCBFbnRyeUNhcmQgPSAoe1xuICBjb2xsZWN0aW9uLFxuICBlbnRyeSxcbiAgaW5mZXJlZEZpZWxkcyxcbiAgcHVibGljRm9sZGVyLFxuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHZpZXdTdHlsZSA9IFZJRVdfU1RZTEVfTElTVCxcbn0pID0+IHtcbiAgY29uc3QgbGFiZWwgPSBlbnRyeS5nZXQoJ2xhYmVsJyk7XG4gIGNvbnN0IHRpdGxlID0gbGFiZWwgfHwgZW50cnkuZ2V0SW4oWydkYXRhJywgaW5mZXJlZEZpZWxkcy50aXRsZUZpZWxkXSk7XG4gIGNvbnN0IHBhdGggPSBgL2NvbGxlY3Rpb25zLyR7Y29sbGVjdGlvbi5nZXQoJ25hbWUnKX0vZW50cmllcy8ke2VudHJ5LmdldCgnc2x1ZycpfWA7XG4gIGxldCBpbWFnZSA9IGVudHJ5LmdldEluKFsnZGF0YScsIGluZmVyZWRGaWVsZHMuaW1hZ2VGaWVsZF0pO1xuICBpbWFnZSA9IHJlc29sdmVQYXRoKGltYWdlLCBwdWJsaWNGb2xkZXIpO1xuICBpZiAoaW1hZ2UpIHtcbiAgICBpbWFnZSA9IGVuY29kZVVSSShpbWFnZSk7XG4gIH1cblxuICBpZiAodmlld1N0eWxlID09PSBWSUVXX1NUWUxFX0xJU1QpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPExpc3RDYXJkPlxuICAgICAgICA8TGlzdENhcmRMaW5rIHRvPXtwYXRofT5cbiAgICAgICAgICB7Y29sbGVjdGlvbkxhYmVsID8gPENvbGxlY3Rpb25MYWJlbD57Y29sbGVjdGlvbkxhYmVsfTwvQ29sbGVjdGlvbkxhYmVsPiA6IG51bGx9XG4gICAgICAgICAgPExpc3RDYXJkVGl0bGU+e3RpdGxlfTwvTGlzdENhcmRUaXRsZT5cbiAgICAgICAgPC9MaXN0Q2FyZExpbms+XG4gICAgICA8L0xpc3RDYXJkPlxuICAgICk7XG4gIH1cblxuICBpZiAodmlld1N0eWxlID09PSBWSUVXX1NUWUxFX0dSSUQpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEdyaWRDYXJkPlxuICAgICAgICA8R3JpZENhcmRMaW5rIHRvPXtwYXRofT5cbiAgICAgICAgICA8Q2FyZEJvZHkgaGFzSW1hZ2U9e2ltYWdlfT5cbiAgICAgICAgICAgIHtjb2xsZWN0aW9uTGFiZWwgPyA8Q29sbGVjdGlvbkxhYmVsPntjb2xsZWN0aW9uTGFiZWx9PC9Db2xsZWN0aW9uTGFiZWw+IDogbnVsbH1cbiAgICAgICAgICAgIDxDYXJkSGVhZGluZz57dGl0bGV9PC9DYXJkSGVhZGluZz5cbiAgICAgICAgICA8L0NhcmRCb2R5PlxuICAgICAgICAgIHtpbWFnZSA/IDxDYXJkSW1hZ2UgdXJsPXtpbWFnZX0gLz4gOiBudWxsfVxuICAgICAgICA8L0dyaWRDYXJkTGluaz5cbiAgICAgIDwvR3JpZENhcmQ+XG4gICAgKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgRW50cnlDYXJkO1xuIl19 */"));
const GridCard = (0, _styledBase.default)("li", {
  target: "eab48an2",
  label: "GridCard"
})(_netlifyCmsUiDefault.components.card, ";flex:0 0 335px;height:240px;overflow:hidden;margin-left:12px;margin-bottom:16px;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUIwQiIsImZpbGUiOiIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Db2xsZWN0aW9uL0VudHJpZXMvRW50cnlDYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IHJlc29sdmVQYXRoIH0gZnJvbSAnbmV0bGlmeS1jbXMtbGliLXV0aWwnO1xuaW1wb3J0IHsgY29sb3JzLCBjb2xvcnNSYXcsIGNvbXBvbmVudHMsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IFZJRVdfU1RZTEVfTElTVCwgVklFV19TVFlMRV9HUklEIH0gZnJvbSAnQ29uc3RhbnRzL2NvbGxlY3Rpb25WaWV3cyc7XG5cbmNvbnN0IExpc3RDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIHdpZHRoOiAke2xlbmd0aHMudG9wQ2FyZFdpZHRofTtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBMaXN0Q2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIH1cbmA7XG5cbmNvbnN0IEdyaWRDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIGZsZXg6IDAgMCAzMzVweDtcbiAgaGVpZ2h0OiAyNDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBHcmlkQ2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICAmLFxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5mb3JlZ3JvdW5kfTtcbiAgICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIH1cbmA7XG5cbmNvbnN0IENvbGxlY3Rpb25MYWJlbCA9IHN0eWxlZC5oMmBcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuYDtcblxuY29uc3QgTGlzdENhcmRUaXRsZSA9IHN0eWxlZC5oMmBcbiAgbWFyZ2luLWJvdHRvbTogMDtcbmA7XG5cbmNvbnN0IENhcmRIZWFkaW5nID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDAgMCAycHg7XG5gO1xuXG5jb25zdCBDYXJkQm9keSA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgaGVpZ2h0OiA5MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206ICR7cHJvcHMgPT4gcHJvcHMuaGFzSW1hZ2UgJiYgMH07XG5cbiAgJjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IC0yMCU7XG4gICAgaGVpZ2h0OiAxNDAlO1xuICAgIHdpZHRoOiAxNDAlO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTE1cHggMjRweCAke2NvbG9yc1Jhdy53aGl0ZX07XG4gIH1cbmA7XG5cbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke3Byb3BzID0+IHByb3BzLnVybH0pO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBoZWlnaHQ6IDE1MHB4O1xuYDtcblxuY29uc3QgRW50cnlDYXJkID0gKHtcbiAgY29sbGVjdGlvbixcbiAgZW50cnksXG4gIGluZmVyZWRGaWVsZHMsXG4gIHB1YmxpY0ZvbGRlcixcbiAgY29sbGVjdGlvbkxhYmVsLFxuICB2aWV3U3R5bGUgPSBWSUVXX1NUWUxFX0xJU1QsXG59KSA9PiB7XG4gIGNvbnN0IGxhYmVsID0gZW50cnkuZ2V0KCdsYWJlbCcpO1xuICBjb25zdCB0aXRsZSA9IGxhYmVsIHx8IGVudHJ5LmdldEluKFsnZGF0YScsIGluZmVyZWRGaWVsZHMudGl0bGVGaWVsZF0pO1xuICBjb25zdCBwYXRoID0gYC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb24uZ2V0KCduYW1lJyl9L2VudHJpZXMvJHtlbnRyeS5nZXQoJ3NsdWcnKX1gO1xuICBsZXQgaW1hZ2UgPSBlbnRyeS5nZXRJbihbJ2RhdGEnLCBpbmZlcmVkRmllbGRzLmltYWdlRmllbGRdKTtcbiAgaW1hZ2UgPSByZXNvbHZlUGF0aChpbWFnZSwgcHVibGljRm9sZGVyKTtcbiAgaWYgKGltYWdlKSB7XG4gICAgaW1hZ2UgPSBlbmNvZGVVUkkoaW1hZ2UpO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9MSVNUKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxMaXN0Q2FyZD5cbiAgICAgICAgPExpc3RDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAge2NvbGxlY3Rpb25MYWJlbCA/IDxDb2xsZWN0aW9uTGFiZWw+e2NvbGxlY3Rpb25MYWJlbH08L0NvbGxlY3Rpb25MYWJlbD4gOiBudWxsfVxuICAgICAgICAgIDxMaXN0Q2FyZFRpdGxlPnt0aXRsZX08L0xpc3RDYXJkVGl0bGU+XG4gICAgICAgIDwvTGlzdENhcmRMaW5rPlxuICAgICAgPC9MaXN0Q2FyZD5cbiAgICApO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9HUklEKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxHcmlkQ2FyZD5cbiAgICAgICAgPEdyaWRDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAgPENhcmRCb2R5IGhhc0ltYWdlPXtpbWFnZX0+XG4gICAgICAgICAgICB7Y29sbGVjdGlvbkxhYmVsID8gPENvbGxlY3Rpb25MYWJlbD57Y29sbGVjdGlvbkxhYmVsfTwvQ29sbGVjdGlvbkxhYmVsPiA6IG51bGx9XG4gICAgICAgICAgICA8Q2FyZEhlYWRpbmc+e3RpdGxlfTwvQ2FyZEhlYWRpbmc+XG4gICAgICAgICAgPC9DYXJkQm9keT5cbiAgICAgICAgICB7aW1hZ2UgPyA8Q2FyZEltYWdlIHVybD17aW1hZ2V9IC8+IDogbnVsbH1cbiAgICAgICAgPC9HcmlkQ2FyZExpbms+XG4gICAgICA8L0dyaWRDYXJkPlxuICAgICk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVudHJ5Q2FyZDtcbiJdfQ== */"));
const GridCardLink = (
/*#__PURE__*/
0, _styledBase.default)(_reactRouterDom.Link, {
  target: "eab48an3",
  label: "GridCardLink"
})("display:block;&,&:hover{background-color:", _netlifyCmsUiDefault.colors.foreground, ";color:", _netlifyCmsUiDefault.colors.text, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0NpQyIsImZpbGUiOiIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Db2xsZWN0aW9uL0VudHJpZXMvRW50cnlDYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IHJlc29sdmVQYXRoIH0gZnJvbSAnbmV0bGlmeS1jbXMtbGliLXV0aWwnO1xuaW1wb3J0IHsgY29sb3JzLCBjb2xvcnNSYXcsIGNvbXBvbmVudHMsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IFZJRVdfU1RZTEVfTElTVCwgVklFV19TVFlMRV9HUklEIH0gZnJvbSAnQ29uc3RhbnRzL2NvbGxlY3Rpb25WaWV3cyc7XG5cbmNvbnN0IExpc3RDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIHdpZHRoOiAke2xlbmd0aHMudG9wQ2FyZFdpZHRofTtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBMaXN0Q2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIH1cbmA7XG5cbmNvbnN0IEdyaWRDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIGZsZXg6IDAgMCAzMzVweDtcbiAgaGVpZ2h0OiAyNDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBHcmlkQ2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICAmLFxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5mb3JlZ3JvdW5kfTtcbiAgICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIH1cbmA7XG5cbmNvbnN0IENvbGxlY3Rpb25MYWJlbCA9IHN0eWxlZC5oMmBcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuYDtcblxuY29uc3QgTGlzdENhcmRUaXRsZSA9IHN0eWxlZC5oMmBcbiAgbWFyZ2luLWJvdHRvbTogMDtcbmA7XG5cbmNvbnN0IENhcmRIZWFkaW5nID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDAgMCAycHg7XG5gO1xuXG5jb25zdCBDYXJkQm9keSA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgaGVpZ2h0OiA5MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206ICR7cHJvcHMgPT4gcHJvcHMuaGFzSW1hZ2UgJiYgMH07XG5cbiAgJjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IC0yMCU7XG4gICAgaGVpZ2h0OiAxNDAlO1xuICAgIHdpZHRoOiAxNDAlO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTE1cHggMjRweCAke2NvbG9yc1Jhdy53aGl0ZX07XG4gIH1cbmA7XG5cbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke3Byb3BzID0+IHByb3BzLnVybH0pO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBoZWlnaHQ6IDE1MHB4O1xuYDtcblxuY29uc3QgRW50cnlDYXJkID0gKHtcbiAgY29sbGVjdGlvbixcbiAgZW50cnksXG4gIGluZmVyZWRGaWVsZHMsXG4gIHB1YmxpY0ZvbGRlcixcbiAgY29sbGVjdGlvbkxhYmVsLFxuICB2aWV3U3R5bGUgPSBWSUVXX1NUWUxFX0xJU1QsXG59KSA9PiB7XG4gIGNvbnN0IGxhYmVsID0gZW50cnkuZ2V0KCdsYWJlbCcpO1xuICBjb25zdCB0aXRsZSA9IGxhYmVsIHx8IGVudHJ5LmdldEluKFsnZGF0YScsIGluZmVyZWRGaWVsZHMudGl0bGVGaWVsZF0pO1xuICBjb25zdCBwYXRoID0gYC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb24uZ2V0KCduYW1lJyl9L2VudHJpZXMvJHtlbnRyeS5nZXQoJ3NsdWcnKX1gO1xuICBsZXQgaW1hZ2UgPSBlbnRyeS5nZXRJbihbJ2RhdGEnLCBpbmZlcmVkRmllbGRzLmltYWdlRmllbGRdKTtcbiAgaW1hZ2UgPSByZXNvbHZlUGF0aChpbWFnZSwgcHVibGljRm9sZGVyKTtcbiAgaWYgKGltYWdlKSB7XG4gICAgaW1hZ2UgPSBlbmNvZGVVUkkoaW1hZ2UpO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9MSVNUKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxMaXN0Q2FyZD5cbiAgICAgICAgPExpc3RDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAge2NvbGxlY3Rpb25MYWJlbCA/IDxDb2xsZWN0aW9uTGFiZWw+e2NvbGxlY3Rpb25MYWJlbH08L0NvbGxlY3Rpb25MYWJlbD4gOiBudWxsfVxuICAgICAgICAgIDxMaXN0Q2FyZFRpdGxlPnt0aXRsZX08L0xpc3RDYXJkVGl0bGU+XG4gICAgICAgIDwvTGlzdENhcmRMaW5rPlxuICAgICAgPC9MaXN0Q2FyZD5cbiAgICApO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9HUklEKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxHcmlkQ2FyZD5cbiAgICAgICAgPEdyaWRDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAgPENhcmRCb2R5IGhhc0ltYWdlPXtpbWFnZX0+XG4gICAgICAgICAgICB7Y29sbGVjdGlvbkxhYmVsID8gPENvbGxlY3Rpb25MYWJlbD57Y29sbGVjdGlvbkxhYmVsfTwvQ29sbGVjdGlvbkxhYmVsPiA6IG51bGx9XG4gICAgICAgICAgICA8Q2FyZEhlYWRpbmc+e3RpdGxlfTwvQ2FyZEhlYWRpbmc+XG4gICAgICAgICAgPC9DYXJkQm9keT5cbiAgICAgICAgICB7aW1hZ2UgPyA8Q2FyZEltYWdlIHVybD17aW1hZ2V9IC8+IDogbnVsbH1cbiAgICAgICAgPC9HcmlkQ2FyZExpbms+XG4gICAgICA8L0dyaWRDYXJkPlxuICAgICk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVudHJ5Q2FyZDtcbiJdfQ== */"));
const CollectionLabel = (0, _styledBase.default)("h2", {
  target: "eab48an4",
  label: "CollectionLabel"
})("font-size:12px;color:", _netlifyCmsUiDefault.colors.textLead, ";text-transform:uppercase;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUNpQyIsImZpbGUiOiIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Db2xsZWN0aW9uL0VudHJpZXMvRW50cnlDYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IHJlc29sdmVQYXRoIH0gZnJvbSAnbmV0bGlmeS1jbXMtbGliLXV0aWwnO1xuaW1wb3J0IHsgY29sb3JzLCBjb2xvcnNSYXcsIGNvbXBvbmVudHMsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IFZJRVdfU1RZTEVfTElTVCwgVklFV19TVFlMRV9HUklEIH0gZnJvbSAnQ29uc3RhbnRzL2NvbGxlY3Rpb25WaWV3cyc7XG5cbmNvbnN0IExpc3RDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIHdpZHRoOiAke2xlbmd0aHMudG9wQ2FyZFdpZHRofTtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBMaXN0Q2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIH1cbmA7XG5cbmNvbnN0IEdyaWRDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIGZsZXg6IDAgMCAzMzVweDtcbiAgaGVpZ2h0OiAyNDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBHcmlkQ2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICAmLFxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5mb3JlZ3JvdW5kfTtcbiAgICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIH1cbmA7XG5cbmNvbnN0IENvbGxlY3Rpb25MYWJlbCA9IHN0eWxlZC5oMmBcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuYDtcblxuY29uc3QgTGlzdENhcmRUaXRsZSA9IHN0eWxlZC5oMmBcbiAgbWFyZ2luLWJvdHRvbTogMDtcbmA7XG5cbmNvbnN0IENhcmRIZWFkaW5nID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDAgMCAycHg7XG5gO1xuXG5jb25zdCBDYXJkQm9keSA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgaGVpZ2h0OiA5MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206ICR7cHJvcHMgPT4gcHJvcHMuaGFzSW1hZ2UgJiYgMH07XG5cbiAgJjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IC0yMCU7XG4gICAgaGVpZ2h0OiAxNDAlO1xuICAgIHdpZHRoOiAxNDAlO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTE1cHggMjRweCAke2NvbG9yc1Jhdy53aGl0ZX07XG4gIH1cbmA7XG5cbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke3Byb3BzID0+IHByb3BzLnVybH0pO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBoZWlnaHQ6IDE1MHB4O1xuYDtcblxuY29uc3QgRW50cnlDYXJkID0gKHtcbiAgY29sbGVjdGlvbixcbiAgZW50cnksXG4gIGluZmVyZWRGaWVsZHMsXG4gIHB1YmxpY0ZvbGRlcixcbiAgY29sbGVjdGlvbkxhYmVsLFxuICB2aWV3U3R5bGUgPSBWSUVXX1NUWUxFX0xJU1QsXG59KSA9PiB7XG4gIGNvbnN0IGxhYmVsID0gZW50cnkuZ2V0KCdsYWJlbCcpO1xuICBjb25zdCB0aXRsZSA9IGxhYmVsIHx8IGVudHJ5LmdldEluKFsnZGF0YScsIGluZmVyZWRGaWVsZHMudGl0bGVGaWVsZF0pO1xuICBjb25zdCBwYXRoID0gYC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb24uZ2V0KCduYW1lJyl9L2VudHJpZXMvJHtlbnRyeS5nZXQoJ3NsdWcnKX1gO1xuICBsZXQgaW1hZ2UgPSBlbnRyeS5nZXRJbihbJ2RhdGEnLCBpbmZlcmVkRmllbGRzLmltYWdlRmllbGRdKTtcbiAgaW1hZ2UgPSByZXNvbHZlUGF0aChpbWFnZSwgcHVibGljRm9sZGVyKTtcbiAgaWYgKGltYWdlKSB7XG4gICAgaW1hZ2UgPSBlbmNvZGVVUkkoaW1hZ2UpO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9MSVNUKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxMaXN0Q2FyZD5cbiAgICAgICAgPExpc3RDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAge2NvbGxlY3Rpb25MYWJlbCA/IDxDb2xsZWN0aW9uTGFiZWw+e2NvbGxlY3Rpb25MYWJlbH08L0NvbGxlY3Rpb25MYWJlbD4gOiBudWxsfVxuICAgICAgICAgIDxMaXN0Q2FyZFRpdGxlPnt0aXRsZX08L0xpc3RDYXJkVGl0bGU+XG4gICAgICAgIDwvTGlzdENhcmRMaW5rPlxuICAgICAgPC9MaXN0Q2FyZD5cbiAgICApO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9HUklEKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxHcmlkQ2FyZD5cbiAgICAgICAgPEdyaWRDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAgPENhcmRCb2R5IGhhc0ltYWdlPXtpbWFnZX0+XG4gICAgICAgICAgICB7Y29sbGVjdGlvbkxhYmVsID8gPENvbGxlY3Rpb25MYWJlbD57Y29sbGVjdGlvbkxhYmVsfTwvQ29sbGVjdGlvbkxhYmVsPiA6IG51bGx9XG4gICAgICAgICAgICA8Q2FyZEhlYWRpbmc+e3RpdGxlfTwvQ2FyZEhlYWRpbmc+XG4gICAgICAgICAgPC9DYXJkQm9keT5cbiAgICAgICAgICB7aW1hZ2UgPyA8Q2FyZEltYWdlIHVybD17aW1hZ2V9IC8+IDogbnVsbH1cbiAgICAgICAgPC9HcmlkQ2FyZExpbms+XG4gICAgICA8L0dyaWRDYXJkPlxuICAgICk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVudHJ5Q2FyZDtcbiJdfQ== */"));
const ListCardTitle = (0, _styledBase.default)("h2", {
  target: "eab48an5",
  label: "ListCardTitle"
})(process.env.NODE_ENV === "production" ? {
  name: "gx0lhm",
  styles: "margin-bottom:0;"
} : {
  name: "gx0lhm",
  styles: "margin-bottom:0;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0MrQiIsImZpbGUiOiIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Db2xsZWN0aW9uL0VudHJpZXMvRW50cnlDYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IHJlc29sdmVQYXRoIH0gZnJvbSAnbmV0bGlmeS1jbXMtbGliLXV0aWwnO1xuaW1wb3J0IHsgY29sb3JzLCBjb2xvcnNSYXcsIGNvbXBvbmVudHMsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IFZJRVdfU1RZTEVfTElTVCwgVklFV19TVFlMRV9HUklEIH0gZnJvbSAnQ29uc3RhbnRzL2NvbGxlY3Rpb25WaWV3cyc7XG5cbmNvbnN0IExpc3RDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIHdpZHRoOiAke2xlbmd0aHMudG9wQ2FyZFdpZHRofTtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBMaXN0Q2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIH1cbmA7XG5cbmNvbnN0IEdyaWRDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIGZsZXg6IDAgMCAzMzVweDtcbiAgaGVpZ2h0OiAyNDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBHcmlkQ2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICAmLFxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5mb3JlZ3JvdW5kfTtcbiAgICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIH1cbmA7XG5cbmNvbnN0IENvbGxlY3Rpb25MYWJlbCA9IHN0eWxlZC5oMmBcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuYDtcblxuY29uc3QgTGlzdENhcmRUaXRsZSA9IHN0eWxlZC5oMmBcbiAgbWFyZ2luLWJvdHRvbTogMDtcbmA7XG5cbmNvbnN0IENhcmRIZWFkaW5nID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDAgMCAycHg7XG5gO1xuXG5jb25zdCBDYXJkQm9keSA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgaGVpZ2h0OiA5MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206ICR7cHJvcHMgPT4gcHJvcHMuaGFzSW1hZ2UgJiYgMH07XG5cbiAgJjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IC0yMCU7XG4gICAgaGVpZ2h0OiAxNDAlO1xuICAgIHdpZHRoOiAxNDAlO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTE1cHggMjRweCAke2NvbG9yc1Jhdy53aGl0ZX07XG4gIH1cbmA7XG5cbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke3Byb3BzID0+IHByb3BzLnVybH0pO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBoZWlnaHQ6IDE1MHB4O1xuYDtcblxuY29uc3QgRW50cnlDYXJkID0gKHtcbiAgY29sbGVjdGlvbixcbiAgZW50cnksXG4gIGluZmVyZWRGaWVsZHMsXG4gIHB1YmxpY0ZvbGRlcixcbiAgY29sbGVjdGlvbkxhYmVsLFxuICB2aWV3U3R5bGUgPSBWSUVXX1NUWUxFX0xJU1QsXG59KSA9PiB7XG4gIGNvbnN0IGxhYmVsID0gZW50cnkuZ2V0KCdsYWJlbCcpO1xuICBjb25zdCB0aXRsZSA9IGxhYmVsIHx8IGVudHJ5LmdldEluKFsnZGF0YScsIGluZmVyZWRGaWVsZHMudGl0bGVGaWVsZF0pO1xuICBjb25zdCBwYXRoID0gYC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb24uZ2V0KCduYW1lJyl9L2VudHJpZXMvJHtlbnRyeS5nZXQoJ3NsdWcnKX1gO1xuICBsZXQgaW1hZ2UgPSBlbnRyeS5nZXRJbihbJ2RhdGEnLCBpbmZlcmVkRmllbGRzLmltYWdlRmllbGRdKTtcbiAgaW1hZ2UgPSByZXNvbHZlUGF0aChpbWFnZSwgcHVibGljRm9sZGVyKTtcbiAgaWYgKGltYWdlKSB7XG4gICAgaW1hZ2UgPSBlbmNvZGVVUkkoaW1hZ2UpO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9MSVNUKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxMaXN0Q2FyZD5cbiAgICAgICAgPExpc3RDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAge2NvbGxlY3Rpb25MYWJlbCA/IDxDb2xsZWN0aW9uTGFiZWw+e2NvbGxlY3Rpb25MYWJlbH08L0NvbGxlY3Rpb25MYWJlbD4gOiBudWxsfVxuICAgICAgICAgIDxMaXN0Q2FyZFRpdGxlPnt0aXRsZX08L0xpc3RDYXJkVGl0bGU+XG4gICAgICAgIDwvTGlzdENhcmRMaW5rPlxuICAgICAgPC9MaXN0Q2FyZD5cbiAgICApO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9HUklEKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxHcmlkQ2FyZD5cbiAgICAgICAgPEdyaWRDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAgPENhcmRCb2R5IGhhc0ltYWdlPXtpbWFnZX0+XG4gICAgICAgICAgICB7Y29sbGVjdGlvbkxhYmVsID8gPENvbGxlY3Rpb25MYWJlbD57Y29sbGVjdGlvbkxhYmVsfTwvQ29sbGVjdGlvbkxhYmVsPiA6IG51bGx9XG4gICAgICAgICAgICA8Q2FyZEhlYWRpbmc+e3RpdGxlfTwvQ2FyZEhlYWRpbmc+XG4gICAgICAgICAgPC9DYXJkQm9keT5cbiAgICAgICAgICB7aW1hZ2UgPyA8Q2FyZEltYWdlIHVybD17aW1hZ2V9IC8+IDogbnVsbH1cbiAgICAgICAgPC9HcmlkQ2FyZExpbms+XG4gICAgICA8L0dyaWRDYXJkPlxuICAgICk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVudHJ5Q2FyZDtcbiJdfQ== */"
});
const CardHeading = (0, _styledBase.default)("h2", {
  target: "eab48an6",
  label: "CardHeading"
})(process.env.NODE_ENV === "production" ? {
  name: "1kpnu25",
  styles: "margin:0 0 2px;"
} : {
  name: "1kpnu25",
  styles: "margin:0 0 2px;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUQ2QiIsImZpbGUiOiIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Db2xsZWN0aW9uL0VudHJpZXMvRW50cnlDYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IHJlc29sdmVQYXRoIH0gZnJvbSAnbmV0bGlmeS1jbXMtbGliLXV0aWwnO1xuaW1wb3J0IHsgY29sb3JzLCBjb2xvcnNSYXcsIGNvbXBvbmVudHMsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IFZJRVdfU1RZTEVfTElTVCwgVklFV19TVFlMRV9HUklEIH0gZnJvbSAnQ29uc3RhbnRzL2NvbGxlY3Rpb25WaWV3cyc7XG5cbmNvbnN0IExpc3RDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIHdpZHRoOiAke2xlbmd0aHMudG9wQ2FyZFdpZHRofTtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBMaXN0Q2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIH1cbmA7XG5cbmNvbnN0IEdyaWRDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIGZsZXg6IDAgMCAzMzVweDtcbiAgaGVpZ2h0OiAyNDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBHcmlkQ2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICAmLFxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5mb3JlZ3JvdW5kfTtcbiAgICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIH1cbmA7XG5cbmNvbnN0IENvbGxlY3Rpb25MYWJlbCA9IHN0eWxlZC5oMmBcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuYDtcblxuY29uc3QgTGlzdENhcmRUaXRsZSA9IHN0eWxlZC5oMmBcbiAgbWFyZ2luLWJvdHRvbTogMDtcbmA7XG5cbmNvbnN0IENhcmRIZWFkaW5nID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDAgMCAycHg7XG5gO1xuXG5jb25zdCBDYXJkQm9keSA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgaGVpZ2h0OiA5MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206ICR7cHJvcHMgPT4gcHJvcHMuaGFzSW1hZ2UgJiYgMH07XG5cbiAgJjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IC0yMCU7XG4gICAgaGVpZ2h0OiAxNDAlO1xuICAgIHdpZHRoOiAxNDAlO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTE1cHggMjRweCAke2NvbG9yc1Jhdy53aGl0ZX07XG4gIH1cbmA7XG5cbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke3Byb3BzID0+IHByb3BzLnVybH0pO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBoZWlnaHQ6IDE1MHB4O1xuYDtcblxuY29uc3QgRW50cnlDYXJkID0gKHtcbiAgY29sbGVjdGlvbixcbiAgZW50cnksXG4gIGluZmVyZWRGaWVsZHMsXG4gIHB1YmxpY0ZvbGRlcixcbiAgY29sbGVjdGlvbkxhYmVsLFxuICB2aWV3U3R5bGUgPSBWSUVXX1NUWUxFX0xJU1QsXG59KSA9PiB7XG4gIGNvbnN0IGxhYmVsID0gZW50cnkuZ2V0KCdsYWJlbCcpO1xuICBjb25zdCB0aXRsZSA9IGxhYmVsIHx8IGVudHJ5LmdldEluKFsnZGF0YScsIGluZmVyZWRGaWVsZHMudGl0bGVGaWVsZF0pO1xuICBjb25zdCBwYXRoID0gYC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb24uZ2V0KCduYW1lJyl9L2VudHJpZXMvJHtlbnRyeS5nZXQoJ3NsdWcnKX1gO1xuICBsZXQgaW1hZ2UgPSBlbnRyeS5nZXRJbihbJ2RhdGEnLCBpbmZlcmVkRmllbGRzLmltYWdlRmllbGRdKTtcbiAgaW1hZ2UgPSByZXNvbHZlUGF0aChpbWFnZSwgcHVibGljRm9sZGVyKTtcbiAgaWYgKGltYWdlKSB7XG4gICAgaW1hZ2UgPSBlbmNvZGVVUkkoaW1hZ2UpO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9MSVNUKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxMaXN0Q2FyZD5cbiAgICAgICAgPExpc3RDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAge2NvbGxlY3Rpb25MYWJlbCA/IDxDb2xsZWN0aW9uTGFiZWw+e2NvbGxlY3Rpb25MYWJlbH08L0NvbGxlY3Rpb25MYWJlbD4gOiBudWxsfVxuICAgICAgICAgIDxMaXN0Q2FyZFRpdGxlPnt0aXRsZX08L0xpc3RDYXJkVGl0bGU+XG4gICAgICAgIDwvTGlzdENhcmRMaW5rPlxuICAgICAgPC9MaXN0Q2FyZD5cbiAgICApO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9HUklEKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxHcmlkQ2FyZD5cbiAgICAgICAgPEdyaWRDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAgPENhcmRCb2R5IGhhc0ltYWdlPXtpbWFnZX0+XG4gICAgICAgICAgICB7Y29sbGVjdGlvbkxhYmVsID8gPENvbGxlY3Rpb25MYWJlbD57Y29sbGVjdGlvbkxhYmVsfTwvQ29sbGVjdGlvbkxhYmVsPiA6IG51bGx9XG4gICAgICAgICAgICA8Q2FyZEhlYWRpbmc+e3RpdGxlfTwvQ2FyZEhlYWRpbmc+XG4gICAgICAgICAgPC9DYXJkQm9keT5cbiAgICAgICAgICB7aW1hZ2UgPyA8Q2FyZEltYWdlIHVybD17aW1hZ2V9IC8+IDogbnVsbH1cbiAgICAgICAgPC9HcmlkQ2FyZExpbms+XG4gICAgICA8L0dyaWRDYXJkPlxuICAgICk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVudHJ5Q2FyZDtcbiJdfQ== */"
});
const CardBody = (0, _styledBase.default)("div", {
  target: "eab48an7",
  label: "CardBody"
})("padding:16px 22px;height:90px;position:relative;margin-bottom:", props => props.hasImage && 0, ";&:after{content:'';position:absolute;display:block;z-index:1;bottom:0;left:-20%;height:140%;width:140%;box-shadow:inset 0 -15px 24px ", _netlifyCmsUiDefault.colorsRaw.white, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUQyQiIsImZpbGUiOiIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Db2xsZWN0aW9uL0VudHJpZXMvRW50cnlDYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IHJlc29sdmVQYXRoIH0gZnJvbSAnbmV0bGlmeS1jbXMtbGliLXV0aWwnO1xuaW1wb3J0IHsgY29sb3JzLCBjb2xvcnNSYXcsIGNvbXBvbmVudHMsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IFZJRVdfU1RZTEVfTElTVCwgVklFV19TVFlMRV9HUklEIH0gZnJvbSAnQ29uc3RhbnRzL2NvbGxlY3Rpb25WaWV3cyc7XG5cbmNvbnN0IExpc3RDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIHdpZHRoOiAke2xlbmd0aHMudG9wQ2FyZFdpZHRofTtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBMaXN0Q2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIH1cbmA7XG5cbmNvbnN0IEdyaWRDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIGZsZXg6IDAgMCAzMzVweDtcbiAgaGVpZ2h0OiAyNDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBHcmlkQ2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICAmLFxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5mb3JlZ3JvdW5kfTtcbiAgICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIH1cbmA7XG5cbmNvbnN0IENvbGxlY3Rpb25MYWJlbCA9IHN0eWxlZC5oMmBcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuYDtcblxuY29uc3QgTGlzdENhcmRUaXRsZSA9IHN0eWxlZC5oMmBcbiAgbWFyZ2luLWJvdHRvbTogMDtcbmA7XG5cbmNvbnN0IENhcmRIZWFkaW5nID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDAgMCAycHg7XG5gO1xuXG5jb25zdCBDYXJkQm9keSA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgaGVpZ2h0OiA5MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206ICR7cHJvcHMgPT4gcHJvcHMuaGFzSW1hZ2UgJiYgMH07XG5cbiAgJjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IC0yMCU7XG4gICAgaGVpZ2h0OiAxNDAlO1xuICAgIHdpZHRoOiAxNDAlO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTE1cHggMjRweCAke2NvbG9yc1Jhdy53aGl0ZX07XG4gIH1cbmA7XG5cbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke3Byb3BzID0+IHByb3BzLnVybH0pO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBoZWlnaHQ6IDE1MHB4O1xuYDtcblxuY29uc3QgRW50cnlDYXJkID0gKHtcbiAgY29sbGVjdGlvbixcbiAgZW50cnksXG4gIGluZmVyZWRGaWVsZHMsXG4gIHB1YmxpY0ZvbGRlcixcbiAgY29sbGVjdGlvbkxhYmVsLFxuICB2aWV3U3R5bGUgPSBWSUVXX1NUWUxFX0xJU1QsXG59KSA9PiB7XG4gIGNvbnN0IGxhYmVsID0gZW50cnkuZ2V0KCdsYWJlbCcpO1xuICBjb25zdCB0aXRsZSA9IGxhYmVsIHx8IGVudHJ5LmdldEluKFsnZGF0YScsIGluZmVyZWRGaWVsZHMudGl0bGVGaWVsZF0pO1xuICBjb25zdCBwYXRoID0gYC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb24uZ2V0KCduYW1lJyl9L2VudHJpZXMvJHtlbnRyeS5nZXQoJ3NsdWcnKX1gO1xuICBsZXQgaW1hZ2UgPSBlbnRyeS5nZXRJbihbJ2RhdGEnLCBpbmZlcmVkRmllbGRzLmltYWdlRmllbGRdKTtcbiAgaW1hZ2UgPSByZXNvbHZlUGF0aChpbWFnZSwgcHVibGljRm9sZGVyKTtcbiAgaWYgKGltYWdlKSB7XG4gICAgaW1hZ2UgPSBlbmNvZGVVUkkoaW1hZ2UpO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9MSVNUKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxMaXN0Q2FyZD5cbiAgICAgICAgPExpc3RDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAge2NvbGxlY3Rpb25MYWJlbCA/IDxDb2xsZWN0aW9uTGFiZWw+e2NvbGxlY3Rpb25MYWJlbH08L0NvbGxlY3Rpb25MYWJlbD4gOiBudWxsfVxuICAgICAgICAgIDxMaXN0Q2FyZFRpdGxlPnt0aXRsZX08L0xpc3RDYXJkVGl0bGU+XG4gICAgICAgIDwvTGlzdENhcmRMaW5rPlxuICAgICAgPC9MaXN0Q2FyZD5cbiAgICApO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9HUklEKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxHcmlkQ2FyZD5cbiAgICAgICAgPEdyaWRDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAgPENhcmRCb2R5IGhhc0ltYWdlPXtpbWFnZX0+XG4gICAgICAgICAgICB7Y29sbGVjdGlvbkxhYmVsID8gPENvbGxlY3Rpb25MYWJlbD57Y29sbGVjdGlvbkxhYmVsfTwvQ29sbGVjdGlvbkxhYmVsPiA6IG51bGx9XG4gICAgICAgICAgICA8Q2FyZEhlYWRpbmc+e3RpdGxlfTwvQ2FyZEhlYWRpbmc+XG4gICAgICAgICAgPC9DYXJkQm9keT5cbiAgICAgICAgICB7aW1hZ2UgPyA8Q2FyZEltYWdlIHVybD17aW1hZ2V9IC8+IDogbnVsbH1cbiAgICAgICAgPC9HcmlkQ2FyZExpbms+XG4gICAgICA8L0dyaWRDYXJkPlxuICAgICk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVudHJ5Q2FyZDtcbiJdfQ== */"));
const CardImage = (0, _styledBase.default)("div", {
  target: "eab48an8",
  label: "CardImage"
})("background-image:url(", props => props.url, ");background-position:center center;background-size:cover;background-repeat:no-repeat;height:150px;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbGxlY3Rpb24vRW50cmllcy9FbnRyeUNhcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEU0QiIsImZpbGUiOiIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Db2xsZWN0aW9uL0VudHJpZXMvRW50cnlDYXJkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IHJlc29sdmVQYXRoIH0gZnJvbSAnbmV0bGlmeS1jbXMtbGliLXV0aWwnO1xuaW1wb3J0IHsgY29sb3JzLCBjb2xvcnNSYXcsIGNvbXBvbmVudHMsIGxlbmd0aHMgfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcbmltcG9ydCB7IFZJRVdfU1RZTEVfTElTVCwgVklFV19TVFlMRV9HUklEIH0gZnJvbSAnQ29uc3RhbnRzL2NvbGxlY3Rpb25WaWV3cyc7XG5cbmNvbnN0IExpc3RDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIHdpZHRoOiAke2xlbmd0aHMudG9wQ2FyZFdpZHRofTtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBMaXN0Q2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIH1cbmA7XG5cbmNvbnN0IEdyaWRDYXJkID0gc3R5bGVkLmxpYFxuICAke2NvbXBvbmVudHMuY2FyZH07XG4gIGZsZXg6IDAgMCAzMzVweDtcbiAgaGVpZ2h0OiAyNDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuXG5jb25zdCBHcmlkQ2FyZExpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICAmLFxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5mb3JlZ3JvdW5kfTtcbiAgICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIH1cbmA7XG5cbmNvbnN0IENvbGxlY3Rpb25MYWJlbCA9IHN0eWxlZC5oMmBcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuYDtcblxuY29uc3QgTGlzdENhcmRUaXRsZSA9IHN0eWxlZC5oMmBcbiAgbWFyZ2luLWJvdHRvbTogMDtcbmA7XG5cbmNvbnN0IENhcmRIZWFkaW5nID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDAgMCAycHg7XG5gO1xuXG5jb25zdCBDYXJkQm9keSA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmc6IDE2cHggMjJweDtcbiAgaGVpZ2h0OiA5MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206ICR7cHJvcHMgPT4gcHJvcHMuaGFzSW1hZ2UgJiYgMH07XG5cbiAgJjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IC0yMCU7XG4gICAgaGVpZ2h0OiAxNDAlO1xuICAgIHdpZHRoOiAxNDAlO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTE1cHggMjRweCAke2NvbG9yc1Jhdy53aGl0ZX07XG4gIH1cbmA7XG5cbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke3Byb3BzID0+IHByb3BzLnVybH0pO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBoZWlnaHQ6IDE1MHB4O1xuYDtcblxuY29uc3QgRW50cnlDYXJkID0gKHtcbiAgY29sbGVjdGlvbixcbiAgZW50cnksXG4gIGluZmVyZWRGaWVsZHMsXG4gIHB1YmxpY0ZvbGRlcixcbiAgY29sbGVjdGlvbkxhYmVsLFxuICB2aWV3U3R5bGUgPSBWSUVXX1NUWUxFX0xJU1QsXG59KSA9PiB7XG4gIGNvbnN0IGxhYmVsID0gZW50cnkuZ2V0KCdsYWJlbCcpO1xuICBjb25zdCB0aXRsZSA9IGxhYmVsIHx8IGVudHJ5LmdldEluKFsnZGF0YScsIGluZmVyZWRGaWVsZHMudGl0bGVGaWVsZF0pO1xuICBjb25zdCBwYXRoID0gYC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb24uZ2V0KCduYW1lJyl9L2VudHJpZXMvJHtlbnRyeS5nZXQoJ3NsdWcnKX1gO1xuICBsZXQgaW1hZ2UgPSBlbnRyeS5nZXRJbihbJ2RhdGEnLCBpbmZlcmVkRmllbGRzLmltYWdlRmllbGRdKTtcbiAgaW1hZ2UgPSByZXNvbHZlUGF0aChpbWFnZSwgcHVibGljRm9sZGVyKTtcbiAgaWYgKGltYWdlKSB7XG4gICAgaW1hZ2UgPSBlbmNvZGVVUkkoaW1hZ2UpO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9MSVNUKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxMaXN0Q2FyZD5cbiAgICAgICAgPExpc3RDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAge2NvbGxlY3Rpb25MYWJlbCA/IDxDb2xsZWN0aW9uTGFiZWw+e2NvbGxlY3Rpb25MYWJlbH08L0NvbGxlY3Rpb25MYWJlbD4gOiBudWxsfVxuICAgICAgICAgIDxMaXN0Q2FyZFRpdGxlPnt0aXRsZX08L0xpc3RDYXJkVGl0bGU+XG4gICAgICAgIDwvTGlzdENhcmRMaW5rPlxuICAgICAgPC9MaXN0Q2FyZD5cbiAgICApO1xuICB9XG5cbiAgaWYgKHZpZXdTdHlsZSA9PT0gVklFV19TVFlMRV9HUklEKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxHcmlkQ2FyZD5cbiAgICAgICAgPEdyaWRDYXJkTGluayB0bz17cGF0aH0+XG4gICAgICAgICAgPENhcmRCb2R5IGhhc0ltYWdlPXtpbWFnZX0+XG4gICAgICAgICAgICB7Y29sbGVjdGlvbkxhYmVsID8gPENvbGxlY3Rpb25MYWJlbD57Y29sbGVjdGlvbkxhYmVsfTwvQ29sbGVjdGlvbkxhYmVsPiA6IG51bGx9XG4gICAgICAgICAgICA8Q2FyZEhlYWRpbmc+e3RpdGxlfTwvQ2FyZEhlYWRpbmc+XG4gICAgICAgICAgPC9DYXJkQm9keT5cbiAgICAgICAgICB7aW1hZ2UgPyA8Q2FyZEltYWdlIHVybD17aW1hZ2V9IC8+IDogbnVsbH1cbiAgICAgICAgPC9HcmlkQ2FyZExpbms+XG4gICAgICA8L0dyaWRDYXJkPlxuICAgICk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IEVudHJ5Q2FyZDtcbiJdfQ== */"));

const EntryCard = (_ref) => {
  let collection = _ref.collection,
      entry = _ref.entry,
      inferedFields = _ref.inferedFields,
      publicFolder = _ref.publicFolder,
      collectionLabel = _ref.collectionLabel,
      _ref$viewStyle = _ref.viewStyle,
      viewStyle = _ref$viewStyle === void 0 ? _collectionViews.VIEW_STYLE_LIST : _ref$viewStyle;
  const label = entry.get('label');
  const title = label || entry.getIn(['data', inferedFields.titleField]);
  const path = `/collections/${collection.get('name')}/entries/${entry.get('slug')}`;
  let image = entry.getIn(['data', inferedFields.imageField]);
  image = (0, _netlifyCmsLibUtil.resolvePath)(image, publicFolder);

  if (image) {
    image = encodeURI(image);
  }

  if (viewStyle === _collectionViews.VIEW_STYLE_LIST) {
    return _react.default.createElement(ListCard, null, _react.default.createElement(ListCardLink, {
      to: path
    }, collectionLabel ? _react.default.createElement(CollectionLabel, null, collectionLabel) : null, _react.default.createElement(ListCardTitle, null, title)));
  }

  if (viewStyle === _collectionViews.VIEW_STYLE_GRID) {
    return _react.default.createElement(GridCard, null, _react.default.createElement(GridCardLink, {
      to: path
    }, _react.default.createElement(CardBody, {
      hasImage: image
    }, collectionLabel ? _react.default.createElement(CollectionLabel, null, collectionLabel) : null, _react.default.createElement(CardHeading, null, title)), image ? _react.default.createElement(CardImage, {
      url: image
    }) : null));
  }
};

var _default = EntryCard;
exports.default = _default;
//# sourceMappingURL=EntryCard.js.map