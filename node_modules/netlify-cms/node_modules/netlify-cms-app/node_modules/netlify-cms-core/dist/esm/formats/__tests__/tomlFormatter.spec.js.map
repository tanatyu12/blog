{"version":3,"sources":["../../../../src/formats/__tests__/tomlFormatter.spec.js"],"names":["describe","it","expect","tomlFormatter","toFile","testFloat","testInteger","title","toEqual","join"],"mappings":";;AAAA;;;;AAEAA,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC9BC,EAAAA,EAAE,CAAC,oDAAD,EAAuD,MAAM;AAC7DC,IAAAA,MAAM,CAACC,cAAcC,MAAd,CAAqB;AAAEC,MAAAA,SAAS,EAAE,OAAb;AAAsBC,MAAAA,WAAW,EAAE,GAAnC;AAAwCC,MAAAA,KAAK,EAAE;AAA/C,KAArB,CAAD,CAAN,CAAsFC,OAAtF,CACE,CAAC,qBAAD,EAAwB,mBAAxB,EAA6C,gBAA7C,EAA+DC,IAA/D,CAAoE,IAApE,CADF;AAGD,GAJC,CAAF;AAKD,CANO,CAAR","sourcesContent":["import tomlFormatter from '../toml';\n\ndescribe('tomlFormatter', () => {\n  it('should output TOML integer values without decimals', () => {\n    expect(tomlFormatter.toFile({ testFloat: 123.456, testInteger: 789, title: 'TOML' })).toEqual(\n      ['testFloat = 123.456', 'testInteger = 789', 'title = \"TOML\"'].join('\\n'),\n    );\n  });\n});\n"],"file":"tomlFormatter.spec.js"}