{"version":3,"sources":["../../../src/actions/auth.js"],"names":["notifSend","notifActions","AUTH_REQUEST","AUTH_SUCCESS","AUTH_FAILURE","AUTH_REQUEST_DONE","LOGOUT","authenticating","type","authenticate","userData","payload","authError","error","doneAuthenticating","logout","authenticateUser","dispatch","getState","state","backend","config","currentUser","then","user","catch","logoutUser","loginUser","credentials","console","message","details","key","kind","dismissAfter","Promise","resolve"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;MAEQA,S,GAAcC,2B,CAAdD,S;AAED,MAAME,YAAY,GAAG,cAArB;;AACA,MAAMC,YAAY,GAAG,cAArB;;AACA,MAAMC,YAAY,GAAG,cAArB;;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;;AACA,MAAMC,MAAM,GAAG,QAAf;;;AAEA,SAASC,cAAT,GAA0B;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAEN;AADD,GAAP;AAGD;;AAEM,SAASO,YAAT,CAAsBC,QAAtB,EAAgC;AACrC,SAAO;AACLF,IAAAA,IAAI,EAAEL,YADD;AAELQ,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID;;AAEM,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,SAAO;AACLL,IAAAA,IAAI,EAAEJ,YADD;AAELS,IAAAA,KAAK,EAAE,wBAFF;AAGLF,IAAAA,OAAO,EAAEE;AAHJ,GAAP;AAKD;;AAEM,SAASC,kBAAT,GAA8B;AACnC,SAAO;AACLN,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD;;AAEM,SAASU,MAAT,GAAkB;AACvB,SAAO;AACLP,IAAAA,IAAI,EAAEF;AADD,GAAP;AAGD,C,CAED;;;AACO,SAASU,gBAAT,GAA4B;AACjC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,OAAO,GAAG,6BAAeD,KAAK,CAACE,MAArB,CAAhB;AACAJ,IAAAA,QAAQ,CAACV,cAAc,EAAf,CAAR;AACA,WAAOa,OAAO,CACXE,WADI,GAEJC,IAFI,CAECC,IAAI,IAAI;AACZ,UAAIA,IAAJ,EAAU;AACRP,QAAAA,QAAQ,CAACR,YAAY,CAACe,IAAD,CAAb,CAAR;AACD,OAFD,MAEO;AACLP,QAAAA,QAAQ,CAACH,kBAAkB,EAAnB,CAAR;AACD;AACF,KARI,EASJW,KATI,CASEZ,KAAK,IAAI;AACdI,MAAAA,QAAQ,CAACL,SAAS,CAACC,KAAD,CAAV,CAAR;AACAI,MAAAA,QAAQ,CAACS,UAAU,EAAX,CAAR;AACD,KAZI,CAAP;AAaD,GAjBD;AAkBD;;AAEM,SAASC,SAAT,CAAmBC,WAAnB,EAAgC;AACrC,SAAO,CAACX,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,OAAO,GAAG,6BAAeD,KAAK,CAACE,MAArB,CAAhB;AAEAJ,IAAAA,QAAQ,CAACV,cAAc,EAAf,CAAR;AACA,WAAOa,OAAO,CACXX,YADI,CACSmB,WADT,EAEJL,IAFI,CAECC,IAAI,IAAI;AACZP,MAAAA,QAAQ,CAACR,YAAY,CAACe,IAAD,CAAb,CAAR;AACD,KAJI,EAKJC,KALI,CAKEZ,KAAK,IAAI;AACdgB,MAAAA,OAAO,CAAChB,KAAR,CAAcA,KAAd;AACAI,MAAAA,QAAQ,CACNjB,SAAS,CAAC;AACR8B,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAElB,KAAK,CAACiB,OADR;AAEPE,UAAAA,GAAG,EAAE;AAFE,SADD;AAKRC,QAAAA,IAAI,EAAE,SALE;AAMRC,QAAAA,YAAY,EAAE;AANN,OAAD,CADH,CAAR;AAUAjB,MAAAA,QAAQ,CAACL,SAAS,CAACC,KAAD,CAAV,CAAR;AACD,KAlBI,CAAP;AAmBD,GAxBD;AAyBD;;AAEM,SAASa,UAAT,GAAsB;AAC3B,SAAO,CAACT,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,OAAO,GAAG,6BAAeD,KAAK,CAACE,MAArB,CAAhB;AACAc,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,OAAO,CAACL,MAAR,EAAhB,EAAkCQ,IAAlC,CAAuC,MAAM;AAC3CN,MAAAA,QAAQ,CAACF,MAAM,EAAP,CAAR;AACD,KAFD;AAGD,GAND;AAOD","sourcesContent":["import { actions as notifActions } from 'redux-notifications';\nimport { currentBackend } from 'coreSrc/backend';\n\nconst { notifSend } = notifActions;\n\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\nexport const AUTH_REQUEST_DONE = 'AUTH_REQUEST_DONE';\nexport const LOGOUT = 'LOGOUT';\n\nexport function authenticating() {\n  return {\n    type: AUTH_REQUEST,\n  };\n}\n\nexport function authenticate(userData) {\n  return {\n    type: AUTH_SUCCESS,\n    payload: userData,\n  };\n}\n\nexport function authError(error) {\n  return {\n    type: AUTH_FAILURE,\n    error: 'Failed to authenticate',\n    payload: error,\n  };\n}\n\nexport function doneAuthenticating() {\n  return {\n    type: AUTH_REQUEST_DONE,\n  };\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT,\n  };\n}\n\n// Check if user data token is cached and is valid\nexport function authenticateUser() {\n  return (dispatch, getState) => {\n    const state = getState();\n    const backend = currentBackend(state.config);\n    dispatch(authenticating());\n    return backend\n      .currentUser()\n      .then(user => {\n        if (user) {\n          dispatch(authenticate(user));\n        } else {\n          dispatch(doneAuthenticating());\n        }\n      })\n      .catch(error => {\n        dispatch(authError(error));\n        dispatch(logoutUser());\n      });\n  };\n}\n\nexport function loginUser(credentials) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const backend = currentBackend(state.config);\n\n    dispatch(authenticating());\n    return backend\n      .authenticate(credentials)\n      .then(user => {\n        dispatch(authenticate(user));\n      })\n      .catch(error => {\n        console.error(error);\n        dispatch(\n          notifSend({\n            message: {\n              details: error.message,\n              key: 'ui.toast.onFailToAuth',\n            },\n            kind: 'warning',\n            dismissAfter: 8000,\n          }),\n        );\n        dispatch(authError(error));\n      });\n  };\n}\n\nexport function logoutUser() {\n  return (dispatch, getState) => {\n    const state = getState();\n    const backend = currentBackend(state.config);\n    Promise.resolve(backend.logout()).then(() => {\n      dispatch(logout());\n    });\n  };\n}\n"],"file":"auth.js"}