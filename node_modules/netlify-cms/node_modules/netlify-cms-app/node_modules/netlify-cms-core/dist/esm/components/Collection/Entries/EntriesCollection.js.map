{"version":3,"sources":["../../../../../src/components/Collection/Entries/EntriesCollection.js"],"names":["EntriesCollection","React","Component","cursor","action","props","collection","traverseCollectionCursor","componentDidMount","entriesLoaded","loadEntries","componentDidUpdate","prevProps","render","entries","publicFolder","isFetching","viewStyle","get","handleCursorActions","ImmutablePropTypes","map","isRequired","PropTypes","string","list","bool","object","func","mapStateToProps","state","ownProps","config","page","getIn","rawCursor","cursors","Cursor","create","clearData","mapDispatchToProps","actionLoadEntries","actionTraverseCollectionCursor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport { partial } from 'lodash';\nimport { Cursor } from 'netlify-cms-lib-util';\nimport {\n  loadEntries as actionLoadEntries,\n  traverseCollectionCursor as actionTraverseCollectionCursor,\n} from 'Actions/entries';\nimport { selectEntries } from 'Reducers';\nimport { selectCollectionEntriesCursor } from 'Reducers/cursors';\nimport Entries from './Entries';\n\nclass EntriesCollection extends React.Component {\n  static propTypes = {\n    collection: ImmutablePropTypes.map.isRequired,\n    publicFolder: PropTypes.string.isRequired,\n    entries: ImmutablePropTypes.list,\n    isFetching: PropTypes.bool.isRequired,\n    viewStyle: PropTypes.string,\n    cursor: PropTypes.object.isRequired,\n    loadEntries: PropTypes.func.isRequired,\n    traverseCollectionCursor: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    const { collection, entriesLoaded, loadEntries } = this.props;\n    if (collection && !entriesLoaded) {\n      loadEntries(collection);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { collection, entriesLoaded, loadEntries } = this.props;\n    if (collection !== prevProps.collection && !entriesLoaded) {\n      loadEntries(collection);\n    }\n  }\n\n  handleCursorActions = (cursor, action) => {\n    const { collection, traverseCollectionCursor } = this.props;\n    traverseCollectionCursor(collection, action);\n  };\n\n  render() {\n    const { collection, entries, publicFolder, isFetching, viewStyle, cursor } = this.props;\n\n    return (\n      <Entries\n        collections={collection}\n        entries={entries}\n        publicFolder={publicFolder}\n        isFetching={isFetching}\n        collectionName={collection.get('label')}\n        viewStyle={viewStyle}\n        cursor={cursor}\n        handleCursorActions={partial(this.handleCursorActions, cursor)}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const { collection, viewStyle } = ownProps;\n  const { config } = state;\n  const publicFolder = config.get('public_folder');\n  const page = state.entries.getIn(['pages', collection.get('name'), 'page']);\n\n  const entries = selectEntries(state, collection.get('name'));\n  const entriesLoaded = !!state.entries.getIn(['pages', collection.get('name')]);\n  const isFetching = state.entries.getIn(['pages', collection.get('name'), 'isFetching'], false);\n\n  const rawCursor = selectCollectionEntriesCursor(state.cursors, collection.get('name'));\n  const cursor = Cursor.create(rawCursor).clearData();\n\n  return { publicFolder, collection, page, entries, entriesLoaded, isFetching, viewStyle, cursor };\n}\n\nconst mapDispatchToProps = {\n  loadEntries: actionLoadEntries,\n  traverseCollectionCursor: actionTraverseCollectionCursor,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EntriesCollection);\n"],"file":"EntriesCollection.js"}