{"version":3,"sources":["../../../../src/components/Editor/Editor.js"],"names":["navigateCollection","collectionPath","history","push","navigateToCollection","collectionName","navigateToNewEntry","navigateToEntry","slug","Editor","React","Component","entry","collection","props","persistLocalBackup","metadata","createDraftFromEntry","newStatusName","entryDraft","updateUnpublishedEntryStatus","currentStatus","t","get","window","alert","newStatus","status","opts","createNew","persistEntry","hasWorkflow","loadEntry","createEmptyDraft","deleteBackup","publishUnpublishedEntry","last","confirm","newEntry","deleteEntry","setTimeout","deleteUnpublishedEntry","isModification","componentDidMount","loadEntries","retrieveLocalBackup","collectionEntriesLoaded","leaveMessage","exitBlocker","event","returnValue","addEventListener","navigationBlocker","location","action","isPersisting","getIn","newRecord","newEntryPath","pathname","hasChanged","unblock","block","unlisten","listen","entriesPath","startsWith","componentDidUpdate","prevProps","newSlug","localBackup","confirmLoadBackup","loadLocalBackup","createBackup","fields","values","deserializedEntry","set","fieldsMetaData","createDraft","componentWillUnmount","flush","discardDraft","removeEventListener","deleteLocalBackup","cancel","render","boundGetAsset","changeDraftField","changeDraftFieldValidation","user","displayUrl","unpublishedEntry","logoutUser","deployPreview","loadDeployPreview","isPublished","undefined","handlePersistEntry","handleDeleteEntry","handleDeleteUnpublishedChanges","handleChangeStatus","handlePublishEntry","showDelete","PropTypes","func","isRequired","ImmutablePropTypes","map","bool","list","string","shape","mapStateToProps","state","ownProps","collections","auth","config","entries","match","params","name","getAsset","bind","EDITORIAL_WORKFLOW"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport { Loader } from 'netlify-cms-ui-default';\nimport { translate } from 'react-polyglot';\nimport { debounce } from 'lodash';\nimport history from 'Routing/history';\nimport { logoutUser } from 'Actions/auth';\nimport {\n  loadEntry,\n  loadEntries,\n  createDraftFromEntry,\n  createEmptyDraft,\n  discardDraft,\n  changeDraftField,\n  changeDraftFieldValidation,\n  persistEntry,\n  deleteEntry,\n  persistLocalBackup,\n  loadLocalBackup,\n  retrieveLocalBackup,\n  deleteLocalBackup,\n} from 'Actions/entries';\nimport {\n  updateUnpublishedEntryStatus,\n  publishUnpublishedEntry,\n  deleteUnpublishedEntry,\n} from 'Actions/editorialWorkflow';\nimport { loadDeployPreview } from 'Actions/deploys';\nimport { deserializeValues } from 'Lib/serializeEntryValues';\nimport { selectEntry, selectUnpublishedEntry, selectDeployPreview, getAsset } from 'Reducers';\nimport { selectFields } from 'Reducers/collections';\nimport { status, EDITORIAL_WORKFLOW } from 'Constants/publishModes';\nimport EditorInterface from './EditorInterface';\nimport withWorkflow from './withWorkflow';\n\nconst navigateCollection = collectionPath => history.push(`/collections/${collectionPath}`);\nconst navigateToCollection = collectionName => navigateCollection(collectionName);\nconst navigateToNewEntry = collectionName => navigateCollection(`${collectionName}/new`);\nconst navigateToEntry = (collectionName, slug) =>\n  navigateCollection(`${collectionName}/entries/${slug}`);\n\nclass Editor extends React.Component {\n  static propTypes = {\n    boundGetAsset: PropTypes.func.isRequired,\n    changeDraftField: PropTypes.func.isRequired,\n    changeDraftFieldValidation: PropTypes.func.isRequired,\n    collection: ImmutablePropTypes.map.isRequired,\n    createDraftFromEntry: PropTypes.func.isRequired,\n    createEmptyDraft: PropTypes.func.isRequired,\n    discardDraft: PropTypes.func.isRequired,\n    entry: ImmutablePropTypes.map,\n    entryDraft: ImmutablePropTypes.map.isRequired,\n    loadEntry: PropTypes.func.isRequired,\n    persistEntry: PropTypes.func.isRequired,\n    deleteEntry: PropTypes.func.isRequired,\n    showDelete: PropTypes.bool.isRequired,\n    fields: ImmutablePropTypes.list.isRequired,\n    slug: PropTypes.string,\n    newEntry: PropTypes.bool.isRequired,\n    displayUrl: PropTypes.string,\n    hasWorkflow: PropTypes.bool,\n    unpublishedEntry: PropTypes.bool,\n    isModification: PropTypes.bool,\n    collectionEntriesLoaded: PropTypes.bool,\n    updateUnpublishedEntryStatus: PropTypes.func.isRequired,\n    publishUnpublishedEntry: PropTypes.func.isRequired,\n    deleteUnpublishedEntry: PropTypes.func.isRequired,\n    logoutUser: PropTypes.func.isRequired,\n    loadEntries: PropTypes.func.isRequired,\n    deployPreview: ImmutablePropTypes.map,\n    loadDeployPreview: PropTypes.func.isRequired,\n    currentStatus: PropTypes.string,\n    user: ImmutablePropTypes.map.isRequired,\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }),\n    hasChanged: PropTypes.bool,\n    t: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    const {\n      newEntry,\n      collection,\n      slug,\n      loadEntry,\n      createEmptyDraft,\n      loadEntries,\n      retrieveLocalBackup,\n      collectionEntriesLoaded,\n      t,\n    } = this.props;\n\n    retrieveLocalBackup(collection, slug);\n\n    if (newEntry) {\n      createEmptyDraft(collection);\n    } else {\n      loadEntry(collection, slug);\n    }\n\n    const leaveMessage = t('editor.editor.onLeavePage');\n\n    this.exitBlocker = event => {\n      if (this.props.entryDraft.get('hasChanged')) {\n        // This message is ignored in most browsers, but its presence\n        // triggers the confirmation dialog\n        event.returnValue = leaveMessage;\n        return leaveMessage;\n      }\n    };\n    window.addEventListener('beforeunload', this.exitBlocker);\n\n    const navigationBlocker = (location, action) => {\n      /**\n       * New entry being saved and redirected to it's new slug based url.\n       */\n      const isPersisting = this.props.entryDraft.getIn(['entry', 'isPersisting']);\n      const newRecord = this.props.entryDraft.getIn(['entry', 'newRecord']);\n      const newEntryPath = `/collections/${collection.get('name')}/new`;\n      if (\n        isPersisting &&\n        newRecord &&\n        this.props.location.pathname === newEntryPath &&\n        action === 'PUSH'\n      ) {\n        return;\n      }\n\n      if (this.props.hasChanged) {\n        return leaveMessage;\n      }\n    };\n\n    const unblock = history.block(navigationBlocker);\n\n    /**\n     * This will run as soon as the location actually changes, unless creating\n     * a new post. The confirmation above will run first.\n     */\n    this.unlisten = history.listen((location, action) => {\n      const newEntryPath = `/collections/${collection.get('name')}/new`;\n      const entriesPath = `/collections/${collection.get('name')}/entries/`;\n      const { pathname } = location;\n      if (\n        pathname.startsWith(newEntryPath) ||\n        (pathname.startsWith(entriesPath) && action === 'PUSH')\n      ) {\n        return;\n      }\n\n      this.deleteBackup();\n\n      unblock();\n      this.unlisten();\n    });\n\n    if (!collectionEntriesLoaded) {\n      loadEntries(collection);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    /**\n     * If the old slug is empty and the new slug is not, a new entry was just\n     * saved, and we need to update navigation to the correct url using the\n     * slug.\n     */\n    const newSlug = this.props.entryDraft && this.props.entryDraft.getIn(['entry', 'slug']);\n    if (!prevProps.slug && newSlug && this.props.newEntry) {\n      navigateToEntry(prevProps.collection.get('name'), newSlug);\n      this.props.loadEntry(this.props.collection, newSlug);\n    }\n\n    if (!prevProps.localBackup && this.props.localBackup) {\n      const confirmLoadBackup = window.confirm(this.props.t('editor.editor.confirmLoadBackup'));\n      if (confirmLoadBackup) {\n        this.props.loadLocalBackup();\n      } else {\n        this.deleteBackup();\n      }\n    }\n\n    if (this.props.hasChanged) {\n      this.createBackup(this.props.entryDraft.get('entry'), this.props.collection);\n    }\n\n    if (prevProps.entry === this.props.entry) return;\n\n    const { entry, newEntry, fields, collection } = this.props;\n\n    if (entry && !entry.get('isFetching') && !entry.get('error')) {\n      /**\n       * Deserialize entry values for widgets with registered serializers before\n       * creating the entry draft.\n       */\n      const values = deserializeValues(entry.get('data'), fields);\n      const deserializedEntry = entry.set('data', values);\n      const fieldsMetaData = this.props.entryDraft && this.props.entryDraft.get('fieldsMetaData');\n      this.createDraft(deserializedEntry, fieldsMetaData);\n    } else if (newEntry) {\n      prevProps.createEmptyDraft(collection);\n    }\n  }\n\n  componentWillUnmount() {\n    this.createBackup.flush();\n    this.props.discardDraft();\n    window.removeEventListener('beforeunload', this.exitBlocker);\n  }\n\n  createBackup = debounce(function(entry, collection) {\n    this.props.persistLocalBackup(entry, collection);\n  }, 2000);\n\n  createDraft = (entry, metadata) => {\n    if (entry) this.props.createDraftFromEntry(entry, metadata);\n  };\n\n  handleChangeStatus = newStatusName => {\n    const {\n      entryDraft,\n      updateUnpublishedEntryStatus,\n      collection,\n      slug,\n      currentStatus,\n      t,\n    } = this.props;\n    if (entryDraft.get('hasChanged')) {\n      window.alert(t('editor.editor.onUpdatingWithUnsavedChanges'));\n      return;\n    }\n    const newStatus = status.get(newStatusName);\n    updateUnpublishedEntryStatus(collection.get('name'), slug, currentStatus, newStatus);\n  };\n\n  deleteBackup() {\n    const { deleteLocalBackup, collection, slug } = this.props;\n    this.createBackup.cancel();\n    deleteLocalBackup(collection, slug);\n  }\n\n  handlePersistEntry = async (opts = {}) => {\n    const { createNew = false } = opts;\n    const {\n      persistEntry,\n      collection,\n      currentStatus,\n      hasWorkflow,\n      loadEntry,\n      slug,\n      createEmptyDraft,\n    } = this.props;\n\n    await persistEntry(collection);\n\n    this.deleteBackup(collection, slug);\n\n    if (createNew) {\n      navigateToNewEntry(collection.get('name'));\n      createEmptyDraft(collection);\n    } else if (slug && hasWorkflow && !currentStatus) {\n      loadEntry(collection, slug);\n    }\n  };\n\n  handlePublishEntry = async (opts = {}) => {\n    const { createNew = false } = opts;\n    const { publishUnpublishedEntry, entryDraft, collection, slug, currentStatus, t } = this.props;\n    if (currentStatus !== status.last()) {\n      window.alert(t('editor.editor.onPublishingNotReady'));\n      return;\n    } else if (entryDraft.get('hasChanged')) {\n      window.alert(t('editor.editor.onPublishingWithUnsavedChanges'));\n      return;\n    } else if (!window.confirm(t('editor.editor.onPublishing'))) {\n      return;\n    }\n\n    await publishUnpublishedEntry(collection.get('name'), slug);\n\n    this.deleteBackup();\n\n    if (createNew) {\n      navigateToNewEntry(collection.get('name'));\n    }\n  };\n\n  handleDeleteEntry = () => {\n    const { entryDraft, newEntry, collection, deleteEntry, slug, t } = this.props;\n    if (entryDraft.get('hasChanged')) {\n      if (!window.confirm(t('editor.editor.onDeleteWithUnsavedChanges'))) {\n        return;\n      }\n    } else if (!window.confirm(t('editor.editor.onDeletePublishedEntry'))) {\n      return;\n    }\n    if (newEntry) {\n      return navigateToCollection(collection.get('name'));\n    }\n\n    setTimeout(async () => {\n      await deleteEntry(collection, slug);\n      this.deleteBackup();\n      return navigateToCollection(collection.get('name'));\n    }, 0);\n  };\n\n  handleDeleteUnpublishedChanges = async () => {\n    const {\n      entryDraft,\n      collection,\n      slug,\n      deleteUnpublishedEntry,\n      loadEntry,\n      isModification,\n      t,\n    } = this.props;\n    if (\n      entryDraft.get('hasChanged') &&\n      !window.confirm(t('editor.editor.onDeleteUnpublishedChangesWithUnsavedChanges'))\n    ) {\n      return;\n    } else if (!window.confirm(t('editor.editor.onDeleteUnpublishedChanges'))) {\n      return;\n    }\n    await deleteUnpublishedEntry(collection.get('name'), slug);\n\n    this.deleteBackup();\n\n    if (isModification) {\n      loadEntry(collection, slug);\n    } else {\n      navigateToCollection(collection.get('name'));\n    }\n  };\n\n  render() {\n    const {\n      entry,\n      entryDraft,\n      fields,\n      boundGetAsset,\n      collection,\n      changeDraftField,\n      changeDraftFieldValidation,\n      user,\n      hasChanged,\n      displayUrl,\n      hasWorkflow,\n      unpublishedEntry,\n      newEntry,\n      isModification,\n      currentStatus,\n      logoutUser,\n      deployPreview,\n      loadDeployPreview,\n      slug,\n      t,\n    } = this.props;\n\n    const isPublished = !newEntry && !unpublishedEntry;\n\n    if (entry && entry.get('error')) {\n      return (\n        <div>\n          <h3>{entry.get('error')}</h3>\n        </div>\n      );\n    } else if (\n      entryDraft == null ||\n      entryDraft.get('entry') === undefined ||\n      (entry && entry.get('isFetching'))\n    ) {\n      return <Loader active>{t('editor.editor.loadingEntry')}</Loader>;\n    }\n\n    return (\n      <EditorInterface\n        entry={entryDraft.get('entry')}\n        getAsset={boundGetAsset}\n        collection={collection}\n        fields={fields}\n        fieldsMetaData={entryDraft.get('fieldsMetaData')}\n        fieldsErrors={entryDraft.get('fieldsErrors')}\n        onChange={changeDraftField}\n        onValidate={changeDraftFieldValidation}\n        onPersist={this.handlePersistEntry}\n        onDelete={this.handleDeleteEntry}\n        onDeleteUnpublishedChanges={this.handleDeleteUnpublishedChanges}\n        onChangeStatus={this.handleChangeStatus}\n        onPublish={this.handlePublishEntry}\n        showDelete={this.props.showDelete}\n        user={user}\n        hasChanged={hasChanged}\n        displayUrl={displayUrl}\n        hasWorkflow={hasWorkflow}\n        hasUnpublishedChanges={unpublishedEntry}\n        isNewEntry={newEntry}\n        isModification={isModification}\n        currentStatus={currentStatus}\n        onLogoutClick={logoutUser}\n        deployPreview={deployPreview}\n        loadDeployPreview={opts => loadDeployPreview(collection, slug, entry, isPublished, opts)}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const { collections, entryDraft, auth, config, entries } = state;\n  const slug = ownProps.match.params.slug;\n  const collection = collections.get(ownProps.match.params.name);\n  const collectionName = collection.get('name');\n  const newEntry = ownProps.newRecord === true;\n  const fields = selectFields(collection, slug);\n  const entry = newEntry ? null : selectEntry(state, collectionName, slug);\n  const boundGetAsset = getAsset.bind(null, state);\n  const user = auth && auth.get('user');\n  const hasChanged = entryDraft.get('hasChanged');\n  const displayUrl = config.get('display_url');\n  const hasWorkflow = config.get('publish_mode') === EDITORIAL_WORKFLOW;\n  const isModification = entryDraft.getIn(['entry', 'isModification']);\n  const collectionEntriesLoaded = !!entries.getIn(['pages', collectionName]);\n  const unpublishedEntry = selectUnpublishedEntry(state, collectionName, slug);\n  const currentStatus = unpublishedEntry && unpublishedEntry.getIn(['metaData', 'status']);\n  const deployPreview = selectDeployPreview(state, collectionName, slug);\n  const localBackup = entryDraft.get('localBackup');\n  return {\n    collection,\n    collections,\n    newEntry,\n    entryDraft,\n    boundGetAsset,\n    fields,\n    slug,\n    entry,\n    user,\n    hasChanged,\n    displayUrl,\n    hasWorkflow,\n    isModification,\n    collectionEntriesLoaded,\n    currentStatus,\n    deployPreview,\n    localBackup,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeDraftField,\n    changeDraftFieldValidation,\n    loadEntry,\n    loadEntries,\n    loadDeployPreview,\n    loadLocalBackup,\n    retrieveLocalBackup,\n    persistLocalBackup,\n    deleteLocalBackup,\n    createDraftFromEntry,\n    createEmptyDraft,\n    discardDraft,\n    persistEntry,\n    deleteEntry,\n    updateUnpublishedEntryStatus,\n    publishUnpublishedEntry,\n    deleteUnpublishedEntry,\n    logoutUser,\n  },\n)(withWorkflow(translate()(Editor)));\n"],"file":"Editor.js"}