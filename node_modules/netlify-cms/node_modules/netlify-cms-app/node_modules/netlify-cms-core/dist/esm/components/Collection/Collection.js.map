{"version":3,"sources":["../../../../src/components/Collection/Collection.js"],"names":["CollectionContainer","lengths","pageMargin","CollectionMain","Collection","React","Component","viewStyle","VIEW_STYLE_LIST","collection","props","state","searchTerm","collections","setState","render","collectionName","isSearchResults","newEntryUrl","get","handleChangeViewStyle","renderEntriesSearch","renderEntriesCollection","PropTypes","string","bool","ImmutablePropTypes","map","isRequired","orderedMap","mapStateToProps","ownProps","match","params","name","first"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport styled from '@emotion/styled';\nimport { connect } from 'react-redux';\nimport { lengths } from 'netlify-cms-ui-default';\nimport { getNewEntryUrl } from 'Lib/urlHelper';\nimport Sidebar from './Sidebar';\nimport CollectionTop from './CollectionTop';\nimport EntriesCollection from './Entries/EntriesCollection';\nimport EntriesSearch from './Entries/EntriesSearch';\nimport { VIEW_STYLE_LIST } from 'Constants/collectionViews';\n\nconst CollectionContainer = styled.div`\n  margin: ${lengths.pageMargin};\n`;\n\nconst CollectionMain = styled.main`\n  padding-left: 280px;\n`;\n\nclass Collection extends React.Component {\n  static propTypes = {\n    searchTerm: PropTypes.string,\n    collectionName: PropTypes.string,\n    isSearchResults: PropTypes.bool,\n    collection: ImmutablePropTypes.map.isRequired,\n    collections: ImmutablePropTypes.orderedMap.isRequired,\n  };\n\n  state = {\n    viewStyle: VIEW_STYLE_LIST,\n  };\n\n  renderEntriesCollection = () => {\n    const { collection } = this.props;\n    return <EntriesCollection collection={collection} viewStyle={this.state.viewStyle} />;\n  };\n\n  renderEntriesSearch = () => {\n    const { searchTerm, collections } = this.props;\n    return <EntriesSearch collections={collections} searchTerm={searchTerm} />;\n  };\n\n  handleChangeViewStyle = viewStyle => {\n    if (this.state.viewStyle !== viewStyle) {\n      this.setState({ viewStyle });\n    }\n  };\n\n  render() {\n    const { collection, collections, collectionName, isSearchResults, searchTerm } = this.props;\n    const newEntryUrl = collection.get('create') ? getNewEntryUrl(collectionName) : '';\n    return (\n      <CollectionContainer>\n        <Sidebar collections={collections} searchTerm={searchTerm} />\n        <CollectionMain>\n          {isSearchResults ? null : (\n            <CollectionTop\n              collectionLabel={collection.get('label')}\n              collectionLabelSingular={collection.get('label_singular')}\n              collectionDescription={collection.get('description')}\n              newEntryUrl={newEntryUrl}\n              viewStyle={this.state.viewStyle}\n              onChangeViewStyle={this.handleChangeViewStyle}\n            />\n          )}\n          {isSearchResults ? this.renderEntriesSearch() : this.renderEntriesCollection()}\n        </CollectionMain>\n      </CollectionContainer>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const { collections } = state;\n  const { isSearchResults, match } = ownProps;\n  const { name, searchTerm } = match.params;\n  const collection = name ? collections.get(name) : collections.first();\n  return { collection, collections, collectionName: name, isSearchResults, searchTerm };\n}\n\nexport default connect(mapStateToProps)(Collection);\n"],"file":"Collection.js"}