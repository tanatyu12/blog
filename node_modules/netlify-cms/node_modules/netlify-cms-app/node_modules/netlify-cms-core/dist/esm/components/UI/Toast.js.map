{"version":3,"sources":["../../../../src/components/UI/Toast.js"],"names":["ReduxNotificationsGlobalStyles","css","reduxNotificationsStyles","styles","toast","shadows","drop","colors","background","textLight","lengths","borderRadius","info","infoBackground","infoText","success","successBackground","successText","warning","warnBackground","warnText","danger","errorBackground","errorText","Toast","kind","message","t","key","details","propTypes","PropTypes","oneOf","isRequired","object","func"],"mappings":";;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAPA;AACA;AAQA,MAAMA,8BAA8B,GAAG,MACrC,eAAC,YAAD;AACE,EAAA,MAAM;AAAA;AAAA,MAAEC,SAAF,EACFC,eADE;AADR,EADF;;AAaA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK;AAAA;AAAA,MAAEH,SAAF,EACDI,6BAAQC,IADP,wBAEiBC,4BAAOC,UAFxB,aAGMD,4BAAOE,SAHb,qBAIcC,6BAAQC,YAJtB,kkFADQ;AAUbC,EAAAA,IAAI;AAAA;AAAA,MAAEX,SAAF,uBACkBM,4BAAOM,cADzB,aAEON,4BAAOO,QAFd,whFAVS;AAcbC,EAAAA,OAAO;AAAA;AAAA,MAAEd,SAAF,uBACeM,4BAAOS,iBADtB,aAEIT,4BAAOU,WAFX,2hFAdM;AAkBbC,EAAAA,OAAO;AAAA;AAAA,MAAEjB,SAAF,uBACeM,4BAAOY,cADtB,aAEIZ,4BAAOa,QAFX,2hFAlBM;AAsBbC,EAAAA,MAAM;AAAA;AAAA,MAAEpB,SAAF,uBACgBM,4BAAOe,eADvB,aAEKf,4BAAOgB,SAFZ;AAtBO,CAAf;;AA4BA,MAAMC,KAAK,GAAG;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,OAAT,QAASA,OAAT;AAAA,MAAkBC,CAAlB,QAAkBA,CAAlB;AAAA,SACZ;AAAK,IAAA,GAAG;AAAA;AAAA,uBAAE,CAACxB,MAAM,CAACC,KAAR,EAAeD,MAAM,CAACsB,IAAD,CAArB,CAAF;AAAR,KACE,eAAC,8BAAD,OADF,EAEGE,CAAC,CAACD,OAAO,CAACE,GAAT,EAAc;AAAEC,IAAAA,OAAO,EAAEH,OAAO,CAACG;AAAnB,GAAd,CAFJ,CADY;AAAA,CAAd;;AAOAL,KAAK,CAACM,SAAN,GAAkB;AAChBL,EAAAA,IAAI,EAAEM,mBAAUC,KAAV,CAAgB,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,EAA+B,QAA/B,CAAhB,EAA0DC,UADhD;AAEhBP,EAAAA,OAAO,EAAEK,mBAAUG,MAFH;AAGhBP,EAAAA,CAAC,EAAEI,mBAAUI,IAAV,CAAeF;AAHF,CAAlB;;eAMe,gCAAYT,KAAZ,C","sourcesContent":["/** @jsx jsx */\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx, css, Global } from '@emotion/core';\nimport { translate } from 'react-polyglot';\nimport reduxNotificationsStyles from 'redux-notifications/lib/styles.css';\nimport { shadows, colors, lengths } from 'netlify-cms-ui-default';\n\nconst ReduxNotificationsGlobalStyles = () => (\n  <Global\n    styles={css`\n      ${reduxNotificationsStyles};\n\n      .notif__container {\n        z-index: 10000;\n        white-space: pre-wrap;\n      }\n    `}\n  />\n);\n\nconst styles = {\n  toast: css`\n    ${shadows.drop};\n    background-color: ${colors.background};\n    color: ${colors.textLight};\n    border-radius: ${lengths.borderRadius};\n    margin: 10px;\n    padding: 20px;\n    overflow: hidden;\n  `,\n  info: css`\n    background-color: ${colors.infoBackground};\n    color: ${colors.infoText};\n  `,\n  success: css`\n    background-color: ${colors.successBackground};\n    color: ${colors.successText};\n  `,\n  warning: css`\n    background-color: ${colors.warnBackground};\n    color: ${colors.warnText};\n  `,\n  danger: css`\n    background-color: ${colors.errorBackground};\n    color: ${colors.errorText};\n  `,\n};\n\nconst Toast = ({ kind, message, t }) => (\n  <div css={[styles.toast, styles[kind]]}>\n    <ReduxNotificationsGlobalStyles />\n    {t(message.key, { details: message.details })}\n  </div>\n);\n\nToast.propTypes = {\n  kind: PropTypes.oneOf(['info', 'success', 'warning', 'danger']).isRequired,\n  message: PropTypes.object,\n  t: PropTypes.func.isRequired,\n};\n\nexport default translate()(Toast);\n"],"file":"Toast.js"}