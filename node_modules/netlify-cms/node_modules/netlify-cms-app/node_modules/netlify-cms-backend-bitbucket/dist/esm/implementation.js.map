{"version":3,"sources":["../../src/implementation.js"],"names":["MAX_CONCURRENT_DOWNLOADS","BitbucketBackend","constructor","config","options","req","token","refreshedTokenPromise","unsentRequest","withHeaders","Authorization","performRequest","res","status","json","catch","type","test","error","message","newToken","getRefreshedAccessToken","reqWithNewToken","files","sem","promises","forEach","file","push","Promise","resolve","take","api","readFile","path","id","then","data","leave","console","all","loadedEntries","filter","loadedEntry","proxied","API","updateUserCredentials","useWorkflow","Error","getIn","repo","branch","api_root","base_url","get","site_id","authComponent","AuthenticationPage","setUser","user","requestFunction","apiRequestFunction","restoreUser","authenticate","state","refreshToken","refresh_token","isCollab","hasWriteAccess","stripIndent","auth","cfg","authenticator","NetlifyAuthenticator","refresh","provider","undefined","logout","getToken","entriesByFolder","collection","extension","listPromise","listFiles","entries","fetchFiles","cursor","CURSOR_COMPATIBILITY_SYMBOL","allEntriesByFolder","listAllFiles","entriesByFiles","map","collectionFile","label","getEntry","slug","getMedia","name","displayURL","getMediaDisplayURL","_mediaDisplayURLSem","reject","parseText","blob","URL","createObjectURL","finally","persistEntry","entry","mediaFiles","persistFiles","persistMedia","mediaFile","value","fileObj","size","deleteFile","commitMessage","traverseCursor","action","newCursor"],"mappings":"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","sourcesContent":["import semaphore from 'semaphore';\nimport { flow, trimStart } from 'lodash';\nimport { stripIndent } from 'common-tags';\nimport {\n  CURSOR_COMPATIBILITY_SYMBOL,\n  filterByPropExtension,\n  resolvePromiseProperties,\n  then,\n  unsentRequest,\n} from 'netlify-cms-lib-util';\nimport { NetlifyAuthenticator } from 'netlify-cms-lib-auth';\nimport AuthenticationPage from './AuthenticationPage';\nimport API from './API';\n\nconst MAX_CONCURRENT_DOWNLOADS = 10;\n\n// Implementation wrapper class\nexport default class BitbucketBackend {\n  constructor(config, options = {}) {\n    this.config = config;\n    this.options = {\n      proxied: false,\n      API: null,\n      updateUserCredentials: async () => null,\n      ...options,\n    };\n\n    if (this.options.useWorkflow) {\n      throw new Error('The BitBucket backend does not support the Editorial Workflow.');\n    }\n\n    if (!this.options.proxied && !config.getIn(['backend', 'repo'], false)) {\n      throw new Error('The BitBucket backend needs a \"repo\" in the backend configuration.');\n    }\n\n    this.api = this.options.API || null;\n\n    this.updateUserCredentials = this.options.updateUserCredentials;\n\n    this.repo = config.getIn(['backend', 'repo'], '');\n    this.branch = config.getIn(['backend', 'branch'], 'master');\n    this.api_root = config.getIn(['backend', 'api_root'], 'https://api.bitbucket.org/2.0');\n    this.base_url = config.get('base_url');\n    this.site_id = config.get('site_id');\n    this.token = '';\n  }\n\n  authComponent() {\n    return AuthenticationPage;\n  }\n\n  setUser(user) {\n    this.token = user.token;\n    this.api = new API({\n      requestFunction: this.apiRequestFunction,\n      branch: this.branch,\n      repo: this.repo,\n    });\n  }\n\n  restoreUser(user) {\n    return this.authenticate(user);\n  }\n\n  async authenticate(state) {\n    this.token = state.token;\n    this.refreshToken = state.refresh_token;\n    this.api = new API({\n      requestFunction: this.apiRequestFunction,\n      branch: this.branch,\n      repo: this.repo,\n      api_root: this.api_root,\n    });\n\n    const user = await this.api.user();\n    const isCollab = await this.api.hasWriteAccess(user).catch(error => {\n      error.message = stripIndent`\n        Repo \"${this.repo}\" not found.\n\n        Please ensure the repo information is spelled correctly.\n\n        If the repo is private, make sure you're logged into a Bitbucket account with access.\n      `;\n      throw error;\n    });\n\n    // Unauthorized user\n    if (!isCollab) {\n      throw new Error('Your BitBucket user account does not have access to this repo.');\n    }\n\n    // Autorized user\n    return { ...user, token: state.token, refresh_token: state.refresh_token };\n  }\n\n  getRefreshedAccessToken() {\n    if (this.refreshedTokenPromise) {\n      return this.refreshedTokenPromise;\n    }\n\n    // instantiating a new Authenticator on each refresh isn't ideal,\n    if (!this.auth) {\n      const cfg = {\n        base_url: this.base_url,\n        site_id: this.site_id,\n      };\n      this.authenticator = new NetlifyAuthenticator(cfg);\n    }\n\n    this.refreshedTokenPromise = this.authenticator\n      .refresh({ provider: 'bitbucket', refresh_token: this.refreshToken })\n      .then(({ token, refresh_token }) => {\n        this.token = token;\n        this.refreshToken = refresh_token;\n        this.refreshedTokenPromise = undefined;\n        this.updateUserCredentials({ token, refresh_token });\n        return token;\n      });\n\n    return this.refreshedTokenPromise;\n  }\n\n  logout() {\n    this.token = null;\n    return;\n  }\n\n  getToken() {\n    if (this.refreshedTokenPromise) {\n      return this.refreshedTokenPromise;\n    }\n\n    return Promise.resolve(this.token);\n  }\n\n  apiRequestFunction = async req => {\n    const token = this.refreshedTokenPromise ? await this.refreshedTokenPromise : this.token;\n    return flow([\n      unsentRequest.withHeaders({ Authorization: `Bearer ${token}` }),\n      unsentRequest.performRequest,\n      then(async res => {\n        if (res.status === 401) {\n          const json = await res.json().catch(() => null);\n          if (json && json.type === 'error' && /^access token expired/i.test(json.error.message)) {\n            const newToken = await this.getRefreshedAccessToken();\n            const reqWithNewToken = unsentRequest.withHeaders(\n              { Authorization: `Bearer ${newToken}` },\n              req,\n            );\n            return unsentRequest.performRequest(reqWithNewToken);\n          }\n        }\n        return res;\n      }),\n    ])(req);\n  };\n\n  entriesByFolder(collection, extension) {\n    const listPromise = this.api.listFiles(collection.get('folder'));\n    return resolvePromiseProperties({\n      files: listPromise\n        .then(({ entries }) => entries)\n        .then(filterByPropExtension(extension, 'path'))\n        .then(this.fetchFiles),\n      cursor: listPromise.then(({ cursor }) => cursor),\n    }).then(({ files, cursor }) => {\n      files[CURSOR_COMPATIBILITY_SYMBOL] = cursor;\n      return files;\n    });\n  }\n\n  allEntriesByFolder(collection, extension) {\n    return this.api\n      .listAllFiles(collection.get('folder'))\n      .then(filterByPropExtension(extension, 'path'))\n      .then(this.fetchFiles);\n  }\n\n  entriesByFiles(collection) {\n    const files = collection.get('files').map(collectionFile => ({\n      path: collectionFile.get('file'),\n      label: collectionFile.get('label'),\n    }));\n    return this.fetchFiles(files);\n  }\n\n  fetchFiles = files => {\n    const sem = semaphore(MAX_CONCURRENT_DOWNLOADS);\n    const promises = [];\n    files.forEach(file => {\n      promises.push(\n        new Promise(resolve =>\n          sem.take(() =>\n            this.api\n              .readFile(file.path, file.id)\n              .then(data => {\n                resolve({ file, data });\n                sem.leave();\n              })\n              .catch((error = true) => {\n                sem.leave();\n                console.error(`failed to load file from BitBucket: ${file.path}`);\n                resolve({ error });\n              }),\n          ),\n        ),\n      );\n    });\n    return Promise.all(promises).then(loadedEntries =>\n      loadedEntries.filter(loadedEntry => !loadedEntry.error),\n    );\n  };\n\n  getEntry(collection, slug, path) {\n    return this.api.readFile(path).then(data => ({\n      file: { path },\n      data,\n    }));\n  }\n\n  getMedia() {\n    return this.api\n      .listAllFiles(this.config.get('media_folder'))\n      .then(files =>\n        files.map(({ id, name, path }) => ({ id, name, path, displayURL: { id, path } })),\n      );\n  }\n\n  getMediaDisplayURL(displayURL) {\n    this._mediaDisplayURLSem = this._mediaDisplayURLSem || semaphore(MAX_CONCURRENT_DOWNLOADS);\n    const { id, path } = displayURL;\n    return new Promise((resolve, reject) =>\n      this._mediaDisplayURLSem.take(() =>\n        this.api\n          .readFile(path, id, { parseText: false })\n          .then(blob => URL.createObjectURL(blob))\n          .then(resolve, reject)\n          .finally(() => this._mediaDisplayURLSem.leave()),\n      ),\n    );\n  }\n\n  persistEntry(entry, mediaFiles, options = {}) {\n    return this.api.persistFiles([entry], options);\n  }\n\n  async persistMedia(mediaFile, options = {}) {\n    await this.api.persistFiles([mediaFile], options);\n    const { value, path, fileObj } = mediaFile;\n    return { name: value, size: fileObj.size, path: trimStart(path, '/k') };\n  }\n\n  deleteFile(path, commitMessage, options) {\n    return this.api.deleteFile(path, commitMessage, options);\n  }\n\n  traverseCursor(cursor, action) {\n    return this.api.traverseCursor(cursor, action).then(async ({ entries, cursor: newCursor }) => ({\n      entries: await Promise.all(\n        entries.map(file => this.api.readFile(file.path, file.id).then(data => ({ file, data }))),\n      ),\n      cursor: newCursor,\n    }));\n  }\n}\n"],"file":"implementation.js"}