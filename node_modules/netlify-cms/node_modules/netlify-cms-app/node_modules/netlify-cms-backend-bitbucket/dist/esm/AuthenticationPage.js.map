{"version":3,"sources":["../../src/AuthenticationPage.js"],"names":["LoginButtonIcon","Icon","BitbucketAuthenticationPage","React","Component","e","preventDefault","cfg","base_url","props","site_id","document","location","host","split","siteId","auth_endpoint","authEndpoint","auth","NetlifyAuthenticator","authenticate","provider","scope","err","data","setState","loginError","toString","onLogin","render","inProgress","config","handleLogin","state","get","PropTypes","func","isRequired","bool","string","ImmutablePropTypes","map"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAEA,MAAMA,eAAe,GAAG;AAAA;AAAA,wBAAOC,yBAAP;AAAA;AAAA;AAAA,EAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAArB;;AAIe,MAAMC,2BAAN,SAA0CC,eAAMC,SAAhD,CAA0D;AAAA;AAAA;;AAAA,mCAU/D,EAV+D;;AAAA,yCAYzDC,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,GAAG,GAAG;AACVC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QADX;AAEVE,QAAAA,OAAO,EACLC,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,MAAyC,WAAzC,GACI,iBADJ,GAEI,KAAKL,KAAL,CAAWM,MALP;AAMVC,QAAAA,aAAa,EAAE,KAAKP,KAAL,CAAWQ;AANhB,OAAZ;AAQA,YAAMC,IAAI,GAAG,IAAIC,uCAAJ,CAAyBZ,GAAzB,CAAb;AAEAW,MAAAA,IAAI,CAACE,YAAL,CAAkB;AAAEC,QAAAA,QAAQ,EAAE,WAAZ;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAAlB,EAA4D,CAACC,GAAD,EAAMC,IAAN,KAAe;AACzE,YAAID,GAAJ,EAAS;AACP,eAAKE,QAAL,CAAc;AAAEC,YAAAA,UAAU,EAAEH,GAAG,CAACI,QAAJ;AAAd,WAAd;AACA;AACD;;AACD,aAAKlB,KAAL,CAAWmB,OAAX,CAAmBJ,IAAnB;AACD,OAND;AAOD,KA/BsE;AAAA;;AAiCvEK,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKpB,KAD7B;AAAA,UACCqB,UADD,eACCA,UADD;AAAA,UACaC,MADb,eACaA,MADb;AAGP,WACE,6BAAC,uCAAD;AACE,MAAA,OAAO,EAAE,KAAKC,WADhB;AAEE,MAAA,aAAa,EAAEF,UAFjB;AAGE,MAAA,iBAAiB,EAAE,KAAKG,KAAL,CAAWP,UAHhC;AAIE,MAAA,OAAO,EAAEK,MAAM,CAACG,GAAP,CAAW,UAAX,CAJX;AAKE,MAAA,mBAAmB,EAAE,MACnB,6BAAC,cAAD,CAAO,QAAP,QACE,6BAAC,eAAD;AAAiB,QAAA,IAAI,EAAC;AAAtB,QADF,EAEGJ,UAAU,GAAG,eAAH,GAAqB,sBAFlC;AANJ,MADF;AAcD;;AAlDsE;;;;gBAApD5B,2B,eACA;AACjB0B,EAAAA,OAAO,EAAEO,mBAAUC,IAAV,CAAeC,UADP;AAEjBP,EAAAA,UAAU,EAAEK,mBAAUG,IAFL;AAGjB9B,EAAAA,QAAQ,EAAE2B,mBAAUI,MAHH;AAIjBxB,EAAAA,MAAM,EAAEoB,mBAAUI,MAJD;AAKjBtB,EAAAA,YAAY,EAAEkB,mBAAUI,MALP;AAMjBR,EAAAA,MAAM,EAAES,iCAAmBC;AANV,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport styled from '@emotion/styled';\nimport { NetlifyAuthenticator } from 'netlify-cms-lib-auth';\nimport { AuthenticationPage, Icon } from 'netlify-cms-ui-default';\n\nconst LoginButtonIcon = styled(Icon)`\n  margin-right: 18px;\n`;\n\nexport default class BitbucketAuthenticationPage extends React.Component {\n  static propTypes = {\n    onLogin: PropTypes.func.isRequired,\n    inProgress: PropTypes.bool,\n    base_url: PropTypes.string,\n    siteId: PropTypes.string,\n    authEndpoint: PropTypes.string,\n    config: ImmutablePropTypes.map,\n  };\n\n  state = {};\n\n  handleLogin = e => {\n    e.preventDefault();\n    const cfg = {\n      base_url: this.props.base_url,\n      site_id:\n        document.location.host.split(':')[0] === 'localhost'\n          ? 'cms.netlify.com'\n          : this.props.siteId,\n      auth_endpoint: this.props.authEndpoint,\n    };\n    const auth = new NetlifyAuthenticator(cfg);\n\n    auth.authenticate({ provider: 'bitbucket', scope: 'repo' }, (err, data) => {\n      if (err) {\n        this.setState({ loginError: err.toString() });\n        return;\n      }\n      this.props.onLogin(data);\n    });\n  };\n\n  render() {\n    const { inProgress, config } = this.props;\n\n    return (\n      <AuthenticationPage\n        onLogin={this.handleLogin}\n        loginDisabled={inProgress}\n        loginErrorMessage={this.state.loginError}\n        logoUrl={config.get('logo_url')}\n        renderButtonContent={() => (\n          <React.Fragment>\n            <LoginButtonIcon type=\"bitbucket\" />\n            {inProgress ? 'Logging in...' : 'Login with Bitbucket'}\n          </React.Fragment>\n        )}\n      />\n    );\n  }\n}\n"],"file":"AuthenticationPage.js"}