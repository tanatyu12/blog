{"version":3,"sources":["../../../../src/serializers/__tests__/remarkEscapeMarkdownEntities.spec.js"],"names":["process","text","tree","escapedMdast","use","remarkEscapeMarkdownEntities","runSync","children","value","describe","it","expect","toEqual"],"mappings":"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","sourcesContent":["import unified from 'unified';\nimport u from 'unist-builder';\nimport remarkEscapeMarkdownEntities from '../remarkEscapeMarkdownEntities';\n\nconst process = text => {\n  const tree = u('root', [u('text', text)]);\n  const escapedMdast = unified()\n    .use(remarkEscapeMarkdownEntities)\n    .runSync(tree);\n\n  return escapedMdast.children[0].value;\n};\n\ndescribe('remarkEscapeMarkdownEntities', () => {\n  it('should escape common markdown entities', () => {\n    expect(process('*a*')).toEqual('\\\\*a\\\\*');\n    expect(process('**a**')).toEqual('\\\\*\\\\*a\\\\*\\\\*');\n    expect(process('***a***')).toEqual('\\\\*\\\\*\\\\*a\\\\*\\\\*\\\\*');\n    expect(process('_a_')).toEqual('\\\\_a\\\\_');\n    expect(process('__a__')).toEqual('\\\\_\\\\_a\\\\_\\\\_');\n    expect(process('~~a~~')).toEqual('\\\\~\\\\~a\\\\~\\\\~');\n    expect(process('[]')).toEqual('\\\\[]');\n    expect(process('[]()')).toEqual('\\\\[]()');\n    expect(process('[a](b)')).toEqual('\\\\[a](b)');\n    expect(process('[Test sentence.](https://www.example.com)')).toEqual(\n      '\\\\[Test sentence.](https://www.example.com)',\n    );\n    expect(process('![a](b)')).toEqual('!\\\\[a](b)');\n  });\n\n  it('should not escape inactive, single markdown entities', () => {\n    expect(process('a*b')).toEqual('a*b');\n    expect(process('_')).toEqual('_');\n    expect(process('~')).toEqual('~');\n    expect(process('[')).toEqual('[');\n  });\n\n  it('should escape leading markdown entities', () => {\n    expect(process('#')).toEqual('\\\\#');\n    expect(process('-')).toEqual('\\\\-');\n    expect(process('*')).toEqual('\\\\*');\n    expect(process('>')).toEqual('\\\\>');\n    expect(process('=')).toEqual('\\\\=');\n    expect(process('|')).toEqual('\\\\|');\n    expect(process('```')).toEqual('\\\\`\\\\``');\n    expect(process('    ')).toEqual('\\\\    ');\n  });\n\n  it('should escape leading markdown entities preceded by whitespace', () => {\n    expect(process('\\n #')).toEqual('\\\\#');\n    expect(process(' \\n-')).toEqual('\\\\-');\n  });\n\n  it('should not escape leading markdown entities preceded by non-whitespace characters', () => {\n    expect(process('a# # b #')).toEqual('a# # b #');\n    expect(process('a- - b -')).toEqual('a- - b -');\n  });\n\n  it('should not escape html tags', () => {\n    expect(process('<a attr=\"**a**\">')).toEqual('<a attr=\"**a**\">');\n    expect(process('a b <c attr=\"**d**\"> e')).toEqual('a b <c attr=\"**d**\"> e');\n  });\n\n  it('should escape the contents of html blocks', () => {\n    expect(process('<div>*a*</div>')).toEqual('<div>\\\\*a\\\\*</div>');\n  });\n\n  it('should not escape the contents of preformatted html blocks', () => {\n    expect(process('<pre>*a*</pre>')).toEqual('<pre>*a*</pre>');\n    expect(process('<script>*a*</script>')).toEqual('<script>*a*</script>');\n    expect(process('<style>*a*</style>')).toEqual('<style>*a*</style>');\n    expect(process('<pre>\\n*a*\\n</pre>')).toEqual('<pre>\\n*a*\\n</pre>');\n    expect(process('a b <pre>*c*</pre> d e')).toEqual('a b <pre>*c*</pre> d e');\n  });\n\n  it('should not parse footnotes', () => {\n    expect(process('[^a]')).toEqual('\\\\[^a]');\n  });\n});\n"],"file":"remarkEscapeMarkdownEntities.spec.js"}