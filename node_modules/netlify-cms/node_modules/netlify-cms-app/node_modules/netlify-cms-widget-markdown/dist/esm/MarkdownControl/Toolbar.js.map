{"version":3,"sources":["../../../src/MarkdownControl/Toolbar.js"],"names":["ToolbarContainer","colors","textFieldBorder","lengths","borderRadius","transitions","main","text","ToolbarDropdownWrapper","ToolbarToggle","StyledToggle","withComponent","Toggle","ToolbarToggleLabel","props","offPosition","isActive","css","active","Toolbar","React","Component","button","buttons","List","isList","includes","render","onMarkClick","onBlockClick","onLinkClick","selectionHasMark","selectionHasBlock","selectionHasLink","onToggleMode","rawMode","plugins","disabled","onSubmit","isHidden","handleComponentsMenuToggle","toList","map","plugin","idx","get","ImmutablePropTypes","list","PropTypes","func","isRequired","bool","onAddAsset","getAsset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { List } from 'immutable';\nimport {\n  Toggle,\n  Dropdown,\n  DropdownItem,\n  DropdownButton,\n  colors,\n  transitions,\n  lengths,\n} from 'netlify-cms-ui-default';\nimport ToolbarButton from './ToolbarButton';\n\nconst ToolbarContainer = styled.div`\n  background-color: ${colors.textFieldBorder};\n  border-top-right-radius: ${lengths.borderRadius};\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 11px 14px;\n  min-height: 58px;\n  transition: background-color ${transitions.main}, color ${transitions.main};\n  color: ${colors.text};\n`;\n\nconst ToolbarDropdownWrapper = styled.div`\n  display: inline-block;\n  position: relative;\n`;\n\nconst ToolbarToggle = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  margin: 0 10px;\n`;\n\nconst StyledToggle = ToolbarToggle.withComponent(Toggle);\n\nconst ToolbarToggleLabel = styled.span`\n  display: inline-block;\n  text-align: center;\n  white-space: nowrap;\n  line-height: 20px;\n  width: ${props => (props.offPosition ? '62px' : '70px')};\n\n  ${props =>\n    props.isActive &&\n    css`\n      font-weight: 600;\n      color: ${colors.active};\n    `};\n`;\n\nexport default class Toolbar extends React.Component {\n  static propTypes = {\n    buttons: ImmutablePropTypes.list,\n    onToggleMode: PropTypes.func.isRequired,\n    rawMode: PropTypes.bool,\n    plugins: ImmutablePropTypes.map,\n    onSubmit: PropTypes.func,\n    onAddAsset: PropTypes.func,\n    getAsset: PropTypes.func,\n    disabled: PropTypes.bool,\n    onMarkClick: PropTypes.func,\n    onBlockClick: PropTypes.func,\n    onLinkClick: PropTypes.func,\n    selectionHasMark: PropTypes.func,\n    selectionHasBlock: PropTypes.func,\n    selectionHasLink: PropTypes.func,\n  };\n\n  isHidden = button => {\n    const { buttons } = this.props;\n    return List.isList(buttons) ? !buttons.includes(button) : false;\n  };\n\n  render() {\n    const {\n      onMarkClick,\n      onBlockClick,\n      onLinkClick,\n      selectionHasMark,\n      selectionHasBlock,\n      selectionHasLink,\n      onToggleMode,\n      rawMode,\n      plugins,\n      disabled,\n      onSubmit,\n    } = this.props;\n\n    return (\n      <ToolbarContainer>\n        <div>\n          <ToolbarButton\n            type=\"bold\"\n            label=\"Bold\"\n            icon=\"bold\"\n            onClick={onMarkClick}\n            isActive={selectionHasMark}\n            isHidden={this.isHidden('bold')}\n            disabled={disabled}\n          />\n          <ToolbarButton\n            type=\"italic\"\n            label=\"Italic\"\n            icon=\"italic\"\n            onClick={onMarkClick}\n            isActive={selectionHasMark}\n            isHidden={this.isHidden('italic')}\n            disabled={disabled}\n          />\n          <ToolbarButton\n            type=\"code\"\n            label=\"Code\"\n            icon=\"code\"\n            onClick={onMarkClick}\n            isActive={selectionHasMark}\n            isHidden={this.isHidden('code')}\n            disabled={disabled}\n          />\n          <ToolbarButton\n            type=\"link\"\n            label=\"Link\"\n            icon=\"link\"\n            onClick={onLinkClick}\n            isActive={selectionHasLink}\n            isHidden={this.isHidden('link')}\n            disabled={disabled}\n          />\n          <ToolbarButton\n            type=\"heading-one\"\n            label=\"Header 1\"\n            icon=\"h1\"\n            onClick={onBlockClick}\n            isActive={selectionHasBlock}\n            isHidden={this.isHidden('heading-one')}\n            disabled={disabled}\n          />\n          <ToolbarButton\n            type=\"heading-two\"\n            label=\"Header 2\"\n            icon=\"h2\"\n            onClick={onBlockClick}\n            isActive={selectionHasBlock}\n            isHidden={this.isHidden('heading-two')}\n            disabled={disabled}\n          />\n          <ToolbarButton\n            type=\"quote\"\n            label=\"Quote\"\n            icon=\"quote\"\n            onClick={onBlockClick}\n            isActive={selectionHasBlock}\n            isHidden={this.isHidden('quote')}\n            disabled={disabled}\n          />\n          <ToolbarButton\n            type=\"code\"\n            label=\"Code Block\"\n            icon=\"code-block\"\n            onClick={onBlockClick}\n            isActive={selectionHasBlock}\n            isHidden={this.isHidden('code-block')}\n            disabled={disabled}\n          />\n          <ToolbarButton\n            type=\"bulleted-list\"\n            label=\"Bulleted List\"\n            icon=\"list-bulleted\"\n            onClick={onBlockClick}\n            isActive={selectionHasBlock}\n            isHidden={this.isHidden('bulleted-list')}\n            disabled={disabled}\n          />\n          <ToolbarButton\n            type=\"numbered-list\"\n            label=\"Numbered List\"\n            icon=\"list-numbered\"\n            onClick={onBlockClick}\n            isActive={selectionHasBlock}\n            isHidden={this.isHidden('numbered-list')}\n            disabled={disabled}\n          />\n          <ToolbarDropdownWrapper>\n            <Dropdown\n              dropdownTopOverlap=\"36px\"\n              renderButton={() => (\n                <DropdownButton>\n                  <ToolbarButton\n                    label=\"Add Component\"\n                    icon=\"add-with\"\n                    onClick={this.handleComponentsMenuToggle}\n                    disabled={disabled}\n                  />\n                </DropdownButton>\n              )}\n            >\n              {plugins &&\n                plugins\n                  .toList()\n                  .map((plugin, idx) => (\n                    <DropdownItem\n                      key={idx}\n                      label={plugin.get('label')}\n                      onClick={() => onSubmit(plugin.get('id'))}\n                    />\n                  ))}\n            </Dropdown>\n          </ToolbarDropdownWrapper>\n        </div>\n        <ToolbarToggle>\n          <ToolbarToggleLabel isActive={!rawMode} offPosition>\n            Rich Text\n          </ToolbarToggleLabel>\n          <StyledToggle active={rawMode} onChange={onToggleMode} />\n          <ToolbarToggleLabel isActive={rawMode}>Markdown</ToolbarToggleLabel>\n        </ToolbarToggle>\n      </ToolbarContainer>\n    );\n  }\n}\n"],"file":"Toolbar.js"}