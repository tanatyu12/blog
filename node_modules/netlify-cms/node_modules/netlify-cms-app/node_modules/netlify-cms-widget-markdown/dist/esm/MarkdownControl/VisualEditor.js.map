{"version":3,"sources":["../../../src/MarkdownControl/VisualEditor.js"],"names":["VisualEditorContainer","createEmptyRawDoc","emptyText","Text","create","emptyBlock","Block","object","type","nodes","createSlateValue","rawValue","rawDoc","rawDocHasNodes","document","Document","fromJSON","Value","Editor","React","Component","constructor","props","e","data","change","isShift","ast","html","doc","insertFragment","state","value","activeMarks","some","mark","blocks","node","event","preventDefault","resolvedChange","focus","toggleMark","ref","onChange","setState","EditListConfigured","changes","unwrapList","wrapInList","includes","isActive","selectionHasBlock","setBlocks","isSameListType","block","getClosest","key","parent","isInList","utils","isSelectionInList","call","currentListType","inlines","inline","hasLinks","unwrapInline","url","window","prompt","isCollapsed","insertText","extend","length","wrapInline","collapseToEnd","pluginId","getEditorComponents","pluginFields","getIn","defaultValues","toMap","mapKeys","_","field","get","filter","has","map","shortcode","shortcodeNew","shortcodeData","isVoid","focusBlock","text","setNodeByKey","insertBlock","onMode","raw","toJSON","markdown","lastRawValue","equals","handleDocumentChange","shouldComponentUpdate","nextProps","nextState","forcePropsValue","shouldForcePropsValue","componentDidUpdate","prevProps","prevState","oldPropsValue","oldStateValue","newPropsValue","newStateValue","render","onAddAsset","getAsset","className","handleMarkClick","handleBlockClick","handleLink","selectionHasMark","handleToggle","handlePluginAdd","css","cx","visualEditorStyles","renderNode","renderMark","validateNode","plugins","handleChange","onKeyDown","handlePaste","processRef","PropTypes","func","isRequired","string","ImmutablePropTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport styled from '@emotion/styled';\nimport { ClassNames } from '@emotion/core';\nimport { get, isEmpty, debounce, uniq } from 'lodash';\nimport { List } from 'immutable';\nimport { Value, Document, Block, Text } from 'slate';\nimport { Editor as Slate } from 'slate-react';\nimport { slateToMarkdown, markdownToSlate, htmlToSlate } from '../serializers';\nimport Toolbar from '../MarkdownControl/Toolbar';\nimport { renderNode, renderMark } from './renderers';\nimport { validateNode } from './validators';\nimport plugins, { EditListConfigured } from './plugins';\nimport onKeyDown from './keys';\nimport visualEditorStyles from './visualEditorStyles';\nimport { EditorControlBar } from '../styles';\n\nconst VisualEditorContainer = styled.div`\n  position: relative;\n`;\n\nconst createEmptyRawDoc = () => {\n  const emptyText = Text.create('');\n  const emptyBlock = Block.create({ object: 'block', type: 'paragraph', nodes: [emptyText] });\n  return { nodes: [emptyBlock] };\n};\n\nconst createSlateValue = rawValue => {\n  const rawDoc = rawValue && markdownToSlate(rawValue);\n  const rawDocHasNodes = !isEmpty(get(rawDoc, 'nodes'));\n  const document = Document.fromJSON(rawDocHasNodes ? rawDoc : createEmptyRawDoc());\n  return Value.create({ document });\n};\n\nexport default class Editor extends React.Component {\n  static propTypes = {\n    onAddAsset: PropTypes.func.isRequired,\n    getAsset: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onMode: PropTypes.func.isRequired,\n    className: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    field: ImmutablePropTypes.map.isRequired,\n    getEditorComponents: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: createSlateValue(props.value),\n      lastRawValue: props.value,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const forcePropsValue = this.shouldForcePropsValue(\n      this.props.value,\n      this.state.lastRawValue,\n      nextProps.value,\n      nextState.lastRawValue,\n    );\n    return !this.state.value.equals(nextState.value) || forcePropsValue;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const forcePropsValue = this.shouldForcePropsValue(\n      prevProps.value,\n      prevState.lastRawValue,\n      this.props.value,\n      this.state.lastRawValue,\n    );\n\n    if (forcePropsValue) {\n      this.setState({ value: createSlateValue(this.props.value) });\n    }\n  }\n\n  // If the old props/state values and new state value are all the same, and\n  // the new props value does not match the others, the new props value\n  // originated from outside of this widget and should be used.\n  shouldForcePropsValue(oldPropsValue, oldStateValue, newPropsValue, newStateValue) {\n    return (\n      uniq([oldPropsValue, oldStateValue, newStateValue]).length === 1 &&\n      oldPropsValue !== newPropsValue\n    );\n  }\n\n  handlePaste = (e, data, change) => {\n    if (data.type !== 'html' || data.isShift) {\n      return;\n    }\n    const ast = htmlToSlate(data.html);\n    const doc = Document.fromJSON(ast);\n    return change.insertFragment(doc);\n  };\n\n  selectionHasMark = type => this.state.value.activeMarks.some(mark => mark.type === type);\n  selectionHasBlock = type => this.state.value.blocks.some(node => node.type === type);\n\n  handleMarkClick = (event, type) => {\n    event.preventDefault();\n    const resolvedChange = this.state.value\n      .change()\n      .focus()\n      .toggleMark(type);\n    this.ref.onChange(resolvedChange);\n    this.setState({ value: resolvedChange.value });\n  };\n\n  handleBlockClick = (event, type) => {\n    event.preventDefault();\n    let { value } = this.state;\n    const { document: doc } = value;\n    const { unwrapList, wrapInList } = EditListConfigured.changes;\n    let change = value.change();\n\n    // Handle everything except list buttons.\n    if (!['bulleted-list', 'numbered-list'].includes(type)) {\n      const isActive = this.selectionHasBlock(type);\n      change = change.setBlocks(isActive ? 'paragraph' : type);\n    }\n\n    // Handle the extra wrapping required for list buttons.\n    else {\n      const isSameListType = value.blocks.some(block => {\n        return !!doc.getClosest(block.key, parent => parent.type === type);\n      });\n      const isInList = EditListConfigured.utils.isSelectionInList(value);\n\n      if (isInList && isSameListType) {\n        change = change.call(unwrapList, type);\n      } else if (isInList) {\n        const currentListType = type === 'bulleted-list' ? 'numbered-list' : 'bulleted-list';\n        change = change.call(unwrapList, currentListType).call(wrapInList, type);\n      } else {\n        change = change.call(wrapInList, type);\n      }\n    }\n\n    const resolvedChange = change.focus();\n    this.ref.onChange(resolvedChange);\n    this.setState({ value: resolvedChange.value });\n  };\n\n  hasLinks = () => {\n    return this.state.value.inlines.some(inline => inline.type === 'link');\n  };\n\n  handleLink = () => {\n    let change = this.state.value.change();\n\n    // If the current selection contains links, clicking the \"link\" button\n    // should simply unlink them.\n    if (this.hasLinks()) {\n      change = change.unwrapInline('link');\n    } else {\n      const url = window.prompt('Enter the URL of the link');\n\n      // If nothing is entered in the URL prompt, do nothing.\n      if (!url) return;\n\n      // If no text is selected, use the entered URL as text.\n      if (change.value.isCollapsed) {\n        change = change.insertText(url).extend(0 - url.length);\n      }\n\n      change = change.wrapInline({ type: 'link', data: { url } }).collapseToEnd();\n    }\n\n    this.ref.onChange(change);\n    this.setState({ value: change.value });\n  };\n\n  handlePluginAdd = pluginId => {\n    const { getEditorComponents } = this.props;\n    const { value } = this.state;\n    const nodes = [Text.create('')];\n\n    /**\n     * Get default values for plugin fields.\n     */\n    const pluginFields = getEditorComponents().getIn([pluginId, 'fields'], List());\n    const defaultValues = pluginFields\n      .toMap()\n      .mapKeys((_, field) => field.get('name'))\n      .filter(field => field.has('default'))\n      .map(field => field.get('default'));\n\n    /**\n     * Create new shortcode block with default values set.\n     */\n    const block = {\n      object: 'block',\n      type: 'shortcode',\n      data: {\n        shortcode: pluginId,\n        shortcodeNew: true,\n        shortcodeData: defaultValues,\n      },\n      isVoid: true,\n      nodes,\n    };\n\n    let change = value.change();\n    const { focusBlock } = change.value;\n\n    if (focusBlock.text === '' && focusBlock.type === 'paragraph') {\n      change = change.setNodeByKey(focusBlock.key, block);\n    } else {\n      change = change.insertBlock(block);\n    }\n\n    change = change.focus();\n\n    this.ref.onChange(change);\n    this.setState({ value: change.value });\n  };\n\n  handleToggle = () => {\n    this.props.onMode('raw');\n  };\n\n  handleDocumentChange = debounce(change => {\n    const { onChange } = this.props;\n    const raw = change.value.document.toJSON();\n    const markdown = slateToMarkdown(raw);\n    this.setState({ lastRawValue: markdown }, () => onChange(markdown));\n  }, 150);\n\n  handleChange = change => {\n    if (!this.state.value.document.equals(change.value.document)) {\n      this.handleDocumentChange(change);\n    }\n    this.setState({ value: change.value });\n  };\n\n  processRef = ref => {\n    this.ref = ref;\n  };\n\n  render() {\n    const { onAddAsset, getAsset, className, field, getEditorComponents } = this.props;\n\n    return (\n      <VisualEditorContainer>\n        <EditorControlBar>\n          <Toolbar\n            onMarkClick={this.handleMarkClick}\n            onBlockClick={this.handleBlockClick}\n            onLinkClick={this.handleLink}\n            selectionHasMark={this.selectionHasMark}\n            selectionHasBlock={this.selectionHasBlock}\n            selectionHasLink={this.hasLinks}\n            onToggleMode={this.handleToggle}\n            plugins={getEditorComponents()}\n            onSubmit={this.handlePluginAdd}\n            onAddAsset={onAddAsset}\n            getAsset={getAsset}\n            buttons={field.get('buttons')}\n          />\n        </EditorControlBar>\n        <ClassNames>\n          {({ css, cx }) => (\n            <Slate\n              className={cx(\n                className,\n                css`\n                  ${visualEditorStyles}\n                `,\n              )}\n              value={this.state.value}\n              renderNode={renderNode}\n              renderMark={renderMark}\n              validateNode={validateNode}\n              plugins={plugins}\n              onChange={this.handleChange}\n              onKeyDown={onKeyDown}\n              onPaste={this.handlePaste}\n              ref={this.processRef}\n              spellCheck\n            />\n          )}\n        </ClassNames>\n      </VisualEditorContainer>\n    );\n  }\n}\n"],"file":"VisualEditor.js"}