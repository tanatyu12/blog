{"version":3,"sources":["../../src/implementation.js"],"names":["MAX_CONCURRENT_DOWNLOADS","GitLab","constructor","config","options","files","sem","promises","forEach","file","push","Promise","resolve","take","api","readFile","path","id","then","data","leave","catch","error","console","all","loadedEntries","filter","loadedEntry","proxied","API","useWorkflow","Error","getIn","repo","branch","api_root","token","authComponent","AuthenticationPage","restoreUser","user","authenticate","state","isCollab","hasWriteAccess","message","stripIndent","logout","getToken","entriesByFolder","collection","extension","listFiles","get","cursor","fetchFiles","name","endsWith","fetchedFiles","returnedFiles","CURSOR_COMPATIBILITY_SYMBOL","allEntriesByFolder","listAllFiles","entriesByFiles","map","collectionFile","label","getEntry","slug","getMedia","displayURL","getMediaDisplayURL","_mediaDisplayURLSem","reject","parseText","blob","type","match","window","Blob","URL","createObjectURL","finally","persistEntry","entry","mediaFiles","persistFiles","persistMedia","mediaFile","value","fileObj","size","deleteFile","commitMessage","traverseCursor","action","entries","newCursor"],"mappings":"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","sourcesContent":["import trimStart from 'lodash/trimStart';\nimport semaphore from 'semaphore';\nimport { stripIndent } from 'common-tags';\nimport { CURSOR_COMPATIBILITY_SYMBOL } from 'netlify-cms-lib-util';\nimport AuthenticationPage from './AuthenticationPage';\nimport API from './API';\n\nconst MAX_CONCURRENT_DOWNLOADS = 10;\n\nexport default class GitLab {\n  constructor(config, options = {}) {\n    this.config = config;\n    this.options = {\n      proxied: false,\n      API: null,\n      ...options,\n    };\n\n    if (this.options.useWorkflow) {\n      throw new Error('The GitLab backend does not support the Editorial Workflow.');\n    }\n\n    if (!this.options.proxied && config.getIn(['backend', 'repo']) == null) {\n      throw new Error('The GitLab backend needs a \"repo\" in the backend configuration.');\n    }\n\n    this.api = this.options.API || null;\n\n    this.repo = config.getIn(['backend', 'repo'], '');\n    this.branch = config.getIn(['backend', 'branch'], 'master');\n    this.api_root = config.getIn(['backend', 'api_root'], 'https://gitlab.com/api/v4');\n    this.token = '';\n  }\n\n  authComponent() {\n    return AuthenticationPage;\n  }\n\n  restoreUser(user) {\n    return this.authenticate(user);\n  }\n\n  async authenticate(state) {\n    this.token = state.token;\n    this.api = new API({\n      token: this.token,\n      branch: this.branch,\n      repo: this.repo,\n      api_root: this.api_root,\n    });\n    const user = await this.api.user();\n    const isCollab = await this.api.hasWriteAccess(user).catch(error => {\n      error.message = stripIndent`\n        Repo \"${this.repo}\" not found.\n\n        Please ensure the repo information is spelled correctly.\n\n        If the repo is private, make sure you're logged into a GitLab account with access.\n      `;\n      throw error;\n    });\n\n    // Unauthorized user\n    if (!isCollab) {\n      throw new Error('Your GitLab user account does not have access to this repo.');\n    }\n\n    // Authorized user\n    return { ...user, token: state.token };\n  }\n\n  logout() {\n    this.token = null;\n    return;\n  }\n\n  getToken() {\n    return Promise.resolve(this.token);\n  }\n\n  entriesByFolder(collection, extension) {\n    return this.api.listFiles(collection.get('folder')).then(({ files, cursor }) =>\n      this.fetchFiles(files.filter(file => file.name.endsWith('.' + extension))).then(\n        fetchedFiles => {\n          const returnedFiles = fetchedFiles;\n          returnedFiles[CURSOR_COMPATIBILITY_SYMBOL] = cursor;\n          return returnedFiles;\n        },\n      ),\n    );\n  }\n\n  allEntriesByFolder(collection, extension) {\n    return this.api\n      .listAllFiles(collection.get('folder'))\n      .then(files => this.fetchFiles(files.filter(file => file.name.endsWith('.' + extension))));\n  }\n\n  entriesByFiles(collection) {\n    const files = collection.get('files').map(collectionFile => ({\n      path: collectionFile.get('file'),\n      label: collectionFile.get('label'),\n    }));\n    return this.fetchFiles(files).then(fetchedFiles => {\n      const returnedFiles = fetchedFiles;\n      return returnedFiles;\n    });\n  }\n\n  fetchFiles = files => {\n    const sem = semaphore(MAX_CONCURRENT_DOWNLOADS);\n    const promises = [];\n    files.forEach(file => {\n      promises.push(\n        new Promise(resolve =>\n          sem.take(() =>\n            this.api\n              .readFile(file.path, file.id)\n              .then(data => {\n                resolve({ file, data });\n                sem.leave();\n              })\n              .catch((error = true) => {\n                sem.leave();\n                console.error(`failed to load file from GitLab: ${file.path}`);\n                resolve({ error });\n              }),\n          ),\n        ),\n      );\n    });\n    return Promise.all(promises).then(loadedEntries =>\n      loadedEntries.filter(loadedEntry => !loadedEntry.error),\n    );\n  };\n\n  // Fetches a single entry.\n  getEntry(collection, slug, path) {\n    return this.api.readFile(path).then(data => ({\n      file: { path },\n      data,\n    }));\n  }\n\n  getMedia() {\n    return this.api.listAllFiles(this.config.get('media_folder')).then(files =>\n      files.map(({ id, name, path }) => {\n        return { id, name, path, displayURL: { id, name, path } };\n      }),\n    );\n  }\n\n  getMediaDisplayURL(displayURL) {\n    this._mediaDisplayURLSem = this._mediaDisplayURLSem || semaphore(MAX_CONCURRENT_DOWNLOADS);\n    const { id, name, path } = displayURL;\n    return new Promise((resolve, reject) =>\n      this._mediaDisplayURLSem.take(() =>\n        this.api\n          .readFile(path, id, { parseText: false })\n          .then(blob => {\n            // svgs are returned with mimetype \"text/plain\" by gitlab\n            if (blob.type === 'text/plain' && name.match(/\\.svg$/i)) {\n              return new window.Blob([blob], { type: 'image/svg+xml' });\n            }\n            return blob;\n          })\n          .then(blob => URL.createObjectURL(blob))\n          .then(resolve, reject)\n          .finally(() => this._mediaDisplayURLSem.leave()),\n      ),\n    );\n  }\n\n  async persistEntry(entry, mediaFiles, options = {}) {\n    return this.api.persistFiles([entry], options);\n  }\n\n  async persistMedia(mediaFile, options = {}) {\n    await this.api.persistFiles([mediaFile], options);\n    const { value, path, fileObj } = mediaFile;\n    return { name: value, size: fileObj.size, path: trimStart(path, '/') };\n  }\n\n  deleteFile(path, commitMessage, options) {\n    return this.api.deleteFile(path, commitMessage, options);\n  }\n\n  traverseCursor(cursor, action) {\n    return this.api.traverseCursor(cursor, action).then(async ({ entries, cursor: newCursor }) => ({\n      entries: await Promise.all(\n        entries.map(file => this.api.readFile(file.path, file.id).then(data => ({ file, data }))),\n      ),\n      cursor: newCursor,\n    }));\n  }\n}\n"],"file":"implementation.js"}