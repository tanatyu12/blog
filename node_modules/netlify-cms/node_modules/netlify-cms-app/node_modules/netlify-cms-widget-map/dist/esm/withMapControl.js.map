{"version":3,"sources":["../../src/withMapControl.js"],"names":["formatOptions","dataProjection","featureProjection","getDefaultFormat","GeoJSON","getDefaultMap","target","featuresLayer","Map","layers","TileLayer","source","OSMSource","view","View","center","zoom","withMapControl","getFormat","getMap","MapControl","React","Component","constructor","props","mapContainer","createRef","componentDidMount","field","onChange","value","format","features","readFeature","featuresSource","VectorSource","wrapX","VectorLayer","current","map","length","getView","fit","getExtent","maxZoom","padding","draw","Draw","type","get","addInteraction","writeOptions","decimals","on","feature","clear","writeGeometry","getGeometry","render","cx","css","classNameWrapper","olStyles","PropTypes","func","isRequired","object","node"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ClassNames } from '@emotion/core';\nimport olStyles from 'ol/ol.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Draw from 'ol/interaction/Draw.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport OSMSource from 'ol/source/OSM.js';\nimport VectorSource from 'ol/source/Vector.js';\n\nconst formatOptions = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857',\n};\nconst getDefaultFormat = () => new GeoJSON(formatOptions);\n\nconst getDefaultMap = (target, featuresLayer) =>\n  new Map({\n    target,\n    layers: [new TileLayer({ source: new OSMSource() }), featuresLayer],\n    view: new View({ center: [0, 0], zoom: 2 }),\n  });\n\nexport default function withMapControl({ getFormat, getMap } = {}) {\n  return class MapControl extends React.Component {\n    static propTypes = {\n      onChange: PropTypes.func.isRequired,\n      field: PropTypes.object.isRequired,\n      value: PropTypes.node,\n    };\n\n    static defaultProps = {\n      value: '',\n    };\n\n    constructor(props) {\n      super(props);\n      this.mapContainer = React.createRef();\n    }\n\n    componentDidMount() {\n      const { field, onChange, value } = this.props;\n      const format = getFormat ? getFormat(field) : getDefaultFormat(field);\n      const features = value ? [format.readFeature(value)] : [];\n\n      const featuresSource = new VectorSource({ features, wrapX: false });\n      const featuresLayer = new VectorLayer({ source: featuresSource });\n\n      const target = this.mapContainer.current;\n      const map = getMap ? getMap(target, featuresLayer) : getDefaultMap(target, featuresLayer);\n      if (features.length > 0) {\n        map.getView().fit(featuresSource.getExtent(), { maxZoom: 16, padding: [80, 80, 80, 80] });\n      }\n\n      const draw = new Draw({ source: featuresSource, type: field.get('type', 'Point') });\n      map.addInteraction(draw);\n\n      const writeOptions = { decimals: field.get('decimals', 7) };\n      draw.on('drawend', ({ feature }) => {\n        featuresSource.clear();\n        onChange(format.writeGeometry(feature.getGeometry(), writeOptions));\n      });\n    }\n\n    render() {\n      return (\n        <ClassNames>\n          {({ cx, css }) => (\n            <div\n              className={cx(\n                this.props.classNameWrapper,\n                css`\n                  ${olStyles};\n                  padding: 0;\n                  overflow: hidden;\n                `,\n              )}\n              ref={this.mapContainer}\n            />\n          )}\n        </ClassNames>\n      );\n    }\n  };\n}\n"],"file":"withMapControl.js"}