{"version":3,"sources":["../../src/AuthenticationPage.js"],"names":["LoginButton","buttons","button","shadows","dropDeep","default","gray","AuthForm","AuthInput","colorsRaw","white","lengths","borderRadius","colors","active","ErrorMessage","errorText","component","window","netlifyIdentity","on","user","handleIdentityLogin","handleIdentityLogout","GitGatewayAuthenticationPage","React","Component","constructor","props","onLogin","close","open","currentUser","email","password","errors","name","e","setState","state","target","value","preventDefault","Object","keys","length","authClient","login","then","catch","error","server","description","msg","loggingIn","componentDidMount","loggedIn","componentWillUnmount","render","inProgress","config","get","handleIdentity","handleLogin","handleChange","PropTypes","func","isRequired","bool","node","ImmutablePropTypes","map"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { partial } from 'lodash';\nimport {\n  AuthenticationPage,\n  buttons,\n  shadows,\n  colors,\n  colorsRaw,\n  lengths,\n} from 'netlify-cms-ui-default';\n\nconst LoginButton = styled.button`\n  ${buttons.button};\n  ${shadows.dropDeep};\n  ${buttons.default};\n  ${buttons.gray};\n\n  padding: 0 30px;\n  display: block;\n  margin-top: 20px;\n  margin-left: auto;\n`;\n\nconst AuthForm = styled.form`\n  width: 350px;\n  margin-top: -80px;\n`;\n\nconst AuthInput = styled.input`\n  background-color: ${colorsRaw.white};\n  border-radius: ${lengths.borderRadius};\n\n  font-size: 14px;\n  padding: 10px 10px;\n  margin-bottom: 15px;\n  margin-top: 6px;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n\n  &:focus {\n    outline: none;\n    box-shadow: inset 0 0 0 2px ${colors.active};\n  }\n`;\n\nconst ErrorMessage = styled.p`\n  color: ${colors.errorText};\n`;\n\nlet component = null;\n\nif (window.netlifyIdentity) {\n  window.netlifyIdentity.on('login', user => {\n    component && component.handleIdentityLogin(user);\n  });\n  window.netlifyIdentity.on('logout', () => {\n    component && component.handleIdentityLogout();\n  });\n}\n\nexport default class GitGatewayAuthenticationPage extends React.Component {\n  constructor(props) {\n    super(props);\n    component = this;\n  }\n\n  componentDidMount() {\n    if (!this.loggedIn && window.netlifyIdentity && window.netlifyIdentity.currentUser()) {\n      this.props.onLogin(window.netlifyIdentity.currentUser());\n      window.netlifyIdentity.close();\n    }\n  }\n\n  componentWillUnmount() {\n    component = null;\n  }\n\n  handleIdentityLogin = user => {\n    this.props.onLogin(user);\n    window.netlifyIdentity.close();\n  };\n\n  handleIdentityLogout = () => {\n    window.netlifyIdentity.open();\n  };\n\n  handleIdentity = () => {\n    const user = window.netlifyIdentity.currentUser();\n    if (user) {\n      this.props.onLogin(user);\n    } else {\n      window.netlifyIdentity.open();\n    }\n  };\n\n  static propTypes = {\n    onLogin: PropTypes.func.isRequired,\n    inProgress: PropTypes.bool.isRequired,\n    error: PropTypes.node,\n    config: ImmutablePropTypes.map,\n  };\n\n  state = { email: '', password: '', errors: {} };\n\n  handleChange = (name, e) => {\n    this.setState({ ...this.state, [name]: e.target.value });\n  };\n\n  handleLogin = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const errors = {};\n    if (!email) {\n      errors.email = 'Make sure to enter your email.';\n    }\n    if (!password) {\n      errors.password = 'Please enter your password.';\n    }\n\n    if (Object.keys(errors).length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n    GitGatewayAuthenticationPage.authClient\n      .login(this.state.email, this.state.password, true)\n      .then(user => {\n        this.props.onLogin(user);\n      })\n      .catch(error => {\n        this.setState({\n          errors: { server: error.description || error.msg || error },\n          loggingIn: false,\n        });\n      });\n  };\n\n  render() {\n    const { errors } = this.state;\n    const { error, inProgress, config } = this.props;\n\n    if (window.netlifyIdentity) {\n      return (\n        <AuthenticationPage\n          logoUrl={config.get('logo_url')}\n          onLogin={this.handleIdentity}\n          renderButtonContent={() => 'Login with Netlify Identity'}\n        />\n      );\n    }\n\n    return (\n      <AuthenticationPage\n        logoUrl={config.get('logo_url')}\n        renderPageContent={() => (\n          <AuthForm onSubmit={this.handleLogin}>\n            {!error ? null : <ErrorMessage>{error}</ErrorMessage>}\n            {!errors.server ? null : <ErrorMessage>{errors.server}</ErrorMessage>}\n            <ErrorMessage>{errors.email || null}</ErrorMessage>\n            <AuthInput\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={partial(this.handleChange, 'email')}\n            />\n            <ErrorMessage>{errors.password || null}</ErrorMessage>\n            <AuthInput\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={partial(this.handleChange, 'password')}\n            />\n            <LoginButton disabled={inProgress}>\n              {inProgress ? 'Logging in...' : 'Login'}\n            </LoginButton>\n          </AuthForm>\n        )}\n      />\n    );\n  }\n}\n"],"file":"AuthenticationPage.js"}