{"version":3,"sources":["../../src/implementation.js"],"names":["localHosts","localhost","defaults","identity","gateway","largeMedia","getEndpoint","endpoint","netlifySiteURL","document","location","host","split","shift","match","parts","push","replace","join","GitGateway","constructor","config","options","req","tokenPromise","then","token","unsentRequest","withHeaders","Authorization","performRequest","proxied","API","branch","getIn","trim","squash_merges","localStorage","getItem","APIUrl","gatewayUrl","netlifyLargeMediaURL","backendTypeRegex","backendTypeMatches","backendType","authClient","window","netlifyIdentity","gotrue","GoTrue","AuthenticationPage","backend","authenticate","user","jwt","bind","fetch","headers","res","contentType","get","includes","APIError","status","body","json","ok","message","github_enabled","gitlab_enabled","bitbucket_enabled","roles","acceptRoles","length","userRoles","validRole","Error","userData","name","user_metadata","full_name","email","avatar_url","metadata","apiConfig","api_root","commitAuthor","initialWorkflowStatus","api","GitHubAPI","GitHubBackend","GitLabAPI","GitLabBackend","BitBucketAPI","requestFunction","hasWriteAccess","BitbucketBackend","restoreUser","currentUser","Promise","reject","authComponent","logout","getToken","entriesByFolder","collection","extension","entriesByFiles","fetchFiles","files","getEntry","slug","path","getMedia","all","getLargeMediaClient","mediaFiles","largeMediaClient","enabled","largeMediaDisplayURLs","getLargeMediaDisplayURLs","map","id","displayURL","rest","original","_largeMediaClientPromise","_getLargeMediaClient","netlifyLargeMediaEnabledPromise","readFile","ini","decode","url","lfs","URL","lfsURL","hostname","endsWith","catch","err","lfsPatternsPromise","getLargeMediaPatternsFromGitAttributesFile","patterns","maybeEnabled","patternsErr","console","error","rootURL","makeAuthorizedRequest","transformImages","nf_resize","w","h","client","largeMediaItems","filter","matchPath","sha","items","file","data","parsedPointerFile","pointerId","resourceId","idMaps","getResourceDownloadURLArgs","resourceMap","getMediaDisplayURL","largeMediaDisplayURL","getDownloadURL","getPointerFileForMediaFileObj","fileObj","size","uploadResource","pointerFileString","pointerFileBlob","Blob","pointerFile","File","type","pointerFileSHA","blob","raw","persistEntry","entry","largeMediaFilteredMediaFiles","mediaFile","fixedPath","startsWith","slice","pointerFileDetails","persistMedia","value","createObjectURL","persistMediaArgument","deleteFile","commitMessage","getDeployPreview","unpublishedEntries","unpublishedEntry","updateUnpublishedEntryStatus","newStatus","deleteUnpublishedEntry","publishUnpublishedEntry","traverseCursor","cursor","action"],"mappings":"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","sourcesContent":["import GoTrue from 'gotrue-js';\nimport jwtDecode from 'jwt-decode';\nimport { fromPairs, get, pick, intersection, unzip } from 'lodash';\nimport ini from 'ini';\nimport { APIError, getBlobSHA, unsentRequest } from 'netlify-cms-lib-util';\nimport { GitHubBackend } from 'netlify-cms-backend-github';\nimport { GitLabBackend } from 'netlify-cms-backend-gitlab';\nimport { BitbucketBackend, API as BitBucketAPI } from 'netlify-cms-backend-bitbucket';\nimport GitHubAPI from './GitHubAPI';\nimport GitLabAPI from './GitLabAPI';\nimport AuthenticationPage from './AuthenticationPage';\nimport {\n  parsePointerFile,\n  createPointerFile,\n  getLargeMediaPatternsFromGitAttributesFile,\n  getClient,\n} from './netlify-lfs-client';\n\nconst localHosts = {\n  localhost: true,\n  '127.0.0.1': true,\n  '0.0.0.0': true,\n};\nconst defaults = {\n  identity: '/.netlify/identity',\n  gateway: '/.netlify/git',\n  largeMedia: '/.netlify/large-media',\n};\n\nfunction getEndpoint(endpoint, netlifySiteURL) {\n  if (\n    localHosts[document.location.host.split(':').shift()] &&\n    netlifySiteURL &&\n    endpoint.match(/^\\/\\.netlify\\//)\n  ) {\n    const parts = [];\n    if (netlifySiteURL) {\n      parts.push(netlifySiteURL);\n      if (!netlifySiteURL.match(/\\/$/)) {\n        parts.push('/');\n      }\n    }\n    parts.push(endpoint.replace(/^\\//, ''));\n    return parts.join('');\n  }\n  return endpoint;\n}\n\nexport default class GitGateway {\n  constructor(config, options = {}) {\n    this.options = {\n      proxied: true,\n      API: null,\n      ...options,\n    };\n    this.config = config;\n    this.branch = config.getIn(['backend', 'branch'], 'master').trim();\n    this.squash_merges = config.getIn(['backend', 'squash_merges']);\n\n    const netlifySiteURL = localStorage.getItem('netlifySiteURL');\n    const APIUrl = getEndpoint(\n      config.getIn(['backend', 'identity_url'], defaults.identity),\n      netlifySiteURL,\n    );\n    this.gatewayUrl = getEndpoint(\n      config.getIn(['backend', 'gateway_url'], defaults.gateway),\n      netlifySiteURL,\n    );\n    this.netlifyLargeMediaURL = getEndpoint(\n      config.getIn(['backend', 'large_media_url'], defaults.largeMedia),\n      netlifySiteURL,\n    );\n    const backendTypeRegex = /\\/(github|gitlab|bitbucket)\\/?$/;\n    const backendTypeMatches = this.gatewayUrl.match(backendTypeRegex);\n    if (backendTypeMatches) {\n      this.backendType = backendTypeMatches[1];\n      this.gatewayUrl = this.gatewayUrl.replace(backendTypeRegex, '');\n    } else {\n      this.backendType = null;\n    }\n\n    this.authClient = window.netlifyIdentity\n      ? window.netlifyIdentity.gotrue\n      : new GoTrue({ APIUrl });\n    AuthenticationPage.authClient = this.authClient;\n\n    this.backend = null;\n  }\n\n  requestFunction = req =>\n    this.tokenPromise()\n      .then(token => unsentRequest.withHeaders({ Authorization: `Bearer ${token}` }, req))\n      .then(unsentRequest.performRequest);\n\n  authenticate(user) {\n    this.tokenPromise = user.jwt.bind(user);\n    return this.tokenPromise().then(async token => {\n      if (!this.backendType) {\n        const { github_enabled, gitlab_enabled, bitbucket_enabled, roles } = await fetch(\n          `${this.gatewayUrl}/settings`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          },\n        ).then(async res => {\n          const contentType = res.headers.get('Content-Type');\n          if (!contentType.includes('application/json') && !contentType.includes('text/json')) {\n            throw new APIError(\n              `Your Git Gateway backend is not returning valid settings. Please make sure it is enabled.`,\n              res.status,\n              'Git Gateway',\n            );\n          }\n\n          const body = await res.json();\n\n          if (!res.ok) {\n            throw new APIError(\n              `Git Gateway Error: ${body.message ? body.message : body}`,\n              res.status,\n              'Git Gateway',\n            );\n          }\n\n          return body;\n        });\n        this.acceptRoles = roles;\n        if (github_enabled) {\n          this.backendType = 'github';\n        } else if (gitlab_enabled) {\n          this.backendType = 'gitlab';\n        } else if (bitbucket_enabled) {\n          this.backendType = 'bitbucket';\n        }\n      }\n\n      if (this.acceptRoles && this.acceptRoles.length > 0) {\n        const userRoles = get(jwtDecode(token), 'app_metadata.roles', []);\n        const validRole = intersection(userRoles, this.acceptRoles).length > 0;\n        if (!validRole) {\n          throw new Error(\"You don't have sufficient permissions to access Netlify CMS\");\n        }\n      }\n\n      const userData = {\n        name: user.user_metadata.full_name || user.email.split('@').shift(),\n        email: user.email,\n        avatar_url: user.user_metadata.avatar_url,\n        metadata: user.user_metadata,\n      };\n      const apiConfig = {\n        api_root: `${this.gatewayUrl}/${this.backendType}`,\n        branch: this.branch,\n        tokenPromise: this.tokenPromise,\n        commitAuthor: pick(userData, ['name', 'email']),\n        squash_merges: this.squash_merges,\n        initialWorkflowStatus: this.options.initialWorkflowStatus,\n      };\n\n      if (this.backendType === 'github') {\n        this.api = new GitHubAPI(apiConfig);\n        this.backend = new GitHubBackend(this.config, { ...this.options, API: this.api });\n      } else if (this.backendType === 'gitlab') {\n        this.api = new GitLabAPI(apiConfig);\n        this.backend = new GitLabBackend(this.config, { ...this.options, API: this.api });\n      } else if (this.backendType === 'bitbucket') {\n        this.api = new BitBucketAPI({\n          ...apiConfig,\n          requestFunction: this.requestFunction,\n          hasWriteAccess: async () => true,\n        });\n        this.backend = new BitbucketBackend(this.config, { ...this.options, API: this.api });\n      }\n\n      if (!(await this.api.hasWriteAccess())) {\n        throw new Error(\"You don't have sufficient permissions to access Netlify CMS\");\n      }\n    });\n  }\n  restoreUser() {\n    const user = this.authClient && this.authClient.currentUser();\n    if (!user) return Promise.reject();\n    return this.authenticate(user);\n  }\n  authComponent() {\n    return AuthenticationPage;\n  }\n  logout() {\n    if (window.netlifyIdentity) {\n      return window.netlifyIdentity.logout();\n    }\n    const user = this.authClient.currentUser();\n    return user && user.logout();\n  }\n  getToken() {\n    return this.tokenPromise();\n  }\n\n  entriesByFolder(collection, extension) {\n    return this.backend.entriesByFolder(collection, extension);\n  }\n  entriesByFiles(collection) {\n    return this.backend.entriesByFiles(collection);\n  }\n  fetchFiles(files) {\n    return this.backend.fetchFiles(files);\n  }\n  getEntry(collection, slug, path) {\n    return this.backend.getEntry(collection, slug, path);\n  }\n\n  getMedia() {\n    return Promise.all([this.backend.getMedia(), this.getLargeMediaClient()]).then(\n      async ([mediaFiles, largeMediaClient]) => {\n        if (!largeMediaClient.enabled) {\n          return mediaFiles;\n        }\n        const largeMediaDisplayURLs = await this.getLargeMediaDisplayURLs(mediaFiles);\n        return mediaFiles.map(({ id, displayURL, path, ...rest }) => {\n          return {\n            ...rest,\n            id,\n            path,\n            displayURL: {\n              path,\n              original: displayURL,\n              largeMedia: largeMediaDisplayURLs[id],\n            },\n          };\n        });\n      },\n    );\n  }\n\n  // this method memoizes this._getLargeMediaClient so that there can\n  // only be one client at a time\n  getLargeMediaClient() {\n    if (this._largeMediaClientPromise) {\n      return this._largeMediaClientPromise;\n    }\n    this._largeMediaClientPromise = this._getLargeMediaClient();\n    return this._largeMediaClientPromise;\n  }\n  _getLargeMediaClient() {\n    const netlifyLargeMediaEnabledPromise = this.api\n      .readFile('.lfsconfig')\n      .then(ini.decode)\n      .then(({ lfs: { url } }) => new URL(url))\n      .then(lfsURL => ({ enabled: lfsURL.hostname.endsWith('netlify.com') }))\n      .catch(err => ({ enabled: false, err }));\n\n    const lfsPatternsPromise = this.api\n      .readFile('.gitattributes')\n      .then(getLargeMediaPatternsFromGitAttributesFile)\n      .then(patterns => ({ patterns }))\n      .catch(err => (err.message.includes('404') ? [] : { err }));\n\n    return Promise.all([netlifyLargeMediaEnabledPromise, lfsPatternsPromise]).then(\n      ([{ enabled: maybeEnabled }, { patterns, err: patternsErr }]) => {\n        const enabled = maybeEnabled && !patternsErr;\n\n        // We expect LFS patterns to exist when the .lfsconfig states\n        // that we're using Netlify Large Media\n        if (maybeEnabled && patternsErr) {\n          console.error(patternsErr);\n        }\n\n        return getClient({\n          enabled,\n          rootURL: this.netlifyLargeMediaURL,\n          makeAuthorizedRequest: this.requestFunction,\n          patterns,\n          transformImages: this.config.getIn(\n            ['backend', 'use_large_media_transforms_in_media_library'],\n            true,\n          )\n            ? { nf_resize: 'fit', w: 560, h: 320 }\n            : false,\n        });\n      },\n    );\n  }\n  async getLargeMediaDisplayURLs(mediaFiles) {\n    const client = await this.getLargeMediaClient();\n    const largeMediaItems = mediaFiles\n      .filter(({ path }) => client.matchPath(path))\n      .map(({ id, path }) => ({ path, sha: id }));\n    return this.backend\n      .fetchFiles(largeMediaItems)\n      .then(items =>\n        items.map(({ file: { sha }, data }) => {\n          const parsedPointerFile = parsePointerFile(data);\n          return [\n            {\n              pointerId: sha,\n              resourceId: parsedPointerFile.sha,\n            },\n            parsedPointerFile,\n          ];\n        }),\n      )\n      .then(unzip)\n      .then(([idMaps, files]) =>\n        Promise.all([idMaps, client.getResourceDownloadURLArgs(files).then(fromPairs)]),\n      )\n      .then(([idMaps, resourceMap]) =>\n        idMaps.map(({ pointerId, resourceId }) => [pointerId, resourceMap[resourceId]]),\n      )\n      .then(fromPairs);\n  }\n\n  getMediaDisplayURL(displayURL) {\n    const { path, original, largeMedia: largeMediaDisplayURL } = displayURL;\n    return this.getLargeMediaClient().then(client => {\n      if (client.enabled && client.matchPath(path)) {\n        return client.getDownloadURL(largeMediaDisplayURL);\n      }\n      if (typeof original === 'string') {\n        return original;\n      }\n      if (this.backend.getMediaDisplayURL) {\n        return this.backend.getMediaDisplayURL(original);\n      }\n      const err = new Error(\n        `getMediaDisplayURL is not implemented by the ${\n          this.backendType\n        } backend, but the backend returned a displayURL which was not a string!`,\n      );\n      err.displayURL = displayURL;\n      return Promise.reject(err);\n    });\n  }\n\n  async getPointerFileForMediaFileObj(fileObj) {\n    const client = await this.getLargeMediaClient();\n    const { name, size } = fileObj;\n    const sha = await getBlobSHA(fileObj);\n    await client.uploadResource({ sha, size }, fileObj);\n    const pointerFileString = createPointerFile({ sha, size });\n    const pointerFileBlob = new Blob([pointerFileString]);\n    const pointerFile = new File([pointerFileBlob], name, { type: 'text/plain' });\n    const pointerFileSHA = await getBlobSHA(pointerFile);\n    return {\n      file: pointerFile,\n      blob: pointerFileBlob,\n      sha: pointerFileSHA,\n      raw: pointerFileString,\n    };\n  }\n\n  async persistEntry(entry, mediaFiles, options) {\n    const client = await this.getLargeMediaClient();\n    if (!client.enabled) {\n      return this.backend.persistEntry(entry, mediaFiles, options);\n    }\n\n    const largeMediaFilteredMediaFiles = await Promise.all(\n      mediaFiles.map(async mediaFile => {\n        const { fileObj, path } = mediaFile;\n        const fixedPath = path.startsWith('/') ? path.slice(1) : path;\n        if (!client.matchPath(fixedPath)) {\n          return mediaFile;\n        }\n\n        const pointerFileDetails = await this.getPointerFileForMediaFileObj(fileObj);\n        return {\n          ...mediaFile,\n          fileObj: pointerFileDetails.file,\n          size: pointerFileDetails.blob.size,\n          sha: pointerFileDetails.sha,\n          raw: pointerFileDetails.raw,\n        };\n      }),\n    );\n\n    return this.backend.persistEntry(entry, largeMediaFilteredMediaFiles, options);\n  }\n\n  async persistMedia(mediaFile, options) {\n    const { fileObj, path, value } = mediaFile;\n    const displayURL = URL.createObjectURL(fileObj);\n    const client = await this.getLargeMediaClient();\n    const fixedPath = path.startsWith('/') ? path.slice(1) : path;\n    if (!client.enabled || !client.matchPath(fixedPath)) {\n      return this.backend.persistMedia(mediaFile, options);\n    }\n\n    const pointerFileDetails = await this.getPointerFileForMediaFileObj(fileObj);\n    const persistMediaArgument = {\n      fileObj: pointerFileDetails.file,\n      size: pointerFileDetails.blob.size,\n      path,\n      sha: pointerFileDetails.sha,\n      raw: pointerFileDetails.raw,\n      value,\n    };\n    return {\n      ...(await this.backend.persistMedia(persistMediaArgument, options)),\n      displayURL,\n    };\n  }\n  deleteFile(path, commitMessage, options) {\n    return this.backend.deleteFile(path, commitMessage, options);\n  }\n  getDeployPreview(collection, slug) {\n    if (this.backend.getDeployPreview) {\n      return this.backend.getDeployPreview(collection, slug);\n    }\n  }\n  unpublishedEntries() {\n    return this.backend.unpublishedEntries();\n  }\n  unpublishedEntry(collection, slug) {\n    return this.backend.unpublishedEntry(collection, slug);\n  }\n  updateUnpublishedEntryStatus(collection, slug, newStatus) {\n    return this.backend.updateUnpublishedEntryStatus(collection, slug, newStatus);\n  }\n  deleteUnpublishedEntry(collection, slug) {\n    return this.backend.deleteUnpublishedEntry(collection, slug);\n  }\n  publishUnpublishedEntry(collection, slug) {\n    return this.backend.publishUnpublishedEntry(collection, slug);\n  }\n  traverseCursor(cursor, action) {\n    return this.backend.traverseCursor(cursor, action);\n  }\n}\n"],"file":"implementation.js"}