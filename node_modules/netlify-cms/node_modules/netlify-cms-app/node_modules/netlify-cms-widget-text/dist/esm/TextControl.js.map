{"version":3,"sources":["../../src/TextControl.js"],"names":["TextControl","React","Component","shouldComponentUpdate","render","props","forID","value","onChange","classNameWrapper","setActiveStyle","setInactiveStyle","minHeight","e","target","PropTypes","func","isRequired","string","node"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;AAEe,MAAMA,WAAN,SAA0BC,eAAMC,SAAhC,CAA0C;AAcvD;;;;;;;AAOAC,EAAAA,qBAAqB,GAAG;AACtB,WAAO,IAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAQH,KAAKC,KARF;AAAA,UAELC,KAFK,eAELA,KAFK;AAAA,UAGLC,KAHK,eAGLA,KAHK;AAAA,UAILC,SAJK,eAILA,QAJK;AAAA,UAKLC,gBALK,eAKLA,gBALK;AAAA,UAMLC,cANK,eAMLA,cANK;AAAA,UAOLC,gBAPK,eAOLA,gBAPK;AAUP,WACE,eAAC,8BAAD;AACE,MAAA,EAAE,EAAEL,KADN;AAEE,MAAA,KAAK,EAAEC,KAAK,IAAI,EAFlB;AAGE,MAAA,SAAS,EAAEE,gBAHb;AAIE,MAAA,OAAO,EAAEC,cAJX;AAKE,MAAA,MAAM,EAAEC,gBALV;AAME,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OANT;AAOE,MAAA,GAAG,MAPL;AAQE,MAAA,QAAQ,EAAEC,CAAC,IAAIL,SAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV;AARzB,MADF;AAYD;;AA/CsD;;;;gBAApCP,W,eACA;AACjBQ,EAAAA,QAAQ,EAAEO,mBAAUC,IAAV,CAAeC,UADR;AAEjBX,EAAAA,KAAK,EAAES,mBAAUG,MAFA;AAGjBX,EAAAA,KAAK,EAAEQ,mBAAUI,IAHA;AAIjBV,EAAAA,gBAAgB,EAAEM,mBAAUG,MAAV,CAAiBD,UAJlB;AAKjBP,EAAAA,cAAc,EAAEK,mBAAUC,IAAV,CAAeC,UALd;AAMjBN,EAAAA,gBAAgB,EAAEI,mBAAUC,IAAV,CAAeC;AANhB,C;;gBADAjB,W,kBAUG;AACpBO,EAAAA,KAAK,EAAE;AADa,C","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from 'react-textarea-autosize';\n\nexport default class TextControl extends React.Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    forID: PropTypes.string,\n    value: PropTypes.node,\n    classNameWrapper: PropTypes.string.isRequired,\n    setActiveStyle: PropTypes.func.isRequired,\n    setInactiveStyle: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    value: '',\n  };\n\n  /**\n   * Always update to ensure `react-textarea-autosize` properly calculates\n   * height. Certain situations, such as this widget being nested in a list\n   * item that gets rearranged, can leave the textarea in a minimal height\n   * state. Always updating this particular widget should generally be low cost,\n   * but this should be optimized in the future.\n   */\n  shouldComponentUpdate() {\n    return true;\n  }\n\n  render() {\n    const {\n      forID,\n      value,\n      onChange,\n      classNameWrapper,\n      setActiveStyle,\n      setInactiveStyle,\n    } = this.props;\n\n    return (\n      <Textarea\n        id={forID}\n        value={value || ''}\n        className={classNameWrapper}\n        onFocus={setActiveStyle}\n        onBlur={setInactiveStyle}\n        style={{ minHeight: '140px' }}\n        css={{ fontFamily: 'inherit' }}\n        onChange={e => onChange(e.target.value)}\n      />\n    );\n  }\n}\n"],"file":"TextControl.js"}