{"version":3,"sources":["../../src/RelationControl.js"],"names":["optionToString","option","value","convertToOption","raw","label","Map","isMap","toJS","getSelectedValue","options","isMultiple","selectedOptions","List","isList","Array","isArray","map","i","find","o","filter","Boolean","RelationControl","React","Component","selectedOption","props","onChange","field","get","data","hits","valueField","displayField","hit","key","join","term","callback","query","forID","collection","searchFields","searchFieldsArray","then","payload","parseHitOptions","response","allOptions","slice","shouldComponentUpdate","nextProps","hasActiveStyle","queryHits","componentDidUpdate","prevProps","didInitialSearch","listValue","forEach","val","render","classNameWrapper","setActiveStyle","setInactiveStyle","isClearable","selectedValue","loadOptions","handleChange","reactSelectStyles","PropTypes","func","isRequired","string","node","ImmutablePropTypes","fetchID","oneOfType","array","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport AsyncSelect from 'react-select/lib/Async';\nimport { find, isEmpty, last, debounce } from 'lodash';\nimport { List, Map, fromJS } from 'immutable';\nimport { reactSelectStyles } from 'netlify-cms-ui-default';\n\nfunction optionToString(option) {\n  return option && option.value ? option.value : '';\n}\n\nfunction convertToOption(raw) {\n  if (typeof raw === 'string') {\n    return { label: raw, value: raw };\n  }\n  return Map.isMap(raw) ? raw.toJS() : raw;\n}\n\nfunction getSelectedValue({ value, options, isMultiple }) {\n  if (isMultiple) {\n    const selectedOptions = List.isList(value) ? value.toJS() : value;\n\n    if (!selectedOptions || !Array.isArray(selectedOptions)) {\n      return null;\n    }\n\n    return selectedOptions\n      .map(i => options.find(o => o.value === (i.value || i)))\n      .filter(Boolean)\n      .map(convertToOption);\n  } else {\n    return find(options, ['value', value]) || null;\n  }\n}\n\nexport default class RelationControl extends React.Component {\n  didInitialSearch = false;\n\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    forID: PropTypes.string.isRequired,\n    value: PropTypes.node,\n    field: ImmutablePropTypes.map,\n    fetchID: PropTypes.string,\n    query: PropTypes.func.isRequired,\n    queryHits: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    classNameWrapper: PropTypes.string.isRequired,\n    setActiveStyle: PropTypes.func.isRequired,\n    setInactiveStyle: PropTypes.func.isRequired,\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return (\n      this.props.value !== nextProps.value ||\n      this.props.hasActiveStyle !== nextProps.hasActiveStyle ||\n      this.props.queryHits !== nextProps.queryHits\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    /**\n     * Load extra post data into the store after first query.\n     */\n    if (this.didInitialSearch) return;\n    const { value, field, forID, queryHits, onChange } = this.props;\n\n    if (queryHits !== prevProps.queryHits && queryHits.get(forID)) {\n      this.didInitialSearch = true;\n      const valueField = field.get('valueField');\n      const hits = queryHits.get(forID);\n      if (value) {\n        const listValue = List.isList(value) ? value : List([value]);\n        listValue.forEach(val => {\n          const hit = hits.find(i => i.data[valueField] === val);\n          if (hit) {\n            onChange(value, {\n              [field.get('name')]: {\n                [field.get('collection')]: { [val]: hit.data },\n              },\n            });\n          }\n        });\n      }\n    }\n  }\n\n  handleChange = selectedOption => {\n    const { onChange, field } = this.props;\n    let value;\n\n    if (Array.isArray(selectedOption)) {\n      value = selectedOption.map(optionToString);\n      onChange(fromJS(value), {\n        [field.get('name')]: {\n          [field.get('collection')]: {\n            [last(value)]: !isEmpty(selectedOption) && last(selectedOption).data,\n          },\n        },\n      });\n    } else {\n      value = optionToString(selectedOption);\n      onChange(value, {\n        [field.get('name')]: {\n          [field.get('collection')]: { [value]: selectedOption.data },\n        },\n      });\n    }\n  };\n\n  parseHitOptions = hits => {\n    const { field } = this.props;\n    const valueField = field.get('valueField');\n    const displayField = field.get('displayFields') || field.get('valueField');\n\n    return hits.map(hit => {\n      return {\n        data: hit.data,\n        value: hit.data[valueField],\n        label: List.isList(displayField)\n          ? displayField\n              .toJS()\n              .map(key => hit.data[key])\n              .join(' ')\n          : hit.data[displayField],\n      };\n    });\n  };\n\n  loadOptions = debounce((term, callback) => {\n    const { field, query, forID } = this.props;\n    const collection = field.get('collection');\n    const searchFields = field.get('searchFields');\n    const searchFieldsArray = List.isList(searchFields) ? searchFields.toJS() : [searchFields];\n\n    query(forID, collection, searchFieldsArray, term).then(({ payload }) => {\n      let options = this.parseHitOptions(payload.response.hits);\n\n      if (!this.allOptions && !term) {\n        this.allOptions = options;\n      }\n\n      if (!term) {\n        options = options.slice(0, 20);\n      }\n\n      callback(options);\n    });\n  }, 500);\n\n  render() {\n    const {\n      value,\n      field,\n      forID,\n      classNameWrapper,\n      setActiveStyle,\n      setInactiveStyle,\n      queryHits,\n    } = this.props;\n    const isMultiple = field.get('multiple', false);\n    const isClearable = !field.get('required', true) || isMultiple;\n\n    const hits = queryHits.get(forID, []);\n    const options = this.allOptions || this.parseHitOptions(hits);\n    const selectedValue = getSelectedValue({\n      options,\n      value,\n      isMultiple,\n    });\n\n    return (\n      <AsyncSelect\n        value={selectedValue}\n        inputId={forID}\n        defaultOptions\n        loadOptions={this.loadOptions}\n        onChange={this.handleChange}\n        className={classNameWrapper}\n        onFocus={setActiveStyle}\n        onBlur={setInactiveStyle}\n        styles={reactSelectStyles}\n        isMulti={isMultiple}\n        isClearable={isClearable}\n        placeholder=\"\"\n      />\n    );\n  }\n}\n"],"file":"RelationControl.js"}