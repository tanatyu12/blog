{"version":3,"sources":["../../src/Dropdown.js"],"names":["StyledWrapper","Wrapper","StyledDropdownButton","DropdownButton","buttons","button","default","components","caretDown","DropdownList","dropdownList","props","css","width","top","position","StyledMenuItem","MenuItem","dropdownItem","MenuItemIconContainer","Dropdown","renderButton","dropdownWidth","dropdownPosition","dropdownTopOverlap","className","children","handler","propTypes","PropTypes","func","isRequired","string","node","DropdownItem","label","icon","iconDirection","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { Wrapper, Button as DropdownButton, Menu, MenuItem } from 'react-aria-menubutton';\nimport { buttons, components } from './styles';\nimport Icon from './Icon';\n\nconst StyledWrapper = styled(Wrapper)`\n  position: relative;\n  font-size: 14px;\n  user-select: none;\n`;\n\nconst StyledDropdownButton = styled(DropdownButton)`\n  ${buttons.button};\n  ${buttons.default};\n  display: block;\n  padding-left: 20px;\n  padding-right: 40px;\n\n  &:after {\n    ${components.caretDown};\n    content: '';\n    display: block;\n    position: absolute;\n    top: 16px;\n    right: 16px;\n    color: currentColor;\n  }\n`;\n\nconst DropdownList = styled.ul`\n  ${components.dropdownList};\n  margin: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  min-width: 100%;\n  z-index: 1;\n\n  ${props => css`\n    width: ${props.width};\n    top: ${props.top};\n    left: ${props.position === 'left' ? 0 : 'auto'};\n    right: ${props.position === 'right' ? 0 : 'auto'};\n  `};\n`;\n\nconst StyledMenuItem = styled(MenuItem)`\n  ${components.dropdownItem};\n`;\n\nconst MenuItemIconContainer = styled.div`\n  flex: 1 0 32px;\n  text-align: right;\n  position: relative;\n  top: 2px;\n`;\n\nconst Dropdown = ({\n  renderButton,\n  dropdownWidth = 'auto',\n  dropdownPosition = 'left',\n  dropdownTopOverlap = '0',\n  className,\n  children,\n}) => {\n  return (\n    <StyledWrapper onSelection={handler => handler()} className={className}>\n      {renderButton()}\n      <Menu>\n        <DropdownList width={dropdownWidth} top={dropdownTopOverlap} position={dropdownPosition}>\n          {children}\n        </DropdownList>\n      </Menu>\n    </StyledWrapper>\n  );\n};\n\nDropdown.propTypes = {\n  renderButton: PropTypes.func.isRequired,\n  dropdownWidth: PropTypes.string,\n  dropdownPosition: PropTypes.string,\n  dropdownTopOverlap: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nconst DropdownItem = ({ label, icon, iconDirection, onClick, className }) => (\n  <StyledMenuItem value={onClick} className={className}>\n    <span>{label}</span>\n    {icon ? (\n      <MenuItemIconContainer>\n        <Icon type={icon} direction={iconDirection} size=\"small\" />\n      </MenuItemIconContainer>\n    ) : null}\n  </StyledMenuItem>\n);\n\nDropdownItem.propTypes = {\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  iconDirection: PropTypes.string,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n};\n\nexport { Dropdown as default, DropdownItem, DropdownButton, StyledDropdownButton };\n"],"file":"Dropdown.js"}