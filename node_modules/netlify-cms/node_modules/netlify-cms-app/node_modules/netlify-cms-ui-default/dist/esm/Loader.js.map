{"version":3,"sources":["../../src/Loader.js"],"names":["styles","disabled","active","enter","enterActive","exit","exitActive","animations","loader","keyframes","LoaderText","LoaderItem","Loader","React","Component","currentItem","interval","children","props","setInterval","nextItem","state","length","setState","Array","isArray","setAnimation","componentWillUnmount","clearInterval","render","className","renderChild","PropTypes","node","string","StyledLoader","colors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css, keyframes } from '@emotion/core';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport { colors } from './styles';\n\nconst styles = {\n  disabled: css`\n    display: none;\n  `,\n  active: css`\n    display: block;\n  `,\n  enter: css`\n    opacity: 0.01;\n  `,\n  enterActive: css`\n    opacity: 1;\n    transition: opacity 500ms ease-in;\n  `,\n  exit: css`\n    opacity: 1;\n  `,\n  exitActive: css`\n    opacity: 0.01;\n    transition: opacity 300ms ease-in;\n  `,\n};\n\nconst animations = {\n  loader: keyframes`\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  `,\n};\n\nconst LoaderText = styled.div`\n  width: auto !important;\n  height: auto !important;\n  text-align: center;\n  color: #767676;\n  margin-top: 55px;\n  line-height: 35px;\n`;\n\nconst LoaderItem = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  transform: translateX(-50%);\n`;\n\nexport class Loader extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n  };\n\n  state = {\n    currentItem: 0,\n  };\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  setAnimation = () => {\n    if (this.interval) return;\n    const { children } = this.props;\n\n    this.interval = setInterval(() => {\n      const nextItem =\n        this.state.currentItem === children.length - 1 ? 0 : this.state.currentItem + 1;\n      this.setState({ currentItem: nextItem });\n    }, 5000);\n  };\n\n  renderChild = () => {\n    const { children } = this.props;\n    const { currentItem } = this.state;\n    if (!children) {\n      return null;\n    } else if (typeof children == 'string') {\n      return <LoaderText>{children}</LoaderText>;\n    } else if (Array.isArray(children)) {\n      this.setAnimation();\n      return (\n        <LoaderText>\n          <CSSTransition\n            classNames={{\n              enter: styles.enter,\n              enterActive: styles.enterActive,\n              exit: styles.exit,\n              exitActive: styles.exitActive,\n            }}\n            timeout={500}\n          >\n            <LoaderItem key={currentItem}>{children[currentItem]}</LoaderItem>\n          </CSSTransition>\n        </LoaderText>\n      );\n    }\n  };\n\n  render() {\n    const { className } = this.props;\n    return <div className={className}>{this.renderChild()}</div>;\n  }\n}\n\nconst StyledLoader = styled(Loader)`\n  display: ${props => (props.active ? 'block' : 'none')};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: 0px;\n  text-align: center;\n  z-index: 1000;\n  transform: translateX(-50%) translateY(-50%);\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0%;\n    left: 50%;\n    width: 2.28571429rem;\n    height: 2.28571429rem;\n    margin: 0em 0em 0em -1.14285714rem;\n    border-radius: 500rem;\n    border-style: solid;\n    border-width: 0.2em;\n  }\n\n  /* Static Shape */\n  &:before {\n    border-color: rgba(0, 0, 0, 0.1);\n  }\n\n  /* Active Shape */\n  &:after {\n    animation: ${animations.loader} 0.6s linear;\n    animation-iteration-count: infinite;\n    border-color: ${colors.active} transparent transparent;\n    box-shadow: 0px 0px 0px 1px transparent;\n  }\n`;\n\nexport default StyledLoader;\n"],"file":"Loader.js"}