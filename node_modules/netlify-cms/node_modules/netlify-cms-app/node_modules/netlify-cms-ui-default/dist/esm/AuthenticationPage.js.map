{"version":3,"sources":["../../src/AuthenticationPage.js"],"names":["StyledAuthenticationPage","CustomIconWrapper","NetlifyLogoIcon","Icon","NetlifyCreditIcon","CustomLogoIcon","url","renderPageLogo","logoUrl","LoginButton","buttons","button","shadows","dropDeep","default","gray","disabled","AuthenticationPage","onLogin","loginDisabled","loginErrorMessage","renderButtonContent","renderPageContent","propTypes","PropTypes","func","string","bool","node"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEA,MAAMA,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA9B;AAQA,MAAMC,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAvB;AAMA,MAAMC,eAAe,GAAG;AAAA;AAAA,wBAAOC,aAAP;AAAA;AAAA;AAAA,EAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAArB;AAKA,MAAMC,iBAAiB,GAAG;AAAA;AAAA,wBAAOD,aAAP;AAAA;AAAA;AAAA,EAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAvB;;AAMA,MAAME,cAAc,GAAG,UAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAClC,SACE,6BAAC,iBAAD,QACE;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,GAAG,EAAC;AAAnB,IADF,CADF;AAKD,CAND;;AAQA,MAAMC,cAAc,GAAGC,OAAO,IAAI;AAChC,MAAIA,OAAJ,EAAa;AACX,WAAO,6BAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA;AAArB,MAAP;AACD;;AACD,SAAO,6BAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,OAAtB;AAA8B,IAAA,IAAI,EAAC;AAAnC,IAAP;AACD,CALD;;AAOA,MAAMC,WAAW;AAAA;AAAA;AAAA,GACbC,gBAAQC,MADK,OAEbC,gBAAQC,QAFK,OAGbH,gBAAQI,OAHK,OAIbJ,gBAAQK,IAJK,mBAMXL,gBAAQM,QANG,wxGAAjB;;AAgBA,MAAMC,kBAAkB,GAAG,WAOrB;AAAA,MANJC,OAMI,SANJA,OAMI;AAAA,MALJC,aAKI,SALJA,aAKI;AAAA,MAJJC,iBAII,SAJJA,iBAII;AAAA,MAHJC,mBAGI,SAHJA,mBAGI;AAAA,MAFJC,iBAEI,SAFJA,iBAEI;AAAA,MADJd,OACI,SADJA,OACI;AACJ,SACE,6BAAC,wBAAD,QACGD,cAAc,CAACC,OAAD,CADjB,EAEGY,iBAAiB,GAAG,wCAAIA,iBAAJ,CAAH,GAAgC,IAFpD,EAGG,CAACE,iBAAD,GAAqB,IAArB,GAA4BA,iBAAiB,EAHhD,EAIG,CAACD,mBAAD,GAAuB,IAAvB,GACC,6BAAC,WAAD;AAAa,IAAA,QAAQ,EAAEF,aAAvB;AAAsC,IAAA,OAAO,EAAED;AAA/C,KACGG,mBAAmB,EADtB,CALJ,EASGb,OAAO,GAAG,6BAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,IAAI,EAAC;AAArC,IAAH,GAA2D,IATrE,CADF;AAaD,CArBD;;AAuBAS,kBAAkB,CAACM,SAAnB,GAA+B;AAC7BL,EAAAA,OAAO,EAAEM,mBAAUC,IADU;AAE7BjB,EAAAA,OAAO,EAAEgB,mBAAUE,MAFU;AAG7BP,EAAAA,aAAa,EAAEK,mBAAUG,IAHI;AAI7BP,EAAAA,iBAAiB,EAAEI,mBAAUI,IAJA;AAK7BP,EAAAA,mBAAmB,EAAEG,mBAAUC,IALF;AAM7BH,EAAAA,iBAAiB,EAAEE,mBAAUC;AANA,CAA/B;eASeR,kB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport Icon from './Icon';\nimport { buttons, shadows } from './styles';\n\nconst StyledAuthenticationPage = styled.section`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nconst CustomIconWrapper = styled.span`\n  width: 300px;\n  height: 200px;\n  margin-top: -150px;\n`;\n\nconst NetlifyLogoIcon = styled(Icon)`\n  color: #c4c6d2;\n  margin-top: -300px;\n`;\n\nconst NetlifyCreditIcon = styled(Icon)`\n  color: #c4c6d2;\n  position: absolute;\n  bottom: 10px;\n`;\n\nconst CustomLogoIcon = ({ url }) => {\n  return (\n    <CustomIconWrapper>\n      <img src={url} alt=\"Logo\" />\n    </CustomIconWrapper>\n  );\n};\n\nconst renderPageLogo = logoUrl => {\n  if (logoUrl) {\n    return <CustomLogoIcon url={logoUrl} />;\n  }\n  return <NetlifyLogoIcon size=\"300px\" type=\"netlify-cms\" />;\n};\n\nconst LoginButton = styled.button`\n  ${buttons.button};\n  ${shadows.dropDeep};\n  ${buttons.default};\n  ${buttons.gray};\n  &[disabled] {\n    ${buttons.disabled};\n  }\n\n  padding: 0 12px;\n  margin-top: -40px;\n  display: flex;\n  align-items: center;\n  position: relative;\n`;\n\nconst AuthenticationPage = ({\n  onLogin,\n  loginDisabled,\n  loginErrorMessage,\n  renderButtonContent,\n  renderPageContent,\n  logoUrl,\n}) => {\n  return (\n    <StyledAuthenticationPage>\n      {renderPageLogo(logoUrl)}\n      {loginErrorMessage ? <p>{loginErrorMessage}</p> : null}\n      {!renderPageContent ? null : renderPageContent()}\n      {!renderButtonContent ? null : (\n        <LoginButton disabled={loginDisabled} onClick={onLogin}>\n          {renderButtonContent()}\n        </LoginButton>\n      )}\n      {logoUrl ? <NetlifyCreditIcon size=\"100px\" type=\"netlify-cms\" /> : null}\n    </StyledAuthenticationPage>\n  );\n};\n\nAuthenticationPage.propTypes = {\n  onLogin: PropTypes.func,\n  logoUrl: PropTypes.string,\n  loginDisabled: PropTypes.bool,\n  loginErrorMessage: PropTypes.node,\n  renderButtonContent: PropTypes.func,\n  renderPageContent: PropTypes.func,\n};\n\nexport default AuthenticationPage;\n"],"file":"AuthenticationPage.js"}