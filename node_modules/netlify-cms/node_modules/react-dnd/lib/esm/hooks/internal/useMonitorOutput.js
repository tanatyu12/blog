import { useEffect } from 'react';
import { useCollector } from './useCollector';
export function useMonitorOutput(monitor, collect) {
    const [collected, updateCollected] = useCollector(monitor, collect);
    // This runs on every render. There will be ways to optimise this, but for
    // now, this is the most correct thing to do.
    useEffect(function subscribeToMonitorStateChange() {
        const handlerId = monitor.getHandlerId();
        if (handlerId == null) {
            return undefined;
        }
        return monitor.subscribeToStateChange(updateCollected, {
            handlerIds: [handlerId],
        });
    });
    return collected;
}
