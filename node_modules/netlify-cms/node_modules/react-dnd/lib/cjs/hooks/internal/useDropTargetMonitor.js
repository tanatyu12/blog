"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var DropTargetMonitorImpl_1 = require("../../DropTargetMonitorImpl");
var registerTarget_1 = require("../../registerTarget");
function useDropTargetMonitor(manager, targetSpec) {
    var targetSpecRef = React.useRef(targetSpec);
    React.useEffect(function updateDropTargetSpec() {
        targetSpecRef.current = targetSpec;
    });
    var monitor = React.useMemo(function () { return new DropTargetMonitorImpl_1.default(manager); }, [
        manager,
    ]);
    React.useEffect(function registerTargetWithMonitor() {
        var _a = registerTarget_1.default(targetSpec.accept, handler, manager), handlerId = _a.handlerId, unregister = _a.unregister;
        monitor.receiveHandlerId(handlerId);
        return unregister;
    }, [monitor]);
    // Can't use createSourceFactory, as semantics are different
    var handler = React.useMemo(function () {
        return ({
            canDrop: function () {
                var canDrop = targetSpecRef.current.canDrop;
                return canDrop ? canDrop(monitor.getItem(), monitor) : true;
            },
            hover: function () {
                var hover = targetSpecRef.current.hover;
                if (hover) {
                    hover(monitor.getItem(), monitor);
                }
            },
            drop: function () {
                var drop = targetSpecRef.current.drop;
                if (drop) {
                    return drop(monitor.getItem(), monitor);
                }
            },
        });
    }, []);
    return monitor;
}
exports.useDropTargetMonitor = useDropTargetMonitor;
